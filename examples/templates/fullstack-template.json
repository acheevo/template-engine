{
  "name": "fullstack-template",
  "type": "fullstack",
  "version": "1.0.0",
  "description": "Fullstack template with Go API backend and React frontend",
  "variables": {
    "Author": {
      "type": "string",
      "required": false,
      "default": "Developer",
      "description": "Project author name"
    },
    "Description": {
      "type": "string",
      "required": false,
      "default": "A fullstack application with Go API and React frontend",
      "description": "Project description"
    },
    "GitHubRepo": {
      "type": "string",
      "required": true,
      "description": "GitHub repository (e.g., username/repo-name)"
    },
    "ProjectName": {
      "type": "string",
      "required": true,
      "description": "Name of the fullstack project"
    }
  },
  "files": [
    {
      "path": ".claude/settings.local.json",
      "template": false,
      "content": "{\n  \"permissions\": {\n    \"allow\": [\n      \"Bash(mkdir:*)\",\n      \"Bash(go mod:*)\",\n      \"Bash(npm install:*)\",\n      \"Bash(make:*)\",\n      \"WebFetch(domain:localhost)\",\n      \"mcp__memory__search_code\",\n      \"mcp__memory__extract_code\",\n      \"Bash(go get:*)\",\n      \"Bash(go build:*)\",\n      \"Bash(find:*)\",\n      \"Bash(npm run type-check:*)\",\n      \"Bash(grep:*)\",\n      \"Bash(go test:*)\",\n      \"Bash(cp:*)\",\n      \"Bash(timeout:*)\",\n      \"Bash(docker-compose logs:*)\",\n      \"Bash(docker-compose:*)\",\n      \"Bash(npm run build:*)\",\n      \"Bash(rm:*)\",\n      \"Bash(go list:*)\"\n    ],\n    \"deny\": []\n  }\n}",
      "size": 610,
      "hash": "b49fbb1918d1ec91ae67aab73f6f5a41854b59fb5bec0095e6d940ae51ced48b"
    },
    {
      "path": ".env.example",
      "template": false,
      "content": "# Server Configuration\nPORT=8080\nENVIRONMENT=development\nLOG_LEVEL=info\n\n# Database Configuration\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\nDATABASE_USER=postgres\nDATABASE_PASSWORD=postgres\nDATABASE_NAME=fullstack_template\nDATABASE_SSL_MODE=disable\n\n# Database Connection Pool\nDB_MAX_IDLE_CONNS=10\nDB_MAX_OPEN_CONNS=100\nDB_CONN_MAX_LIFETIME=1h\n\n# JWT Configuration\nJWT_SECRET=your-super-secret-jwt-key-change-this-in-production\nJWT_ACCESS_TOKEN_DURATION=15m\nJWT_REFRESH_TOKEN_DURATION=7d\n\n# Email Configuration\nEMAIL_FROM=noreply@yourapp.com\nEMAIL_FROM_NAME=Your App\nSMTP_HOST=smtp.gmail.com\nSMTP_PORT=587\nSMTP_USERNAME=your-email@gmail.com\nSMTP_PASSWORD=your-app-password\n\n# Application URLs\nFRONTEND_URL=http://localhost:3000\nBACKEND_URL=http://localhost:8080\n\n# Bootstrap Configuration (Demo Users)\nBOOTSTRAP_ENABLED=true\nADMIN_EMAIL=admin@example.com\nADMIN_PASSWORD=admin123\nDEMO_USER_EMAIL=user@example.com\nDEMO_USER_PASSWORD=user1234",
      "size": 940,
      "hash": "57ff92de1c1702d07889c8011c555cdc14195223980775656d44d0a93e2a5eaf"
    },
    {
      "path": ".github/workflows/ci.yml",
      "template": false,
      "content": "name: CI\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n\nenv:\n  GO_VERSION: '1.23'\n\njobs:\n  test:\n    name: Test\n    runs-on: ubuntu-latest\n    \n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v4\n\n    - name: Set up Go\n      uses: actions/setup-go@v5\n      with:\n        go-version: ${{ env.GO_VERSION }}\n        cache: true\n\n    - name: Install golangci-lint\n      uses: golangci/golangci-lint-action@v7\n      with:\n        version: v2.0.2\n\n    - name: Build\n      run: go build ./cmd/api\n\n    - name: Test\n      run: go test -race ./...\n\n  docker:\n    name: Docker Build\n    runs-on: ubuntu-latest\n    needs: test\n    \n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v4\n\n    - name: Set up Docker Buildx\n      uses: docker/setup-buildx-action@v3\n\n    - name: Build Docker image\n      uses: docker/build-push-action@v5\n      with:\n        context: .\n        push: false\n        tags: fullstack-template:latest\n        cache-from: type=gha\n        cache-to: type=gha,mode=max",
      "size": 1048,
      "hash": "29393c563821c95cbcc248fa8cb80d8ba35bcf5d4ebb39f6ea96ca72dbf6bca7"
    },
    {
      "path": ".github/workflows/docker-release.yml",
      "template": false,
      "content": "name: Docker Release\n\non:\n  push:\n    tags:\n      - 'v*'\n\nenv:\n  GO_VERSION: '1.23'\n\njobs:\n  test:\n    name: Test\n    runs-on: ubuntu-latest\n    \n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v4\n\n    - name: Set up Go\n      uses: actions/setup-go@v5\n      with:\n        go-version: ${{ env.GO_VERSION }}\n        cache: true\n\n    - name: Install golangci-lint\n      uses: golangci/golangci-lint-action@v7\n      with:\n        version: v2.0.2\n\n    - name: Build\n      run: go build ./cmd/api\n\n    - name: Test\n      run: go test -race ./...\n\n  docker-release:\n    name: Docker Release\n    runs-on: ubuntu-latest\n    needs: test\n    \n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v4\n\n    - name: Set up Docker Buildx\n      uses: docker/setup-buildx-action@v3\n\n    - name: Log in to Docker Hub\n      uses: docker/login-action@v3\n      with:\n        username: ${{ secrets.DOCKER_USERNAME }}\n        password: ${{ secrets.DOCKER_TOKEN }}\n\n    - name: Extract tag name\n      id: tag\n      run: echo \"tag=${GITHUB_REF#refs/tags/}\" \u003e\u003e $GITHUB_OUTPUT\n\n    - name: Build and push Docker image\n      uses: docker/build-push-action@v5\n      with:\n        context: .\n        push: true\n        tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}:${{ steps.tag.outputs.tag }}\n        cache-from: type=gha\n        cache-to: type=gha,mode=max",
      "size": 1377,
      "hash": "fc9124ef8a44b0854f5258be0e654fb0d8208a140457468c980ed48977fc3340"
    },
    {
      "path": ".github/workflows/integration-tests.yml",
      "template": false,
      "content": "name: Integration Tests\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main, develop ]\n  workflow_dispatch:\n\njobs:\n  integration-tests:\n    name: Integration Tests\n    runs-on: ubuntu-latest\n    \n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v4\n    \n    - name: Set up Go\n      uses: actions/setup-go@v5\n      with:\n        go-version: '1.23'\n        cache: true\n    \n    - name: Run integration tests\n      run: make test-integration",
      "size": 484,
      "hash": "f41120a9d5f20b773415946f66bd8f9ddc7e8548c1373432169d00f2a26e7d8e"
    },
    {
      "path": ".gitignore",
      "template": false,
      "content": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, built with `go test -c`\n*.test\n\n# Output of the go build program.\n/bin/\n/build/\n\n# Go workspace file\ngo.work\n\n# Dependency directories\nnode_modules/\nvendor/\n\n# Build outputs\n/frontend/dist/\n/frontend/build/\n\n# Environment variables\n.env\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\n\n# Logs\n*.log\nlogs/\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Coverage directory used by tools like istanbul\ncoverage/\n*.coverprofile\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Optional npm cache directory\n.npm\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n\n# IDE files\n.vscode/\n.idea/\n*.swp\n*.swo\n*~\n\n# OS generated files\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nehthumbs.db\nThumbs.db\n\n# Database\n*.db\n*.sqlite\n*.sqlite3\n\n# Temporary files\ntmp/\ntemp/",
      "size": 983,
      "hash": "b0c2da350e7c031470ae7ed7d6e04fbc05a4fe829bb58dc308899aa734e3edf1"
    },
    {
      "path": "CLAUDE.md",
      "template": false,
      "content": "# Fullstack Template - Development Guide\n\nThis document contains development information and commands for working with the fullstack template.\n\n## Quick Commands\n\n### Development\n```bash\n# Install all dependencies\nmake install\n\n# Start development (builds frontend + runs Go server)\nmake frontend-build \u0026\u0026 make dev\n\n# Frontend development server (separate from Go API)\nmake frontend-dev\n\n# Run Go API only\nmake dev\n```\n\n### Building\n```bash\n# Build frontend for production\nmake frontend-build\n\n# Build Go binary\nmake build\n\n# Build everything\nmake build-all\n```\n\n### Testing \u0026 Quality\n```bash\n# Run Go tests\nmake test\n\n# Run Go tests with coverage\nmake test-coverage\n\n# Lint Go code\nmake lint\n\n# Lint frontend code\nmake frontend-lint\n\n# Type check frontend\ncd frontend \u0026\u0026 npm run type-check\n```\n\n### Docker\n```bash\n# Build Docker image\nmake docker-build\n\n# Run with docker-compose (includes PostgreSQL)\ndocker-compose up\n\n# Run container directly\nmake docker-run\n```\n\n## Project Architecture\n\n### Backend (Go)\n- **Clean Architecture**: Domain/Service/Transport layers\n- **Gin Framework**: HTTP router and middleware\n- **GORM**: Database ORM for PostgreSQL\n- **Structured Logging**: Using slog\n- **Health Checks**: Built-in `/api/health` endpoint\n\n### Frontend (React)\n- **React 18**: With TypeScript\n- **Vite**: Fast development and building\n- **Tailwind CSS**: Utility-first styling\n- **Component Architecture**: Layout/Sections/UI separation\n\n### Deployment\n- **Single Binary**: Go server serves both API and frontend\n- **Static Assets**: Frontend built to `/frontend/dist/`\n- **SPA Routing**: All non-API routes serve `index.html`\n\n## Environment Variables\n\nCopy `.env.example` to `.env` and configure:\n\n```bash\n# Server\nPORT=8080\nENVIRONMENT=development\nLOG_LEVEL=info\n\n# Database (optional for development)\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\nDATABASE_USER=postgres\nDATABASE_PASSWORD=postgres\nDATABASE_NAME=fullstack_template\n```\n\n## Common Development Tasks\n\n### Adding New API Endpoints\n1. Create domain types in `internal/{module}/domain/`\n2. Implement business logic in `internal/{module}/service/`\n3. Add HTTP handlers in `internal/{module}/transport/`\n4. Register routes in `internal/http/server.go`\n\n### Adding New React Components\n1. Create components in appropriate directory:\n   - `frontend/src/components/ui/` - Reusable UI components\n   - `frontend/src/components/layout/` - Layout components\n   - `frontend/src/components/sections/` - Page sections\n2. Export from `index.ts` files for clean imports\n3. Use TypeScript interfaces for props\n\n### Database Changes\n1. Update domain models in `internal/{module}/domain/`\n2. Run migrations (implement as needed)\n3. Update repository layer if needed\n\n## Troubleshooting\n\n### Frontend not loading\n- Ensure `make frontend-build` has been run\n- Check that `/frontend/dist/` directory exists\n- Verify Go server is serving static files correctly\n\n### Database connection issues\n- Check environment variables\n- Ensure PostgreSQL is running (use `docker-compose up postgres`)\n- Verify connection string format\n\n### Build issues\n- Run `go mod tidy` to update dependencies\n- Clear frontend node_modules: `rm -rf frontend/node_modules \u0026\u0026 npm install`\n- Check Go and Node versions match requirements\n\n## File Structure Reference\n\n```\n.\n├── cmd/api/main.go           # Application entry point\n├── internal/                 # Private Go code\n│   ├── health/              # Health check module\n│   ├── info/                # App info module  \n│   ├── http/                # HTTP server setup\n│   ├── middleware/          # HTTP middleware\n│   └── shared/              # Shared utilities\n├── frontend/                # React application\n│   ├── src/components/      # React components\n│   ├── src/config/          # Frontend configuration\n│   └── public/              # Static assets\n├── Dockerfile               # Multi-stage build\n├── docker-compose.yml       # Development with PostgreSQL\n└── Makefile                # Development commands\n```\n\nThis template follows patterns from nimbus and api-template projects for consistency and best practices.",
      "size": 4204,
      "hash": "1218f667c26e45e3e01f89f422ca01a9db15ce7f83e3495335368f920a78caa7"
    },
    {
      "path": "Dockerfile",
      "template": false,
      "content": "# Build stage for frontend\nFROM node:18-alpine AS frontend-builder\n\nWORKDIR /app/frontend\n\n# Copy frontend package files\nCOPY frontend/package*.json ./\nRUN npm install\n\n# Copy frontend source and build\nCOPY frontend/ ./\nRUN npm run build\n\n# Build stage for Go backend\nFROM golang:1.23-alpine AS backend-builder\n\nWORKDIR /app\n\n# Install git for go modules\nRUN apk add --no-cache git\n\n# Copy go mod files\nCOPY go.mod go.sum ./\nRUN go mod download\n\n# Copy source code\nCOPY cmd/ ./cmd/\nCOPY internal/ ./internal/\n\n# Build the binary\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main cmd/api/main.go\n\n# Final stage\nFROM alpine:latest\n\n# Install ca-certificates for HTTPS requests\nRUN apk --no-cache add ca-certificates\n\nWORKDIR /root/\n\n# Copy the binary from builder stage\nCOPY --from=backend-builder /app/main .\n\n# Copy the frontend build from frontend-builder stage\nCOPY --from=frontend-builder /app/frontend/dist ./frontend/dist\n\n# Expose port\nEXPOSE 8080\n\n# Set environment variables\nENV ENVIRONMENT=production\nENV PORT=8080\n\n# Run the binary\nCMD [\"./main\"]",
      "size": 1074,
      "hash": "eda95cda8e62d37b2147e813d38fb2bc4528d086a76cc7c6b76c73a4fa2ed4f5"
    },
    {
      "path": "LICENSE",
      "template": false,
      "content": "MIT License\n\nCopyright (c) 2025 Acheevo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "size": 1064,
      "hash": "06e005efe3d8db591fa0e1ef2928a0ec09f48ef8ede1b4063a9eee000d7a4b32"
    },
    {
      "path": "Makefile",
      "template": true,
      "content": "# Development\n.PHONY: dev\ndev:\n\tgo run cmd/api/main.go\n\n# Build\n.PHONY: build\nbuild:\n\tgo build -o bin/api cmd/api/main.go\n\n# Frontend\n.PHONY: frontend-install\nfrontend-install:\n\tcd frontend \u0026\u0026 npm install\n\n.PHONY: frontend-dev\nfrontend-dev:\n\tcd frontend \u0026\u0026 npm run dev\n\n.PHONY: frontend-build\nfrontend-build:\n\tcd frontend \u0026\u0026 npm run build\n\n.PHONY: frontend-lint\nfrontend-lint:\n\tcd frontend \u0026\u0026 npm run lint\n\n# Full stack development\n.PHONY: install\ninstall: frontend-install\n\tgo mod download\n\n.PHONY: build-all\nbuild-all: frontend-build build\n\n# Testing\n.PHONY: test\ntest:\n\tgo test -v -short ./...\n\n.PHONY: test-unit\ntest-unit:\n\tgo test -v -short $(shell go list ./internal/... | grep -v /test/)\n\n.PHONY: test-integration\ntest-integration:\n\tgo test -v -tags=integration ./tests/integration/... -timeout=10m\n\n.PHONY: test-all\ntest-all: test-unit test-integration\n\n.PHONY: test-coverage\ntest-coverage:\n\tgo test -race -coverprofile=coverage.out -covermode=atomic -short ./...\n\tgo tool cover -html=coverage.out\n\n.PHONY: test-integration-coverage\ntest-integration-coverage:\n\tgo test -v -tags=integration -coverprofile=integration-coverage.out ./internal/test/... -timeout=10m\n\tgo tool cover -html=integration-coverage.out -o integration-coverage.html\n\n# Linting\n.PHONY: lint\nlint:\n\tgolangci-lint run\n\n# Clean\n.PHONY: clean\nclean:\n\trm -rf bin/\n\trm -rf frontend/dist/\n\trm -rf frontend/node_modules/\n\n# Docker\n.PHONY: docker-build\ndocker-build:\n\tdocker build -t fullstack-template .\n\n.PHONY: docker-run\ndocker-run:\n\tdocker run -p 8080:8080 fullstack-template\n\n.PHONY: docker-dev\ndocker-dev:\n\t@if [ ! -f .env ]; then \\\n\t\techo \"Creating .env file from .env.example...\"; \\\n\t\tcp .env.example .env; \\\n\tfi\n\tdocker-compose down --remove-orphans\n\tdocker-compose up --build\n\n.PHONY: docker-stop\ndocker-stop:\n\tdocker-compose down\n\n.PHONY: docker-logs\ndocker-logs:\n\tdocker-compose logs -f\n\n.PHONY: docker-clean\ndocker-clean:\n\tdocker-compose down -v --rmi all --remove-orphans",
      "size": 1955,
      "hash": "a9d9723fccfbbc9f6617e4afd34402d159b482b13e5d739595fb5e01eb542110",
      "mappings": [
        {
          "find": "docker build -t fullstack-template",
          "replace": "docker build -t {{.ProjectName | kebab}}"
        },
        {
          "find": "docker rmi fullstack-template",
          "replace": "docker rmi {{.ProjectName | kebab}}"
        }
      ]
    },
    {
      "path": "README.md",
      "template": true,
      "content": "# Fullstack Template\n\nA production-ready fullstack template with comprehensive authentication, RBAC, and user management. Built with React/TypeScript frontend and Go backend, featuring complete security, testing, and monitoring systems.\n\n## ✨ Features\n\n### 🔐 Complete Authentication System\n- **User Registration \u0026 Login** with email verification\n- **Password Management** (reset, change, strength validation)\n- **JWT Authentication** with automatic token refresh\n- **Session Management** with logout from all devices\n- **Account Security** (rate limiting, audit trails)\n\n### 👥 User Management\n- **User Profiles** with preferences and settings\n- **Role-Based Access Control (RBAC)** (user/admin roles)\n- **Account Status Management** (active/inactive/suspended)\n- **User Dashboard** with statistics and activity\n- **Email Notifications** (welcome, verification, password reset)\n\n### 🛡️ Security Features\n- **RBAC Implementation** with role guards and protected routes\n- **Input Validation** and sanitization\n- **Rate Limiting** and DDoS protection\n- **Security Headers** (CORS, XSS protection, etc.)\n- **Audit Logging** for sensitive operations\n- **SQL Injection Protection** with prepared statements\n\n### 🏗️ Architecture\n- **Clean Architecture** with domain-driven design\n- **Structured Logging** with context and request tracking\n- **Health Checks** and monitoring endpoints\n- **Database Migrations** and seeding\n- **Comprehensive Testing** (unit, integration, E2E)\n- **Production Deployment** ready with Docker\n\n### 🎯 Frontend Features\n- **Modern React 18** with TypeScript and Vite\n- **Responsive Design** with Tailwind CSS\n- **Component Library** with reusable UI components\n- **State Management** with Context API\n- **Form Handling** with validation\n- **Protected Routes** and role-based rendering\n\n### 🔧 Developer Experience\n- **Hot Reload** for frontend and backend\n- **Comprehensive Testing** suite with \u003e90% coverage\n- **Code Quality** tools (linting, formatting)\n- **API Documentation** with examples\n- **Development Scripts** for common tasks\n- **Docker Support** for consistent environments\n\n## 🚀 Quick Start (\u003c 15 minutes)\n\n### Prerequisites\n\n- **Go 1.23+** ([Download](https://golang.org/dl/))\n- **Node.js 18+** ([Download](https://nodejs.org/))\n- **PostgreSQL 13+** ([Download](https://postgresql.org/download/))\n- **Git** ([Download](https://git-scm.com/downloads))\n\n### 1. Clone and Setup\n\n```bash\n# Clone the repository\ngit clone https://github.com/your-org/fullstack-template.git\ncd fullstack-template\n\n# Install all dependencies (Go modules + npm packages)\nmake install\n```\n\n### 2. Database Setup\n\n```bash\n# Option A: Using Docker (Recommended)\ndocker-compose up -d postgres\n\n# Option B: Local PostgreSQL\ncreatedb fullstack_template\n```\n\n### 3. Environment Configuration\n\n```bash\n# Copy environment template\ncp .env.example .env\n\n# Edit .env with your settings (database, email, JWT secret)\n# Defaults work with Docker PostgreSQL setup\n```\n\n### 4. Build and Run\n\n```bash\n# Build frontend and start development server\nmake frontend-build \u0026\u0026 make dev\n\n# Or run frontend dev server separately for hot reload\nmake frontend-dev  # Terminal 1 (http://localhost:5173)\nmake dev          # Terminal 2 (API on http://localhost:8080)\n```\n\n### 5. Access the Application\n\n- **Application**: http://localhost:8080\n- **API Health**: http://localhost:8080/api/health\n- **Admin Panel**: http://localhost:8080/admin (after creating admin user)\n\n### 6. Create Admin User\n\n```bash\n# Using the built-in seed command\ngo run cmd/api/main.go --seed-admin\n\n# Or register normally and promote via database:\n# UPDATE users SET role = 'admin' WHERE email = 'your-email@domain.com';\n```\n\n## 📚 Core Concepts\n\n### Authentication Flow\n\n1. **Registration**: User creates account → email verification sent\n2. **Login**: Credentials validated → JWT tokens issued\n3. **Access**: Protected routes check JWT → automatic refresh\n4. **Logout**: Tokens invalidated → audit log created\n\n### Role-Based Access Control\n\n```typescript\n// Frontend: Role-based rendering\n\u003cRoleGuard requiredRole=\"admin\"\u003e\n  \u003cAdminPanel /\u003e\n\u003c/RoleGuard\u003e\n\n// Backend: Route protection\nadminRoutes.Use(middleware.RequireRole(\"admin\"))\n```\n\n### User Management\n\n- **Profile Management**: Name, avatar, preferences\n- **Security Settings**: Password change, session management\n- **Privacy Controls**: Visibility, notification preferences\n- **Audit Trail**: Track all account changes\n\n## 🏗️ Project Structure\n\n```\nfullstack-template/\n├── 📁 cmd/api/                    # Application entry point\n│   └── main.go                   # Server startup and configuration\n├── 📁 internal/                  # Private application code\n│   ├── 📁 auth/                  # Authentication domain\n│   │   ├── domain/              # Types, entities, business rules\n│   │   ├── repository/          # Data access layer\n│   │   ├── service/             # Business logic\n│   │   └── transport/           # HTTP handlers\n│   ├── 📁 user/                  # User management domain\n│   ├── 📁 admin/                 # Admin operations domain\n│   ├── 📁 middleware/            # HTTP middleware\n│   │   ├── auth.go              # JWT authentication\n│   │   ├── rbac.go              # Role-based access control\n│   │   ├── rate_limit.go        # Rate limiting\n│   │   └── security.go          # Security headers\n│   ├── 📁 shared/               # Shared utilities\n│   │   ├── config/              # Configuration management\n│   │   ├── database/            # Database connection \u0026 migrations\n│   │   ├── email/               # Email service (SMTP, templates)\n│   │   ├── logger/              # Structured logging\n│   │   └── monitoring/          # Metrics and health checks\n│   └── 📁 test/integration/     # Integration tests\n├── 📁 frontend/                  # React application\n│   ├── 📁 src/\n│   │   ├── 📁 components/       # React components\n│   │   │   ├── auth/            # Authentication components\n│   │   │   ├── admin/           # Admin components\n│   │   │   ├── ui/              # Reusable UI components\n│   │   │   └── layout/          # Layout components\n│   │   ├── 📁 contexts/         # React contexts (Auth, RBAC)\n│   │   ├── 📁 hooks/            # Custom React hooks\n│   │   ├── 📁 lib/              # API client and utilities\n│   │   ├── 📁 pages/            # Page components\n│   │   ├── 📁 types/            # TypeScript type definitions\n│   │   └── 📁 test/             # Frontend tests\n│   ├── package.json             # NPM dependencies and scripts\n│   └── vitest.config.ts         # Test configuration\n├── 📁 docs/                     # Documentation\n├── 🐳 docker-compose.yml        # Development environment\n├── 🐳 Dockerfile               # Production container\n├── ⚙️ Makefile                 # Development commands\n├── 🔧 .env.example             # Environment template\n└── 📖 README.md                # This file\n```\n\n## 🔧 Development Commands\n\n### Backend Development\n\n```bash\n# Development\nmake dev                    # Run Go API server with hot reload\nmake test                   # Run all Go tests\nmake test-coverage          # Run tests with coverage report\nmake lint                   # Run Go linters (golangci-lint)\n\n# Database\nmake db-migrate            # Run database migrations\nmake db-seed               # Seed database with test data\nmake db-reset              # Reset database (drop + migrate + seed)\n\n# Building\nmake build                 # Build Go binary for production\nmake docker-build          # Build Docker image\n```\n\n### Frontend Development\n\n```bash\n# Development\nmake frontend-dev          # Start Vite dev server (http://localhost:5173)\nmake frontend-build        # Build for production\nmake frontend-test         # Run frontend tests\nmake frontend-test-ui      # Run tests with UI\nmake frontend-lint         # Run ESLint\nmake frontend-type-check   # TypeScript type checking\n\n# Testing\ncd frontend \u0026\u0026 npm run test          # Run tests\ncd frontend \u0026\u0026 npm run test:coverage # Run with coverage\ncd frontend \u0026\u0026 npm run test:ui       # Interactive test UI\n```\n\n### Full Stack Commands\n\n```bash\nmake install               # Install all dependencies\nmake build-all            # Build frontend + backend\nmake clean                 # Clean build artifacts\nmake docker-dev           # Start full environment with Docker\nmake docker-logs          # View container logs\n```\n\n## 🧪 Testing\n\n### Running Tests\n\n```bash\n# Backend tests\nmake test                  # Unit + integration tests\nmake test-coverage         # With coverage report\n\n# Frontend tests  \ncd frontend \u0026\u0026 npm test    # Component + API tests\ncd frontend \u0026\u0026 npm run test:coverage  # With coverage\n\n# Integration tests\nmake test-integration      # End-to-end testing\n```\n\n### Test Coverage\n\nThe template includes comprehensive test coverage:\n\n- **Backend**: \u003e90% coverage including integration tests\n- **Frontend**: \u003e85% coverage with component and API tests\n- **E2E Tests**: Critical user flows and RBAC scenarios\n\n### Test Types\n\n1. **Unit Tests**: Individual functions and components\n2. **Integration Tests**: API endpoints, database operations\n3. **Component Tests**: React component behavior\n4. **E2E Tests**: Complete user workflows\n\n## 🔐 Environment Variables\n\n### Required Variables\n\n```bash\n# Server Configuration\nPORT=8080                           # Server port\nENVIRONMENT=development             # Environment (development/production)\nLOG_LEVEL=info                      # Logging level\n\n# Database\nDATABASE_HOST=localhost             # PostgreSQL host\nDATABASE_PORT=5432                  # PostgreSQL port\nDATABASE_USER=postgres              # Database user\nDATABASE_PASSWORD=postgres          # Database password\nDATABASE_NAME=fullstack_template    # Database name\nDATABASE_SSL_MODE=disable           # SSL mode (disable/require)\n\n# JWT Configuration  \nJWT_SECRET=your-256-bit-secret      # JWT signing secret (generate secure key)\nJWT_ACCESS_DURATION=1h              # Access token lifetime\nJWT_REFRESH_DURATION=720h          # Refresh token lifetime (30 days)\n\n# Email Configuration (Optional)\nEMAIL_PROVIDER=smtp                 # Email provider (smtp/mock)\nSMTP_HOST=smtp.gmail.com           # SMTP server\nSMTP_PORT=587                      # SMTP port\nSMTP_USERNAME=your-email@gmail.com # SMTP username\nSMTP_PASSWORD=your-app-password    # SMTP password\nEMAIL_FROM=noreply@yourapp.com     # From email address\n```\n\n### Optional Variables\n\n```bash\n# Rate Limiting\nRATE_LIMIT_REQUESTS=100            # Requests per window\nRATE_LIMIT_WINDOW=1m               # Rate limit window\n\n# Security\nCORS_ORIGINS=http://localhost:3000 # Allowed CORS origins\nSECURE_COOKIES=false               # Use secure cookies (true in production)\n\n# Monitoring\nMETRICS_ENABLED=true               # Enable metrics collection\nHEALTH_CHECK_INTERVAL=30s          # Health check interval\n```\n\n## 🚀 Deployment\n\n### Production Deployment\n\n1. **Build the application**:\n   ```bash\n   make build-all\n   ```\n\n2. **Set production environment variables**:\n   ```bash\n   export ENVIRONMENT=production\n   export JWT_SECRET=\"your-production-jwt-secret\"\n   export DATABASE_URL=\"postgresql://user:pass@host:5432/dbname\"\n   ```\n\n3. **Run migrations**:\n   ```bash\n   ./bin/api --migrate\n   ```\n\n4. **Start the server**:\n   ```bash\n   ./bin/api\n   ```\n\n### Docker Deployment\n\n```bash\n# Build and run with Docker\ndocker build -t fullstack-template .\ndocker run -p 8080:8080 --env-file .env fullstack-template\n\n# Or use Docker Compose\ndocker-compose -f docker-compose.prod.yml up -d\n```\n\n### Deployment Checklist\n\n- [ ] Set strong JWT secret (256-bit random key)\n- [ ] Configure production database\n- [ ] Set up email service (SMTP)\n- [ ] Enable HTTPS/TLS\n- [ ] Configure reverse proxy (nginx/traefik)\n- [ ] Set up monitoring and logging\n- [ ] Configure backup strategy\n- [ ] Set proper CORS origins\n- [ ] Review security headers\n\n## 🔧 Customization \u0026 Extension\n\n### Adding New Features\n\n1. **Backend**: Follow the domain-driven structure\n   ```bash\n   internal/\n   ├── newfeature/\n   │   ├── domain/      # Types and business rules\n   │   ├── repository/  # Data access\n   │   ├── service/     # Business logic\n   │   └── transport/   # HTTP handlers\n   ```\n\n2. **Frontend**: Use the component structure\n   ```bash\n   src/components/newfeature/\n   ├── NewFeatureForm.tsx\n   ├── NewFeatureList.tsx\n   └── index.ts\n   ```\n\n### Extending Authentication\n\n- **Add OAuth providers**: Extend auth service\n- **Custom user fields**: Update user domain model\n- **Additional roles**: Extend RBAC system\n- **MFA support**: Add to auth flow\n\n### Customizing UI\n\n- **Theming**: Modify Tailwind config\n- **Components**: Extend the UI component library\n- **Layouts**: Create new layout components\n- **Styling**: Use CSS modules or styled-components\n\n## 📊 Monitoring \u0026 Health Checks\n\n### Built-in Endpoints\n\n- `GET /api/health` - Application health status\n- `GET /api/metrics` - Prometheus metrics (if enabled)\n- `GET /api/info` - Application version and environment\n\n### Health Check Response\n\n```json\n{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2024-01-01T00:00:00Z\",\n  \"version\": \"1.0.0\",\n  \"environment\": \"production\",\n  \"database\": \"connected\",\n  \"email\": \"configured\"\n}\n```\n\n## 🐛 Troubleshooting\n\n### Common Issues\n\n**Frontend not loading**\n```bash\n# Ensure frontend is built\nmake frontend-build\n\n# Check if dist directory exists\nls frontend/dist/\n\n# Verify server is serving static files\ncurl http://localhost:8080/\n```\n\n**Database connection failed**\n```bash\n# Check PostgreSQL is running\npg_isready -h localhost -p 5432\n\n# Verify environment variables\necho $DATABASE_HOST $DATABASE_USER\n\n# Test connection manually\npsql -h localhost -U postgres -d fullstack_template\n```\n\n**Authentication not working**\n```bash\n# Check JWT secret is set\necho $JWT_SECRET\n\n# Verify user is created and active\npsql -c \"SELECT email, status, email_verified FROM users;\"\n\n# Check browser network tab for auth errors\n```\n\n**Rate limiting errors**\n```bash\n# Check rate limit configuration\necho $RATE_LIMIT_REQUESTS\n\n# Clear rate limit (Redis) or restart server\n# Rate limits reset after window expires\n```\n\n### Development Tips\n\n1. **Use Docker for consistent environment**\n2. **Check logs for detailed error messages**\n3. **Run tests to verify functionality**\n4. **Use browser dev tools for frontend debugging**\n5. **Monitor database connections and queries**\n\n## 🤝 Contributing\n\nWe welcome contributions! Please see our [Contributing Guide](docs/CONTRIBUTING.md) for details.\n\n### Development Workflow\n\n1. Fork the repository\n2. Create a feature branch (`git checkout -b feature/amazing-feature`)\n3. Make your changes\n4. Add tests for new functionality\n5. Ensure all tests pass (`make test \u0026\u0026 cd frontend \u0026\u0026 npm test`)\n6. Run linters (`make lint \u0026\u0026 make frontend-lint`)\n7. Commit changes (`git commit -m 'Add amazing feature'`)\n8. Push to branch (`git push origin feature/amazing-feature`)\n9. Open a Pull Request\n\n### Code Standards\n\n- **Go**: Follow [Effective Go](https://golang.org/doc/effective_go.html) guidelines\n- **TypeScript/React**: Follow [React Best Practices](https://react.dev/learn)\n- **Testing**: Maintain \u003e90% backend and \u003e85% frontend coverage\n- **Documentation**: Update docs for new features\n- **Security**: Follow [OWASP Guidelines](https://owasp.org/)\n\n## 📄 License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## 🆘 Support\n\n- **Documentation**: [docs/](docs/)\n- **API Reference**: [docs/api/](docs/api/)\n- **Issues**: [GitHub Issues](https://github.com/your-org/fullstack-template/issues)\n- **Discussions**: [GitHub Discussions](https://github.com/your-org/fullstack-template/discussions)\n\n## 🎯 Roadmap\n\n- [ ] **OAuth Integration** (Google, GitHub, etc.)\n- [ ] **Multi-Factor Authentication (MFA)**\n- [ ] **Advanced RBAC** (custom permissions)\n- [ ] **Real-time Features** (WebSockets)\n- [ ] **File Upload System**\n- [ ] **Advanced Monitoring** (metrics, alerting)\n- [ ] **API Rate Limiting per User**\n- [ ] **Audit Log UI**\n- [ ] **Internationalization (i18n)**\n- [ ] **Progressive Web App (PWA)**\n\n---\n\n**Built with ❤️ for developers who value security, testing, and maintainable code.**",
      "size": 16710,
      "hash": "884e24fa5ae4583388ab62199bba823282d0d234e4f8ead53834740b97faf3dc",
      "mappings": [
        {
          "find": "# Fullstack Template",
          "replace": "# {{.ProjectName}}"
        },
        {
          "find": "# Go + React Fullstack Template",
          "replace": "# {{.ProjectName}}"
        },
        {
          "find": "git clone https://github.com/acheevo/fullstack-template.git",
          "replace": "git clone https://github.com/{{.GitHubRepo}}.git"
        },
        {
          "find": "cd fullstack-template",
          "replace": "cd {{.ProjectName | kebab}}"
        }
      ]
    },
    {
      "path": "REQUIREMENTS.md",
      "template": false,
      "content": "# Fullstack Template - Foundation Requirements\n\nThis document defines the essential requirements for a production-ready SaaS foundation template. The goal is to provide the boring, essential infrastructure that every SaaS needs so developers can focus on building their unique business logic.\n\n## Product Vision\n\nCreate a lean, production-ready foundation that includes only the essentials every SaaS needs, with clear extension points for custom business logic.\n\n## Core Principle\n\n**Provide the minimum viable foundation, done extremely well, that 90% of SaaS applications need on day 1.**\n\n## Target Use Cases\n\n1. **Startup MVPs** - Launch faster by skipping infrastructure setup\n2. **Side Projects** - Focus on business logic, not boilerplate\n3. **Enterprise Internal Tools** - Standardized, secure foundation\n4. **Agency Projects** - Consistent starting point for client work\n\n## Essential Foundation Components\n\n### 1. Authentication \u0026 Authorization (Core)\n\n**User Authentication:**\n- User registration with email verification\n- Login/logout with JWT tokens (HTTP-only cookies)\n- Password reset via email\n- Session management with refresh tokens\n\n**Authorization:**\n- Role-based access control (user, admin)\n- Protected route middleware\n- API endpoint protection\n\n### 2. User Management (Core)\n\n**User Routes:**\n- `/home` - Simple dashboard (welcome message, navigation)\n- `/settings` - Profile management (name, email, password, preferences)\n\n**Admin Routes:**\n- `/admin` - User management interface (list, view, deactivate users)\n\n**User Operations:**\n- Profile CRUD operations\n- Account deletion/deactivation\n- Basic user preferences (theme, notifications)\n\n### 3. Infrastructure Essentials (Core)\n\n**Database:**\n- GORM migrations and seeding\n- User and session models\n- Clean repository patterns\n\n**Communication:**\n- Email service integration (registration, password reset)\n- Template-based email system\n\n**Monitoring:**\n- Health check endpoints\n- Structured logging\n- Error handling patterns\n\n**Security:**\n- Password hashing (bcrypt)\n- CSRF protection\n- Security headers\n- Rate limiting on auth endpoints\n\n\n\n**Project Structure:**\n- Clean domain/service/transport architecture\n- Clear separation of concerns\n- Consistent patterns across modules\n\n**Development Tools:**\n- Hot reload for frontend and backend\n- Linting and formatting\n- Environment configuration\n- Docker development setup\n\n**Documentation:**\n- Clear setup instructions\n- Extension guidelines\n- API documentation structure\n\n## What's Intentionally Excluded\n\n**Business Logic:**\n- No specific CRUD examples (tasks, posts, etc.)\n- No sample business domains\n- No complex workflows\n\n**Advanced Features:**\n- No billing/subscription management\n- No advanced analytics\n- No real-time features\n- No multi-tenancy (unless trivial)\n- No complex admin dashboards\n\n**Third-party Integrations:**\n- No payment processors\n- No external analytics\n- No social media integrations\n\n## Extension Points\n\n### Clean Architecture\n- Domain layer for business logic\n- Service layer for business rules\n- Transport layer for HTTP/API\n- Repository layer for data access\n\n### Modularity\n- Feature modules follow consistent patterns\n- New modules can be added without touching existing code\n- Environment-based feature toggling\n\n### API Design\n- RESTful conventions\n- Consistent error responses\n- Versioning strategy\n- OpenAPI documentation structure\n\n## Implementation Status\n\n### ✅ Phase 1: Foundation (COMPLETED)\n1. **✅ Complete Authentication System**\n   - ✅ Registration, login, logout, password reset\n   - ✅ JWT with refresh tokens and HTTP-only cookies\n   - ✅ Email verification system\n   - ✅ Security middleware and rate limiting\n\n2. **✅ User Management**\n   - ✅ User CRUD operations with preferences (JSONB)\n   - ✅ Profile management interface (/home, /settings)\n   - ✅ Admin user management interface (/admin)\n   - ✅ Role-based access control (RBAC)\n\n3. **✅ Infrastructure Setup**\n   - ✅ Database migrations and enhanced repository patterns\n   - ✅ Email service integration with template system\n   - ✅ Monitoring, health checks, and metrics collection\n   - ✅ Enhanced error handling and security infrastructure\n\n### ✅ Phase 2: Polish \u0026 Documentation (COMPLETED)\n1. **✅ Developer Experience**\n   - ✅ Comprehensive setup documentation (README.md)\n   - ✅ Extension guidelines (DEVELOPER.md)\n   - ✅ API documentation (API.md)\n   - ✅ Architecture documentation (ARCHITECTURE.md)\n\n2. **✅ Testing \u0026 Security**\n   - ✅ Comprehensive integration test suite (\u003e90% coverage)\n   - ✅ Security best practices implementation (SECURITY.md)\n   - ✅ Performance optimization and production readiness\n\n## 🎉 **FOUNDATION COMPLETE - READY FOR PRODUCTION**\n\n**Total Implementation Time**: 4 days (vs. estimated 3-4 weeks)\n**All Success Criteria Met**: ✅ Setup \u003c15min, First Feature \u003c30min, Production-Ready\n\n## Technical Architecture\n\n### Backend Structure\n```\ninternal/\n├── auth/           # Authentication \u0026 authorization\n├── user/           # User management\n├── email/          # Email service\n├── admin/          # Admin functionality\n├── middleware/     # HTTP middleware\n└── shared/         # Shared utilities\n```\n\n### Frontend Structure\n\n```\nsrc/\n├── components/\n│   ├── auth/       # Login, register forms\n│   ├── layout/     # Headers, navigation\n│   └── ui/         # Reusable components\n├── pages/\n│   ├── Home.tsx    # User dashboard\n│   ├── Settings.tsx # User settings\n│   ├── Admin.tsx   # Admin panel\n│   └── Auth.tsx    # Authentication pages\n├── contexts/       # React contexts (auth, theme)\n└── hooks/          # Custom hooks\n```\n\n## Success Criteria\n\n### Developer Experience\n- **Setup time**: \u003c15 minutes from clone to running\n- **First feature**: \u003c30 minutes to add a new business domain\n- **Documentation**: Complete setup and extension guides\n\n### Production Readiness\n- **Security**: Authentication, authorization, input validation\n- **Monitoring**: Health checks, logging, error tracking\n- **Performance**: Optimized builds, database queries\n- **Deployment**: Docker, environment configuration\n\n### Foundation Quality\n- **Test coverage**: \u003e80% for core functionality\n- **Code quality**: Consistent patterns, clean architecture\n- **Extensibility**: Clear patterns for adding features\n- **Maintainability**: Well-documented, modular design\n\n## What Developers Get\n\n### Immediate Value\n- Working authentication system\n- User registration and management\n- Admin interface for user management\n- Email integration (welcome, password reset)\n- Production-ready deployment setup\n\n### Extension Foundation\n- Clean architecture patterns\n- Database migration system\n- API design conventions\n- Testing patterns\n- Security best practices\n\n### Time Savings\n- **Authentication**: 1-2 weeks saved\n- **User management**: 3-5 days saved\n- **Infrastructure setup**: 1 week saved\n- **Security implementation**: 3-5 days saved\n\n**Total time saved: 3-4 weeks of development time**\n\n## Implementation Philosophy\n\n1. **Essential only**: If 90% of SaaS apps don't need it, don't include it\n2. **Extension-friendly**: Clear patterns for adding business logic\n3. **Production-ready**: Security, monitoring, and deployment included\n4. **Developer-focused**: Optimize for developer productivity and clarity\n5. **Opinionated but flexible**: Strong conventions with escape hatches\n\nThis foundation provides everything needed to start building a SaaS product immediately, without the overhead of complex features that may not be needed.",
      "size": 7639,
      "hash": "6fb436d931f2c8de9ebef4be7f420303eeda910eb323ba34b68f8fae51ed3ab7"
    },
    {
      "path": "cmd/api/main.go",
      "template": true,
      "content": "package main\n\nimport (\n\t\"context\"\n\t\"log/slog\"\n\t\"os\"\n\t\"os/signal\"\n\t\"syscall\"\n\t\"time\"\n\n\tadminservice \"github.com/acheevo/fullstack-template/internal/admin/service\"\n\tadmintransport \"github.com/acheevo/fullstack-template/internal/admin/transport\"\n\t\"github.com/acheevo/fullstack-template/internal/auth/repository\"\n\tauthservice \"github.com/acheevo/fullstack-template/internal/auth/service\"\n\tauthtransport \"github.com/acheevo/fullstack-template/internal/auth/transport\"\n\t\"github.com/acheevo/fullstack-template/internal/health/service\"\n\t\"github.com/acheevo/fullstack-template/internal/health/transport\"\n\t\"github.com/acheevo/fullstack-template/internal/http\"\n\tinfoservice \"github.com/acheevo/fullstack-template/internal/info/service\"\n\tinfotransport \"github.com/acheevo/fullstack-template/internal/info/transport\"\n\t\"github.com/acheevo/fullstack-template/internal/middleware\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/bootstrap\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/database\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/logger\"\n\tuserrepository \"github.com/acheevo/fullstack-template/internal/user/repository\"\n\tuserservice \"github.com/acheevo/fullstack-template/internal/user/service\"\n\tusertransport \"github.com/acheevo/fullstack-template/internal/user/transport\"\n)\n\nfunc main() {\n\tcfg, err := config.Load()\n\tif err != nil {\n\t\tslog.Error(\"failed to load config\", \"error\", err)\n\t\tos.Exit(1)\n\t}\n\n\tappLogger := logger.New(cfg.LogLevel, cfg.IsDevelopment())\n\n\tdb, err := database.New(cfg.DatabaseDSN(), cfg.IsDevelopment(), appLogger, cfg.Environment)\n\tif err != nil {\n\t\tappLogger.Error(\"failed to connect to database\", \"error\", err)\n\t\tos.Exit(1)\n\t}\n\tdefer db.Close()\n\n\tif err := db.SetConnectionPool(\n\t\tcfg.DBMaxIdleConns,\n\t\tcfg.DBMaxOpenConns,\n\t\tcfg.DBConnMaxLifetimeDuration(),\n\t); err != nil {\n\t\tappLogger.Error(\"failed to configure database connection pool\", \"error\", err)\n\t\treturn\n\t}\n\n\t// Bootstrap demo users and initial data\n\tbootstrapService := bootstrap.NewService(cfg, db.DB, appLogger)\n\tif err := bootstrapService.Bootstrap(); err != nil {\n\t\tappLogger.Error(\"bootstrap failed\", \"error\", err)\n\t\tos.Exit(1)\n\t}\n\n\t// Initialize repositories\n\tauthUserRepo := repository.NewUserRepository(db.DB)\n\trefreshTokenRepo := repository.NewRefreshTokenRepository(db.DB)\n\tpasswordResetRepo := repository.NewPasswordResetRepository(db.DB)\n\tuserRepo := userrepository.NewUserRepository(db.DB)\n\tauditRepo := userrepository.NewAuditRepository(db.DB)\n\n\t// Initialize services\n\tjwtService := authservice.NewJWTService(cfg)\n\temailService := authservice.NewEmailService(cfg, appLogger)\n\tauthService := authservice.NewAuthService(\n\t\tcfg,\n\t\tappLogger,\n\t\tauthUserRepo,\n\t\trefreshTokenRepo,\n\t\tpasswordResetRepo,\n\t\tjwtService,\n\t\temailService,\n\t)\n\n\tuserSvc := userservice.NewUserService(\n\t\tcfg,\n\t\tappLogger,\n\t\tuserRepo,\n\t\tauditRepo,\n\t\tauthUserRepo,\n\t)\n\n\tadminSvc := adminservice.NewAdminService(\n\t\tcfg,\n\t\tappLogger,\n\t\tuserRepo,\n\t\tauditRepo,\n\t)\n\n\thealthService := service.NewHealthService(cfg, db, appLogger)\n\tinfoSvc := infoservice.NewInfoService(cfg, db, appLogger)\n\n\t// Initialize middleware\n\tauthMiddleware := middleware.NewAuthMiddleware(appLogger, authService)\n\trbacMiddleware := middleware.NewRBACMiddleware(appLogger, authService)\n\trateLimiter := middleware.NewRateLimiter(appLogger, 10, time.Minute) // 10 requests per minute\n\n\t// Initialize handlers\n\tauthHandler := authtransport.NewAuthHandler(cfg, appLogger, authService)\n\tuserHandler := usertransport.NewUserHandler(cfg, appLogger, userSvc)\n\tadminHandler := admintransport.NewAdminHandler(cfg, appLogger, adminSvc)\n\thealthHandler := transport.NewHealthHandler(healthService)\n\tinfoHandler := infotransport.NewInfoHandler(infoSvc)\n\n\tserver := http.NewServer(cfg, appLogger, healthHandler, infoHandler, authHandler, userHandler, adminHandler, authMiddleware, rbacMiddleware, rateLimiter)\n\n\tquit := make(chan os.Signal, 1)\n\tsignal.Notify(quit, syscall.SIGINT, syscall.SIGTERM)\n\n\tgo func() {\n\t\tif err := server.Start(); err != nil {\n\t\t\tappLogger.Error(\"server failed to start\", \"error\", err)\n\t\t\tos.Exit(1)\n\t\t}\n\t}()\n\n\tappLogger.Info(\"server started successfully\")\n\n\t\u003c-quit\n\tappLogger.Info(\"shutting down server...\")\n\n\tctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n\tdefer cancel()\n\n\tif err := server.Stop(ctx); err != nil {\n\t\tappLogger.Error(\"server forced to shutdown\", \"error\", err)\n\t} else {\n\t\tappLogger.Info(\"server exited gracefully\")\n\t}\n}",
      "size": 4500,
      "hash": "8e44cdeb375a2e66eccd52e64dd8e42c5a1158348a02cd4bf599452149a36007",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "docker-compose.yml",
      "template": true,
      "content": "\nservices:\n  app:\n    build: .\n    ports:\n      - \"8080:8080\"\n    environment:\n      - ENVIRONMENT=development\n      - LOG_LEVEL=info\n      - DATABASE_HOST=postgres\n      - DATABASE_PORT=5432\n      - DATABASE_USER=postgres\n      - DATABASE_PASSWORD=postgres\n      - DATABASE_NAME=fullstack_template\n      - DATABASE_SSL_MODE=disable\n      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-32chars-min\n      - JWT_ACCESS_TOKEN_DURATION=15m\n      - JWT_REFRESH_TOKEN_DURATION=7d\n      - EMAIL_FROM=noreply@localhost.dev\n      - EMAIL_PROVIDER=smtp\n      - SMTP_HOST=localhost\n      - SMTP_PORT=587\n      - FRONTEND_URL=http://localhost:3000\n      - BACKEND_URL=http://localhost:8080\n      - CSRF_SECRET=dev-csrf-secret-change-in-production-32chars-minimum\n      - BOOTSTRAP_ENABLED=true\n      - ADMIN_EMAIL=admin@example.com\n      - ADMIN_PASSWORD=admin123\n      - DEMO_USER_EMAIL=user@example.com\n      - DEMO_USER_PASSWORD=user1234\n    depends_on:\n      - postgres\n    volumes:\n      - .:/app\n    restart: unless-stopped\n\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=postgres\n      - POSTGRES_DB=fullstack_template\n    ports:\n      - \"5432:5432\"\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    restart: unless-stopped\n\nvolumes:\n  postgres_data:",
      "size": 1346,
      "hash": "256fdc2a2a273b0d1deccb46e280be450ceebb4f4eb729fffd5d06e452c076eb",
      "mappings": [
        {
          "find": "fullstack-template",
          "replace": "{{.ProjectName | kebab}}"
        },
        {
          "find": "fullstack_template",
          "replace": "{{.ProjectName | snake}}"
        }
      ]
    },
    {
      "path": "docs/API.md",
      "template": false,
      "content": "# API Documentation\n\nComplete API reference for the Fullstack Template, including authentication, user management, and admin operations.\n\n## Base URL\n\n- **Development**: `http://localhost:8080`\n- **Production**: `https://your-domain.com`\n\n## Authentication\n\nAll protected endpoints require a JWT token in the Authorization header:\n\n```\nAuthorization: Bearer \u003cyour-jwt-token\u003e\n```\n\n## Response Format\n\nAll API responses follow a consistent format:\n\n### Success Response\n```json\n{\n  \"data\": { /* response data */ },\n  \"meta\": { /* optional metadata */ }\n}\n```\n\n### Error Response\n```json\n{\n  \"error\": \"Error message\",\n  \"details\": {\n    \"field\": \"Specific field error\"\n  }\n}\n```\n\n## Status Codes\n\n- `200` - Success\n- `201` - Created\n- `400` - Bad Request (validation error)\n- `401` - Unauthorized (authentication required)\n- `403` - Forbidden (insufficient permissions)\n- `404` - Not Found\n- `409` - Conflict (duplicate resource)\n- `422` - Unprocessable Entity (business logic error)\n- `429` - Too Many Requests (rate limited)\n- `500` - Internal Server Error\n\n---\n\n## Authentication Endpoints\n\n### Register User\n\nCreate a new user account.\n\n**POST** `/auth/register`\n\n#### Request Body\n```json\n{\n  \"email\": \"user@example.com\",\n  \"password\": \"SecurePassword123!\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\"\n}\n```\n\n#### Validation Rules\n- `email`: Valid email format, unique\n- `password`: Minimum 8 characters\n- `first_name`: Required, 1-50 characters\n- `last_name`: Required, 1-50 characters\n\n#### Response\n```json\n{\n  \"user\": {\n    \"id\": 1,\n    \"email\": \"user@example.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"email_verified\": false,\n    \"role\": \"user\",\n    \"status\": \"active\",\n    \"preferences\": {},\n    \"created_at\": \"2024-01-01T00:00:00Z\",\n    \"updated_at\": \"2024-01-01T00:00:00Z\"\n  },\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"expires_in\": 3600\n}\n```\n\n#### Error Responses\n- `400` - Invalid input data\n- `409` - Email already exists\n\n---\n\n### Login User\n\nAuthenticate user with email and password.\n\n**POST** `/auth/login`\n\n#### Request Body\n```json\n{\n  \"email\": \"user@example.com\",\n  \"password\": \"SecurePassword123!\"\n}\n```\n\n#### Response\n```json\n{\n  \"user\": {\n    \"id\": 1,\n    \"email\": \"user@example.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"email_verified\": true,\n    \"role\": \"user\",\n    \"status\": \"active\",\n    \"preferences\": {\n      \"theme\": \"light\",\n      \"language\": \"en\"\n    },\n    \"last_login_at\": \"2024-01-01T00:00:00Z\",\n    \"created_at\": \"2024-01-01T00:00:00Z\",\n    \"updated_at\": \"2024-01-01T00:00:00Z\"\n  },\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"expires_in\": 3600\n}\n```\n\n#### Error Responses\n- `400` - Invalid input data\n- `401` - Invalid credentials\n- `403` - Account inactive or suspended\n\n---\n\n### Refresh Token\n\nRefresh access token using refresh token.\n\n**POST** `/auth/refresh`\n\n#### Request Body\n```json\n{\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n```\n\n#### Response\n```json\n{\n  \"user\": { /* user object */ },\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"expires_in\": 3600\n}\n```\n\n#### Error Responses\n- `401` - Invalid or expired refresh token\n\n---\n\n### Check Authentication\n\nCheck if current token is valid.\n\n**GET** `/auth/check`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Response\n```json\n{\n  \"authenticated\": true,\n  \"user\": { /* user object */ }\n}\n```\n\n---\n\n### Logout\n\nInvalidate current refresh token.\n\n**POST** `/auth/logout`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Response\n```json\n{\n  \"message\": \"Logged out successfully\"\n}\n```\n\n---\n\n### Logout All Devices\n\nInvalidate all refresh tokens for the user.\n\n**POST** `/auth/logout-all`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Response\n```json\n{\n  \"message\": \"Logged out from all devices\"\n}\n```\n\n---\n\n## Password Management\n\n### Forgot Password\n\nRequest password reset email.\n\n**POST** `/auth/forgot-password`\n\n#### Request Body\n```json\n{\n  \"email\": \"user@example.com\"\n}\n```\n\n#### Response\n```json\n{\n  \"message\": \"If the email exists, a reset link has been sent\"\n}\n```\n\n#### Notes\n- Always returns success for security (doesn't reveal if email exists)\n- Rate limited to prevent abuse\n\n---\n\n### Reset Password\n\nReset password using reset token.\n\n**POST** `/auth/reset-password`\n\n#### Request Body\n```json\n{\n  \"token\": \"reset-token-from-email\",\n  \"password\": \"NewSecurePassword123!\",\n  \"confirm_password\": \"NewSecurePassword123!\"\n}\n```\n\n#### Response\n```json\n{\n  \"message\": \"Password reset successfully\"\n}\n```\n\n#### Error Responses\n- `400` - Invalid token, expired token, or password validation errors\n- `422` - Passwords don't match\n\n---\n\n### Change Password\n\nChange password for authenticated user.\n\n**POST** `/auth/change-password`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Request Body\n```json\n{\n  \"current_password\": \"CurrentPassword123!\",\n  \"new_password\": \"NewSecurePassword123!\",\n  \"confirm_password\": \"NewSecurePassword123!\"\n}\n```\n\n#### Response\n```json\n{\n  \"message\": \"Password changed successfully\"\n}\n```\n\n#### Error Responses\n- `401` - Current password incorrect\n- `400` - Password validation errors\n\n---\n\n## Email Verification\n\n### Verify Email\n\nVerify email address using verification token.\n\n**POST** `/auth/verify-email`\n\n#### Request Body\n```json\n{\n  \"token\": \"verification-token-from-email\"\n}\n```\n\n#### Response\n```json\n{\n  \"message\": \"Email verified successfully\"\n}\n```\n\n---\n\n### Resend Email Verification\n\nResend email verification email.\n\n**POST** `/auth/resend-verification`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Response\n```json\n{\n  \"message\": \"Verification email sent\"\n}\n```\n\n---\n\n## User Management\n\n### Get User Profile\n\nGet current user's profile information.\n\n**GET** `/user/profile`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Response\n```json\n{\n  \"id\": 1,\n  \"email\": \"user@example.com\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email_verified\": true,\n  \"role\": \"user\",\n  \"status\": \"active\",\n  \"preferences\": {\n    \"theme\": \"dark\",\n    \"language\": \"en\",\n    \"timezone\": \"UTC\",\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false,\n      \"push\": true\n    },\n    \"privacy\": {\n      \"profile_visible\": true,\n      \"show_email\": false\n    }\n  },\n  \"avatar\": \"https://example.com/avatar.jpg\",\n  \"last_login_at\": \"2024-01-01T00:00:00Z\",\n  \"created_at\": \"2024-01-01T00:00:00Z\",\n  \"updated_at\": \"2024-01-01T00:00:00Z\"\n}\n```\n\n---\n\n### Update User Profile\n\nUpdate user profile information.\n\n**PUT** `/user/profile`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Request Body\n```json\n{\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"avatar\": \"https://example.com/new-avatar.jpg\"\n}\n```\n\n#### Response\n```json\n{\n  /* Updated user object */\n}\n```\n\n#### Validation Rules\n- `first_name`: 1-50 characters\n- `last_name`: 1-50 characters\n- `avatar`: Valid URL (optional)\n\n---\n\n### Get User Preferences\n\nGet user preferences.\n\n**GET** `/user/preferences`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Response\n```json\n{\n  \"theme\": \"dark\",\n  \"language\": \"en\",\n  \"timezone\": \"UTC\",\n  \"notifications\": {\n    \"email\": true,\n    \"sms\": false,\n    \"push\": true\n  },\n  \"privacy\": {\n    \"profile_visible\": true,\n    \"show_email\": false\n  },\n  \"custom\": {\n    \"sidebar_collapsed\": true,\n    \"items_per_page\": 25\n  }\n}\n```\n\n---\n\n### Update User Preferences\n\nUpdate user preferences.\n\n**PUT** `/user/preferences`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Request Body\n```json\n{\n  \"theme\": \"dark\",\n  \"language\": \"es\",\n  \"timezone\": \"America/New_York\",\n  \"notifications\": {\n    \"email\": false,\n    \"sms\": false,\n    \"push\": true\n  },\n  \"privacy\": {\n    \"profile_visible\": false,\n    \"show_email\": true\n  },\n  \"custom\": {\n    \"sidebar_collapsed\": false,\n    \"items_per_page\": 50\n  }\n}\n```\n\n#### Response\n```json\n{\n  /* Updated preferences object */\n}\n```\n\n#### Validation Rules\n- `theme`: \"light\", \"dark\", or \"system\"\n- `language`: Valid language code (e.g., \"en\", \"es\", \"fr\")\n- `timezone`: Valid timezone (e.g., \"UTC\", \"America/New_York\")\n\n---\n\n### Change Email\n\nRequest email change (requires verification).\n\n**POST** `/user/change-email`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Request Body\n```json\n{\n  \"new_email\": \"newemail@example.com\",\n  \"password\": \"CurrentPassword123!\"\n}\n```\n\n#### Response\n```json\n{\n  \"message\": \"Email change verification sent to new address\"\n}\n```\n\n---\n\n### Get User Dashboard\n\nGet user dashboard with statistics and recent activity.\n\n**GET** `/user/dashboard`\n\n#### Headers\n```\nAuthorization: Bearer \u003caccess-token\u003e\n```\n\n#### Response\n```json\n{\n  \"user\": { /* user object */ },\n  \"stats\": {\n    \"total_logins\": 42,\n    \"last_login_at\": \"2024-01-01T00:00:00Z\",\n    \"account_age_days\": 30,\n    \"profile_complete\": true\n  },\n  \"recent_logins\": [\n    {\n      \"id\": 1,\n      \"ip_address\": \"192.168.1.1\",\n      \"user_agent\": \"Mozilla/5.0...\",\n      \"success\": true,\n      \"created_at\": \"2024-01-01T00:00:00Z\"\n    }\n  ],\n  \"notifications\": [\n    {\n      \"id\": 1,\n      \"type\": \"info\",\n      \"title\": \"Welcome!\",\n      \"message\": \"Welcome to the platform\",\n      \"read\": false,\n      \"priority\": \"medium\",\n      \"created_at\": \"2024-01-01T00:00:00Z\"\n    }\n  ]\n}\n```\n\n---\n\n## Admin Endpoints\n\nAll admin endpoints require admin role (`role: \"admin\"`).\n\n### Get Users List\n\nGet paginated list of users with filtering options.\n\n**GET** `/admin/users`\n\n#### Headers\n```\nAuthorization: Bearer \u003cadmin-access-token\u003e\n```\n\n#### Query Parameters\n- `page`: Page number (default: 1)\n- `page_size`: Items per page (default: 20, max: 100)\n- `search`: Search in email, first_name, last_name\n- `role`: Filter by role (\"user\", \"admin\")\n- `status`: Filter by status (\"active\", \"inactive\", \"suspended\")\n- `sort_by`: Sort field (\"created_at\", \"email\", \"last_login_at\")\n- `sort_order`: Sort order (\"asc\", \"desc\")\n\n#### Example\n```\nGET /admin/users?page=1\u0026page_size=10\u0026search=john\u0026role=user\u0026status=active\u0026sort_by=created_at\u0026sort_order=desc\n```\n\n#### Response\n```json\n{\n  \"users\": [\n    {\n      \"id\": 1,\n      \"email\": \"user@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"role\": \"user\",\n      \"status\": \"active\",\n      \"email_verified\": true,\n      \"avatar\": \"https://example.com/avatar.jpg\",\n      \"last_login_at\": \"2024-01-01T00:00:00Z\",\n      \"created_at\": \"2024-01-01T00:00:00Z\",\n      \"updated_at\": \"2024-01-01T00:00:00Z\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"page_size\": 10,\n    \"total\": 150,\n    \"total_pages\": 15,\n    \"has_next\": true,\n    \"has_prev\": false\n  }\n}\n```\n\n---\n\n### Get User Details\n\nGet detailed information about a specific user.\n\n**GET** `/admin/users/{id}`\n\n#### Headers\n```\nAuthorization: Bearer \u003cadmin-access-token\u003e\n```\n\n#### Response\n```json\n{\n  \"id\": 1,\n  \"email\": \"user@example.com\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email_verified\": true,\n  \"role\": \"user\",\n  \"status\": \"active\",\n  \"preferences\": { /* preferences object */ },\n  \"avatar\": \"https://example.com/avatar.jpg\",\n  \"last_login_at\": \"2024-01-01T00:00:00Z\",\n  \"created_at\": \"2024-01-01T00:00:00Z\",\n  \"updated_at\": \"2024-01-01T00:00:00Z\",\n  \"login_history\": [\n    {\n      \"id\": 1,\n      \"ip_address\": \"192.168.1.1\",\n      \"user_agent\": \"Mozilla/5.0...\",\n      \"success\": true,\n      \"created_at\": \"2024-01-01T00:00:00Z\"\n    }\n  ],\n  \"audit_trail\": [\n    {\n      \"id\": 1,\n      \"action\": \"user_created\",\n      \"level\": \"info\",\n      \"resource\": \"user\",\n      \"description\": \"User account created\",\n      \"ip_address\": \"192.168.1.1\",\n      \"created_at\": \"2024-01-01T00:00:00Z\"\n    }\n  ]\n}\n```\n\n---\n\n### Update User\n\nUpdate user information (admin only).\n\n**PUT** `/admin/users/{id}`\n\n#### Headers\n```\nAuthorization: Bearer \u003cadmin-access-token\u003e\n```\n\n#### Request Body\n```json\n{\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"email\": \"newemail@example.com\",\n  \"email_verified\": true,\n  \"role\": \"user\",\n  \"status\": \"active\",\n  \"avatar\": \"https://example.com/avatar.jpg\",\n  \"reason\": \"Administrative update\"\n}\n```\n\n#### Response\n```json\n{\n  \"message\": \"User updated successfully\"\n}\n```\n\n---\n\n### Update User Role\n\nChange user role.\n\n**PUT** `/admin/users/{id}/role`\n\n#### Headers\n```\nAuthorization: Bearer \u003cadmin-access-token\u003e\n```\n\n#### Request Body\n```json\n{\n  \"role\": \"admin\",\n  \"reason\": \"Promoted to administrator\"\n}\n```\n\n#### Response\n```json\n{\n  \"message\": \"User role updated successfully\"\n}\n```\n\n#### Business Rules\n- Cannot change own role\n- Must provide reason for audit trail\n\n---\n\n### Update User Status\n\nChange user account status.\n\n**PUT** `/admin/users/{id}/status`\n\n#### Headers\n```\nAuthorization: Bearer \u003cadmin-access-token\u003e\n```\n\n#### Request Body\n```json\n{\n  \"status\": \"suspended\",\n  \"reason\": \"Terms of service violation\"\n}\n```\n\n#### Response\n```json\n{\n  \"message\": \"User status updated successfully\"\n}\n```\n\n#### Status Options\n- `active`: Normal account access\n- `inactive`: Account disabled, cannot login\n- `suspended`: Account temporarily suspended\n\n---\n\n### Delete Users\n\nDelete one or more users.\n\n**DELETE** `/admin/users?ids=1,2,3`\n\n#### Headers\n```\nAuthorization: Bearer \u003cadmin-access-token\u003e\n```\n\n#### Request Body\n```json\n{\n  \"reason\": \"Account cleanup\",\n  \"force\": false\n}\n```\n\n#### Response\n```json\n{\n  \"message\": \"Users deleted successfully\",\n  \"deleted_count\": 3\n}\n```\n\n#### Parameters\n- `force`: If true, permanently delete. If false, soft delete.\n\n---\n\n### Bulk User Actions\n\nPerform bulk operations on multiple users.\n\n**POST** `/admin/users/bulk`\n\n#### Headers\n```\nAuthorization: Bearer \u003cadmin-access-token\u003e\n```\n\n#### Request Body\n```json\n{\n  \"user_ids\": [1, 2, 3, 4, 5],\n  \"action\": \"activate\",\n  \"reason\": \"Bulk account activation\"\n}\n```\n\n#### Actions\n- `activate`: Set status to active\n- `deactivate`: Set status to inactive\n- `suspend`: Set status to suspended\n- `delete`: Delete accounts\n- `role_change`: Change role (requires `role` field)\n\n#### Response\n```json\n{\n  \"total_requested\": 5,\n  \"successful\": 4,\n  \"failed\": 1,\n  \"results\": [\n    {\n      \"user_id\": 1,\n      \"success\": true\n    },\n    {\n      \"user_id\": 2,\n      \"success\": false,\n      \"error\": \"Cannot modify admin user\"\n    }\n  ]\n}\n```\n\n---\n\n### Get Admin Statistics\n\nGet platform-wide statistics.\n\n**GET** `/admin/stats`\n\n#### Headers\n```\nAuthorization: Bearer \u003cadmin-access-token\u003e\n```\n\n#### Response\n```json\n{\n  \"total_users\": 1250,\n  \"active_users\": 1100,\n  \"inactive_users\": 100,\n  \"suspended_users\": 50,\n  \"admin_users\": 5,\n  \"new_users_today\": 12,\n  \"new_users_this_week\": 85,\n  \"user_growth\": [\n    {\n      \"date\": \"2024-01-01\",\n      \"count\": 10\n    },\n    {\n      \"date\": \"2024-01-02\",\n      \"count\": 15\n    }\n  ],\n  \"top_countries\": [\n    {\n      \"country\": \"United States\",\n      \"count\": 450\n    },\n    {\n      \"country\": \"Canada\",\n      \"count\": 200\n    }\n  ]\n}\n```\n\n---\n\n### Get Audit Logs\n\nGet system audit logs with filtering.\n\n**GET** `/admin/audit-logs`\n\n#### Headers\n```\nAuthorization: Bearer \u003cadmin-access-token\u003e\n```\n\n#### Query Parameters\n- `page`: Page number (default: 1)\n- `page_size`: Items per page (default: 50)\n- `user_id`: Filter by user who performed action\n- `target_id`: Filter by user who was affected\n- `action`: Filter by action type\n- `level`: Filter by level (\"info\", \"warning\", \"error\")\n- `resource`: Filter by resource type\n- `date_from`: Start date (ISO format)\n- `date_to`: End date (ISO format)\n- `ip_address`: Filter by IP address\n\n#### Response\n```json\n{\n  \"logs\": [\n    {\n      \"id\": 1,\n      \"action\": \"user_login\",\n      \"level\": \"info\",\n      \"resource\": \"auth\",\n      \"description\": \"User logged in successfully\",\n      \"ip_address\": \"192.168.1.1\",\n      \"user_agent\": \"Mozilla/5.0...\",\n      \"metadata\": {\n        \"session_id\": \"sess_123\",\n        \"login_method\": \"password\"\n      },\n      \"created_at\": \"2024-01-01T00:00:00Z\",\n      \"user\": {\n        \"id\": 1,\n        \"email\": \"user@example.com\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\"\n      },\n      \"target\": null\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"page_size\": 50,\n    \"total\": 500,\n    \"total_pages\": 10,\n    \"has_next\": true,\n    \"has_prev\": false\n  }\n}\n```\n\n---\n\n## Health \u0026 Monitoring\n\n### Health Check\n\nCheck application health status.\n\n**GET** `/health`\n\n#### Response\n```json\n{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2024-01-01T00:00:00Z\",\n  \"version\": \"1.0.0\",\n  \"environment\": \"production\",\n  \"checks\": {\n    \"database\": \"connected\",\n    \"email\": \"configured\",\n    \"redis\": \"connected\"\n  }\n}\n```\n\n---\n\n### Application Info\n\nGet application information.\n\n**GET** `/api/info`\n\n#### Response\n```json\n{\n  \"name\": \"Fullstack Template\",\n  \"version\": \"1.0.0\",\n  \"environment\": \"production\",\n  \"build_time\": \"2024-01-01T00:00:00Z\",\n  \"go_version\": \"1.23.0\"\n}\n```\n\n---\n\n## Rate Limiting\n\nThe API implements rate limiting to prevent abuse:\n\n- **Global**: 1000 requests per hour per IP\n- **Auth endpoints**: 10 requests per minute per IP\n- **Admin endpoints**: 100 requests per minute per user\n\n### Rate Limit Headers\n\nAll responses include rate limit headers:\n\n```\nX-RateLimit-Limit: 1000\nX-RateLimit-Remaining: 999\nX-RateLimit-Reset: 1640995200\n```\n\n### Rate Limit Exceeded\n\nWhen rate limit is exceeded:\n\n**Response Code**: `429 Too Many Requests`\n\n```json\n{\n  \"error\": \"Rate limit exceeded\",\n  \"details\": {\n    \"limit\": 1000,\n    \"window\": \"1h\",\n    \"retry_after\": 3600\n  }\n}\n```\n\n---\n\n## Error Codes Reference\n\n### Authentication Errors\n\n| Code | Message | Description |\n|------|---------|-------------|\n| `AUTH_001` | Invalid credentials | Email or password incorrect |\n| `AUTH_002` | Account inactive | User account is inactive |\n| `AUTH_003` | Account suspended | User account is suspended |\n| `AUTH_004` | Email not verified | Email verification required |\n| `AUTH_005` | Token expired | JWT token has expired |\n| `AUTH_006` | Invalid token | JWT token is malformed or invalid |\n| `AUTH_007` | Token refresh failed | Refresh token is invalid or expired |\n\n### User Management Errors\n\n| Code | Message | Description |\n|------|---------|-------------|\n| `USER_001` | User not found | User ID does not exist |\n| `USER_002` | Email already exists | Email is already registered |\n| `USER_003` | Invalid user role | Role is not valid |\n| `USER_004` | Cannot modify self | Admin cannot modify their own account |\n| `USER_005` | Password too weak | Password doesn't meet strength requirements |\n\n### Admin Errors\n\n| Code | Message | Description |\n|------|---------|-------------|\n| `ADMIN_001` | Insufficient permissions | User is not admin |\n| `ADMIN_002` | Cannot delete admin | Cannot delete admin users |\n| `ADMIN_003` | Bulk action failed | Some bulk operations failed |\n\n---\n\n## SDKs and Examples\n\n### JavaScript/TypeScript\n\n```typescript\nimport { ApiClient } from './api-client';\n\nconst api = new ApiClient('http://localhost:8080');\n\n// Login\nconst authResponse = await api.login({\n  email: 'user@example.com',\n  password: 'password123'\n});\n\n// Get user profile\nconst profile = await api.getProfile();\n\n// Update preferences\nawait api.updatePreferences({\n  theme: 'dark',\n  notifications: { email: false }\n});\n```\n\n### Go\n\n```go\npackage main\n\nimport (\n    \"github.com/your-org/fullstack-template-sdk-go\"\n)\n\nfunc main() {\n    client := sdk.NewClient(\"http://localhost:8080\")\n    \n    // Login\n    auth, err := client.Login(\"user@example.com\", \"password123\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    \n    // Set token for authenticated requests\n    client.SetToken(auth.AccessToken)\n    \n    // Get user profile\n    profile, err := client.GetProfile()\n    if err != nil {\n        log.Fatal(err)\n    }\n}\n```\n\n### cURL Examples\n\n```bash\n# Login\ncurl -X POST http://localhost:8080/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\":\"user@example.com\",\"password\":\"password123\"}'\n\n# Get profile (with token)\ncurl -X GET http://localhost:8080/user/profile \\\n  -H \"Authorization: Bearer your-jwt-token\"\n\n# Admin: Get users\ncurl -X GET \"http://localhost:8080/admin/users?page=1\u0026page_size=10\" \\\n  -H \"Authorization: Bearer admin-jwt-token\"\n```\n\n---\n\nThis API documentation covers all endpoints and provides comprehensive examples for integration. For additional help, see the [Developer Guide](DEVELOPER.md) or [Architecture Documentation](ARCHITECTURE.md).",
      "size": 20484,
      "hash": "664196a9a9596fc7dd1726d38d5230a3d113f0b484b064ec9deb57718dde3b88"
    },
    {
      "path": "docs/ARCHITECTURE.md",
      "template": false,
      "content": "# Architecture Documentation\n\nThis document describes the system architecture, design patterns, and architectural decisions for the Fullstack Template.\n\n## Table of Contents\n\n- [System Overview](#system-overview)\n- [Backend Architecture](#backend-architecture)\n- [Frontend Architecture](#frontend-architecture)\n- [Security Architecture](#security-architecture)\n- [Data Architecture](#data-architecture)\n- [Infrastructure Architecture](#infrastructure-architecture)\n- [Design Patterns](#design-patterns)\n- [Architectural Decisions](#architectural-decisions)\n\n---\n\n## System Overview\n\nThe Fullstack Template follows a **Clean Architecture** approach with clear separation of concerns, dependency inversion, and domain-driven design principles.\n\n### High-Level Architecture\n\n```\n┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐\n│   Frontend      │    │   Backend       │    │   Database      │\n│   (React/TS)    │◄──►│   (Go/Gin)      │◄──►│  (PostgreSQL)   │\n│                 │    │                 │    │                 │\n│ • Components    │    │ • Clean Arch    │    │ • Users         │\n│ • State Mgmt    │    │ • RBAC          │    │ • Audit Logs    │\n│ • Auth Context  │    │ • JWT Auth      │    │ • Sessions      │\n│ • API Client    │    │ • Rate Limiting │    │ • Preferences   │\n└─────────────────┘    └─────────────────┘    └─────────────────┘\n         │                       │                       │\n         │              ┌─────────────────┐              │\n         └─────────────►│   Static Files  │◄─────────────┘\n                        │   (Embedded)    │\n                        └─────────────────┘\n```\n\n### Key Architectural Principles\n\n1. **Separation of Concerns**: Clear boundaries between layers\n2. **Dependency Inversion**: High-level modules don't depend on low-level modules\n3. **Single Responsibility**: Each component has one reason to change\n4. **Domain-Driven Design**: Business logic isolated in domain layer\n5. **Security by Design**: Security considerations at every layer\n6. **Testability**: Architecture supports comprehensive testing\n\n---\n\n## Backend Architecture\n\nThe backend follows **Clean Architecture** with domain-driven design, organized into layers with clear dependencies.\n\n### Layer Structure\n\n```\n┌─────────────────────────────────────────────────────────────────┐\n│                        Transport Layer                          │\n│  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐             │\n│  │ HTTP        │  │ Middleware  │  │ WebSocket   │             │\n│  │ Handlers    │  │ (Auth/RBAC) │  │ (Future)    │             │\n│  └─────────────┘  └─────────────┘  └─────────────┘             │\n└─────────────────────────────────────────────────────────────────┘\n                              │\n                              ▼\n┌─────────────────────────────────────────────────────────────────┐\n│                        Service Layer                            │\n│  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐             │\n│  │ Auth        │  │ User        │  │ Admin       │             │\n│  │ Service     │  │ Service     │  │ Service     │             │\n│  └─────────────┘  └─────────────┘  └─────────────┘             │\n└─────────────────────────────────────────────────────────────────┘\n                              │\n                              ▼\n┌─────────────────────────────────────────────────────────────────┐\n│                        Domain Layer                             │\n│  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐             │\n│  │ User        │  │ Auth        │  │ Audit       │             │\n│  │ Entities    │  │ Entities    │  │ Entities    │             │\n│  └─────────────┘  └─────────────┘  └─────────────┘             │\n└─────────────────────────────────────────────────────────────────┘\n                              │\n                              ▼\n┌─────────────────────────────────────────────────────────────────┐\n│                      Repository Layer                           │\n│  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐             │\n│  │ User        │  │ Auth        │  │ Audit       │             │\n│  │ Repository  │  │ Repository  │  │ Repository  │             │\n│  └─────────────┘  └─────────────┘  └─────────────┘             │\n└─────────────────────────────────────────────────────────────────┘\n                              │\n                              ▼\n┌─────────────────────────────────────────────────────────────────┐\n│                     Infrastructure Layer                        │\n│  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐             │\n│  │ Database    │  │ Email       │  │ Logger      │             │\n│  │ (GORM)      │  │ Service     │  │ (slog)      │             │\n│  └─────────────┘  └─────────────┘  └─────────────┘             │\n└─────────────────────────────────────────────────────────────────┘\n```\n\n### Module Structure\n\nEach domain module follows a consistent structure:\n\n```\ninternal/\n├── auth/                    # Authentication domain\n│   ├── domain/             # Domain entities and business rules\n│   │   ├── types.go        # Core types and entities\n│   │   ├── errors.go       # Domain-specific errors\n│   │   └── rbac.go         # RBAC definitions\n│   ├── repository/         # Data access layer\n│   │   ├── user.go         # User data operations\n│   │   ├── refresh_token.go # Token management\n│   │   └── password_reset.go # Password reset operations\n│   ├── service/            # Business logic layer\n│   │   ├── auth.go         # Authentication service\n│   │   ├── jwt.go          # JWT token service\n│   │   └── email.go        # Email service\n│   └── transport/          # HTTP transport layer\n│       └── http.go         # HTTP handlers\n```\n\n### Dependency Flow\n\n```\nTransport → Service → Repository → Database\n    ↓         ↓         ↓           ↓\n  HTTP    Business   Data      Storage\n Layer     Logic    Access      Layer\n```\n\n**Key Rules:**\n- Transport layer depends on Service layer\n- Service layer depends on Repository interfaces (not implementations)\n- Repository layer implements interfaces defined in Service layer\n- Domain layer has no external dependencies\n\n### Service Layer Design\n\nServices encapsulate business logic and coordinate between repositories:\n\n```go\ntype AuthService struct {\n    config            *config.Config\n    logger            *slog.Logger\n    userRepo          UserRepository      // Interface\n    refreshTokenRepo  RefreshTokenRepository\n    passwordResetRepo PasswordResetRepository\n    jwtService        *JWTService\n    emailService      *EmailService\n}\n\n// Business logic methods\nfunc (s *AuthService) Register(req *RegisterRequest) (*AuthResponse, error)\nfunc (s *AuthService) Login(req *LoginRequest) (*AuthResponse, error)\nfunc (s *AuthService) RefreshToken(req *RefreshTokenRequest) (*AuthResponse, error)\n```\n\n### Repository Pattern\n\nRepositories abstract data access and provide a clean interface:\n\n```go\ntype UserRepository interface {\n    Create(user *User) error\n    GetByID(id uint) (*User, error)\n    GetByEmail(email string) (*User, error)\n    Update(user *User) error\n    Delete(id uint) error\n    ExistsByEmail(email string) (bool, error)\n}\n\ntype userRepository struct {\n    db *gorm.DB\n}\n\nfunc (r *userRepository) Create(user *User) error {\n    return r.db.Create(user).Error\n}\n```\n\n---\n\n## Frontend Architecture\n\nThe frontend uses **Component-Based Architecture** with React, emphasizing reusability, maintainability, and type safety.\n\n### Component Hierarchy\n\n```\nApp\n├── AuthProvider                 # Authentication context\n│   ├── RBACProvider            # Role-based access context\n│   │   ├── Router              # Route management\n│   │   │   ├── PublicRoutes    # Non-authenticated routes\n│   │   │   │   ├── LoginPage\n│   │   │   │   ├── RegisterPage\n│   │   │   │   └── ForgotPasswordPage\n│   │   │   └── ProtectedRoutes # Authenticated routes\n│   │   │       ├── Dashboard\n│   │   │       ├── Profile\n│   │   │       └── AdminPanel (RoleGuard: admin)\n│   │   └── Layout              # Common layout\n│   │       ├── Header\n│   │       ├── Navigation\n│   │       └── Footer\n│   └── Components              # Reusable components\n│       ├── UI Components       # Generic UI elements\n│       ├── Auth Components     # Authentication forms\n│       └── Domain Components   # Business-specific components\n```\n\n### State Management Architecture\n\n```\n┌─────────────────┐\n│   AuthContext   │     Global authentication state\n│                 │     • User data\n│                 │     • Authentication status\n│                 │     • Token management\n└─────────────────┘\n          │\n┌─────────────────┐\n│   RBACContext   │     Role-based access control\n│                 │     • Permission checks\n│                 │     • Role validation\n│                 │     • Access control\n└─────────────────┘\n          │\n┌─────────────────┐\n│ Component State │     Local component state\n│                 │     • Form data\n│                 │     • UI state\n│                 │     • Temporary data\n└─────────────────┘\n```\n\n### Component Organization\n\n```\nsrc/\n├── components/\n│   ├── ui/                  # Generic, reusable components\n│   │   ├── Button.tsx       # Base button component\n│   │   ├── Input.tsx        # Form input component\n│   │   ├── Modal.tsx        # Modal component\n│   │   └── index.ts         # Barrel exports\n│   ├── auth/                # Authentication components\n│   │   ├── LoginForm.tsx    # Login form\n│   │   ├── RegisterForm.tsx # Registration form\n│   │   ├── ProtectedRoute.tsx # Route protection\n│   │   ├── RoleGuard.tsx    # Role-based rendering\n│   │   └── index.ts\n│   ├── layout/              # Layout components\n│   │   ├── Header.tsx\n│   │   ├── Footer.tsx\n│   │   ├── Navigation.tsx\n│   │   └── index.ts\n│   └── admin/               # Admin-specific components\n│       ├── UserList.tsx\n│       ├── UserModal.tsx\n│       └── index.ts\n├── contexts/                # React contexts\n│   ├── AuthContext.tsx      # Authentication context\n│   └── RBACContext.tsx      # RBAC context\n├── hooks/                   # Custom hooks\n│   ├── useAuth.ts           # Authentication hook\n│   ├── useRBAC.ts           # RBAC hook\n│   └── useApi.ts            # API hook\n├── lib/                     # Utilities and services\n│   ├── api.ts               # API client\n│   ├── auth.ts              # Auth utilities\n│   └── validation.ts        # Form validation\n├── pages/                   # Page components\n│   ├── Dashboard.tsx\n│   ├── Profile.tsx\n│   └── admin/\n│       └── AdminPanel.tsx\n└── types/                   # TypeScript definitions\n    ├── api.ts               # API types\n    ├── auth.ts              # Auth types\n    └── user.ts              # User types\n```\n\n### API Client Architecture\n\nThe API client provides a centralized interface for backend communication:\n\n```typescript\nclass ApiClient {\n  private baseURL: string;\n  private refreshPromise: Promise\u003cvoid\u003e | null = null;\n\n  // Automatic token refresh on 401 errors\n  private async request\u003cT\u003e(endpoint: string, options: RequestInit): Promise\u003cT\u003e {\n    let response = await fetch(url, config);\n    \n    // Handle token refresh on 401 errors\n    if (response.status === 401 \u0026\u0026 endpoint !== '/auth/refresh') {\n      const refreshed = await this.refreshToken();\n      if (refreshed) {\n        response = await fetch(url, config); // Retry request\n      }\n    }\n    \n    return this.handleResponse(response);\n  }\n\n  // Authentication methods\n  async login(data: LoginRequest): Promise\u003cAuthResponse\u003e { }\n  async register(data: RegisterRequest): Promise\u003cAuthResponse\u003e { }\n  async refreshToken(): Promise\u003cboolean\u003e { }\n}\n```\n\n---\n\n## Security Architecture\n\nSecurity is implemented at multiple layers with defense-in-depth principles.\n\n### Authentication \u0026 Authorization Flow\n\n```\n┌─────────────┐    ┌─────────────┐    ┌─────────────┐    ┌─────────────┐\n│   Client    │    │  Middleware │    │   Service   │    │  Database   │\n│             │    │             │    │             │    │             │\n│ 1. Login    │───►│ 2. Validate │───►│ 3. Verify   │───►│ 4. Check    │\n│ Request     │    │ Input       │    │ Credentials │    │ User        │\n│             │    │             │    │             │    │             │\n│ 8. Store    │◄───│ 7. Return   │◄───│ 6. Generate │    │ 5. Return   │\n│ Tokens      │    │ Tokens      │    │ JWT Tokens  │    │ User Data   │\n└─────────────┘    └─────────────┘    └─────────────┘    └─────────────┘\n```\n\n### Security Layers\n\n1. **Transport Security**\n   - HTTPS in production\n   - Security headers (HSTS, CSP, etc.)\n   - CORS configuration\n\n2. **Authentication Security**\n   - JWT tokens with short expiration\n   - Secure refresh token rotation\n   - Password hashing with bcrypt\n   - Rate limiting on auth endpoints\n\n3. **Authorization Security**\n   - Role-Based Access Control (RBAC)\n   - Route-level protection\n   - Component-level protection\n   - API endpoint protection\n\n4. **Input Security**\n   - Input validation and sanitization\n   - SQL injection prevention\n   - XSS protection\n   - CSRF protection\n\n5. **Session Security**\n   - Secure token storage\n   - Automatic token refresh\n   - Session invalidation\n   - Device tracking\n\n### RBAC Implementation\n\n```\n┌─────────────┐    ┌─────────────┐    ┌─────────────┐\n│    User     │    │    Role     │    │ Permission  │\n│             │    │             │    │             │\n│ • ID        │───►│ • user      │───►│ • read_own  │\n│ • Email     │    │ • admin     │    │ • write_own │\n│ • Role      │    │             │    │ • read_all  │\n│ • Status    │    │             │    │ • write_all │\n└─────────────┘    └─────────────┘    └─────────────┘\n```\n\n**Role Hierarchy:**\n- `user`: Basic user permissions (read/write own data)\n- `admin`: Full system access (read/write all data)\n\n**Implementation:**\n```go\n// Backend middleware\nfunc RequireRole(role string) gin.HandlerFunc {\n    return func(c *gin.Context) {\n        user := GetUserFromContext(c)\n        if !user.HasRole(role) {\n            c.JSON(403, gin.H{\"error\": \"Insufficient permissions\"})\n            c.Abort()\n            return\n        }\n        c.Next()\n    }\n}\n\n// Frontend component guard\n\u003cRoleGuard requiredRole=\"admin\"\u003e\n  \u003cAdminPanel /\u003e\n\u003c/RoleGuard\u003e\n```\n\n---\n\n## Data Architecture\n\nThe data layer uses PostgreSQL with GORM ORM, following database design best practices.\n\n### Database Schema\n\n```sql\n-- Users table (core entity)\nCREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    first_name VARCHAR(100) NOT NULL,\n    last_name VARCHAR(100) NOT NULL,\n    email_verified BOOLEAN DEFAULT FALSE,\n    email_verify_token VARCHAR(255),\n    role VARCHAR(20) DEFAULT 'user',\n    status VARCHAR(20) DEFAULT 'active',\n    preferences JSONB DEFAULT '{}',\n    avatar VARCHAR(255),\n    last_login_at TIMESTAMP,\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW(),\n    deleted_at TIMESTAMP -- Soft delete\n);\n\n-- Refresh tokens (session management)\nCREATE TABLE refresh_tokens (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n    token VARCHAR(255) UNIQUE NOT NULL,\n    expires_at TIMESTAMP NOT NULL,\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW(),\n    deleted_at TIMESTAMP\n);\n\n-- Password reset tokens\nCREATE TABLE password_resets (\n    id SERIAL PRIMARY KEY,\n    email VARCHAR(255) NOT NULL,\n    token VARCHAR(255) UNIQUE NOT NULL,\n    expires_at TIMESTAMP NOT NULL,\n    used BOOLEAN DEFAULT FALSE,\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW(),\n    deleted_at TIMESTAMP\n);\n\n-- Audit logs (security and compliance)\nCREATE TABLE audit_logs (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER REFERENCES users(id),\n    target_id INTEGER REFERENCES users(id),\n    action VARCHAR(50) NOT NULL,\n    level VARCHAR(20) DEFAULT 'info',\n    resource VARCHAR(50) NOT NULL,\n    description TEXT NOT NULL,\n    ip_address INET,\n    user_agent TEXT,\n    metadata JSONB DEFAULT '{}',\n    created_at TIMESTAMP DEFAULT NOW()\n);\n```\n\n### Data Relationships\n\n```\nUsers (1) ──────────── (N) Refresh Tokens\n  │\n  │ (as user)\n  └─── (N) Audit Logs\n  │\n  │ (as target)\n  └─── (N) Audit Logs\n\nPassword Resets (N) ──────── (1) Users (by email)\n```\n\n### Data Access Patterns\n\n1. **Repository Pattern**: Abstracts data access\n2. **Unit of Work**: Manages transactions\n3. **Soft Deletes**: Maintains data integrity\n4. **Audit Trails**: Tracks all changes\n5. **JSONB Storage**: Flexible user preferences\n\n### Database Migrations\n\n```go\n// Auto-migration on startup\nfunc AutoMigrate(db *gorm.DB) error {\n    return db.AutoMigrate(\n        \u0026User{},\n        \u0026RefreshToken{},\n        \u0026PasswordReset{},\n        \u0026AuditLog{},\n    )\n}\n\n// Manual migrations for production\nfunc RunMigrations(db *gorm.DB) error {\n    // Create tables\n    // Add indexes\n    // Update constraints\n    return nil\n}\n```\n\n---\n\n## Infrastructure Architecture\n\nThe infrastructure supports both development and production environments.\n\n### Development Environment\n\n```\n┌─────────────────┐    ┌─────────────────┐\n│   Frontend      │    │   Backend       │\n│   (Vite Dev)    │    │   (Go Direct)   │\n│   :5173         │    │   :8080         │\n└─────────────────┘    └─────────────────┘\n         │                       │\n         └───────────────────────┼─────────────────┐\n                                 │                 │\n                    ┌─────────────────┐    ┌─────────────────┐\n                    │   PostgreSQL    │    │   Mail Catcher  │\n                    │   (Docker)      │    │   (Optional)    │\n                    │   :5432         │    │   :1025         │\n                    └─────────────────┘    └─────────────────┘\n```\n\n### Production Environment\n\n```\n┌─────────────────┐\n│   Load Balancer │\n│   (nginx/haproxy)│\n│   :80, :443     │\n└─────────────────┘\n         │\n┌─────────────────┐\n│   Go Binary     │\n│   (Static +     │\n│    API Server)  │\n│   :8080         │\n└─────────────────┘\n         │\n┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐\n│   PostgreSQL    │    │   SMTP Server   │    │   Monitoring    │\n│   (Managed)     │    │   (SendGrid/    │    │   (Prometheus)  │\n│   :5432         │    │    AWS SES)     │    │   :9090         │\n└─────────────────┘    └─────────────────┘    └─────────────────┘\n```\n\n### Container Architecture\n\n```dockerfile\n# Multi-stage build\nFROM node:18-alpine AS frontend\nWORKDIR /app/frontend\nCOPY frontend/package*.json ./\nRUN npm install\nCOPY frontend/ ./\nRUN npm run build\n\nFROM golang:1.23-alpine AS backend\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nCOPY --from=frontend /app/frontend/dist ./frontend/dist\nRUN go build -o bin/api cmd/api/main.go\n\nFROM alpine:3.18\nRUN apk --no-cache add ca-certificates tzdata\nWORKDIR /root/\nCOPY --from=backend /app/bin/api ./\nEXPOSE 8080\nCMD [\"./api\"]\n```\n\n### Monitoring \u0026 Observability\n\n1. **Health Checks**: `/health` endpoint for load balancer\n2. **Structured Logging**: JSON logs with correlation IDs\n3. **Metrics**: Prometheus metrics for monitoring\n4. **Distributed Tracing**: Request tracing (optional)\n5. **Audit Logging**: Security and compliance tracking\n\n---\n\n## Design Patterns\n\n### Backend Patterns\n\n1. **Clean Architecture**\n   - Dependency Inversion\n   - Separation of Concerns\n   - Testable Architecture\n\n2. **Repository Pattern**\n   - Data Access Abstraction\n   - Testable Data Layer\n   - Interface Segregation\n\n3. **Service Layer Pattern**\n   - Business Logic Encapsulation\n   - Transaction Management\n   - Dependency Coordination\n\n4. **Middleware Pattern**\n   - Cross-cutting Concerns\n   - Request/Response Processing\n   - Plugin Architecture\n\n5. **Strategy Pattern**\n   - Email Provider Selection\n   - Authentication Methods\n   - Configurable Behaviors\n\n### Frontend Patterns\n\n1. **Component Composition**\n   - Reusable Components\n   - Props-based Configuration\n   - Children Composition\n\n2. **Context Provider Pattern**\n   - Global State Management\n   - Dependency Injection\n   - Cross-component Communication\n\n3. **Higher-Order Components**\n   - Cross-cutting Concerns\n   - Behavior Enhancement\n   - Code Reuse\n\n4. **Custom Hooks Pattern**\n   - Stateful Logic Reuse\n   - Side Effect Management\n   - API Integration\n\n5. **Render Props Pattern**\n   - Dynamic Rendering\n   - Logic Sharing\n   - Component Enhancement\n\n---\n\n## Architectural Decisions\n\n### ADR-001: Clean Architecture\n\n**Status**: Accepted\n\n**Context**: Need scalable, maintainable backend architecture\n\n**Decision**: Implement Clean Architecture with domain-driven design\n\n**Consequences**:\n- ✅ Clear separation of concerns\n- ✅ Testable architecture\n- ✅ Technology independence\n- ❌ Initial complexity\n- ❌ More boilerplate code\n\n### ADR-002: JWT Authentication\n\n**Status**: Accepted\n\n**Context**: Need stateless authentication for scalability\n\n**Decision**: Use JWT tokens with refresh token rotation\n\n**Consequences**:\n- ✅ Stateless authentication\n- ✅ Scalable across instances\n- ✅ Mobile-friendly\n- ❌ Token size overhead\n- ❌ Revocation complexity\n\n### ADR-003: PostgreSQL Database\n\n**Status**: Accepted\n\n**Context**: Need reliable, ACID-compliant database\n\n**Decision**: Use PostgreSQL with GORM ORM\n\n**Consequences**:\n- ✅ ACID compliance\n- ✅ Rich feature set\n- ✅ JSON support\n- ✅ Excellent tooling\n- ❌ Requires setup/maintenance\n\n### ADR-004: React Frontend\n\n**Status**: Accepted\n\n**Context**: Need modern, maintainable frontend\n\n**Decision**: Use React with TypeScript and Vite\n\n**Consequences**:\n- ✅ Component-based architecture\n- ✅ Large ecosystem\n- ✅ Type safety\n- ✅ Fast development\n- ❌ Bundle size\n- ❌ Learning curve\n\n### ADR-005: Embedded Static Files\n\n**Status**: Accepted\n\n**Context**: Simplify deployment with single binary\n\n**Decision**: Embed frontend files in Go binary\n\n**Consequences**:\n- ✅ Single binary deployment\n- ✅ Simplified operations\n- ✅ No separate web server needed\n- ❌ Larger binary size\n- ❌ Rebuild required for frontend changes\n\n### ADR-006: RBAC Implementation\n\n**Status**: Accepted\n\n**Context**: Need authorization system\n\n**Decision**: Implement simple role-based access control\n\n**Consequences**:\n- ✅ Simple to understand\n- ✅ Sufficient for most use cases\n- ✅ Easy to implement\n- ❌ Less flexible than ABAC\n- ❌ May need extension for complex cases\n\n---\n\n## Performance Considerations\n\n### Backend Performance\n\n1. **Database Optimization**\n   - Proper indexing strategy\n   - Query optimization\n   - Connection pooling\n   - Prepared statements\n\n2. **Caching Strategy**\n   - In-memory caching for static data\n   - Redis for session storage (optional)\n   - HTTP caching headers\n\n3. **Concurrency**\n   - Go goroutines for concurrent processing\n   - Context-based cancellation\n   - Proper mutex usage\n\n### Frontend Performance\n\n1. **Code Splitting**\n   - Route-based splitting\n   - Component lazy loading\n   - Dynamic imports\n\n2. **Bundle Optimization**\n   - Tree shaking\n   - Minification\n   - Compression\n\n3. **Rendering Optimization**\n   - React.memo for components\n   - useMemo/useCallback for expensive operations\n   - Virtual scrolling for large lists\n\n### Scalability Patterns\n\n1. **Horizontal Scaling**\n   - Stateless application design\n   - Load balancer support\n   - Database connection management\n\n2. **Vertical Scaling**\n   - Efficient resource usage\n   - Memory management\n   - CPU optimization\n\n3. **Caching Layers**\n   - Application-level caching\n   - Database query caching\n   - CDN for static assets\n\n---\n\nThis architecture provides a solid foundation for building scalable, maintainable applications while maintaining security and performance standards. The modular design allows for easy extension and modification as requirements evolve.",
      "size": 29401,
      "hash": "30f55193a06cbdfbc8884de5ded531505cb46ad5fc986457be05d70463d580ad"
    },
    {
      "path": "docs/DEVELOPER.md",
      "template": false,
      "content": "# Developer Guide\n\nThis guide helps developers understand how to extend, customize, and contribute to the Fullstack Template. It covers patterns, conventions, and best practices used throughout the codebase.\n\n## Table of Contents\n\n- [Getting Started](#getting-started)\n- [Code Organization](#code-organization)\n- [Backend Development](#backend-development)\n- [Frontend Development](#frontend-development)\n- [Testing Guidelines](#testing-guidelines)\n- [Adding New Features](#adding-new-features)\n- [Best Practices](#best-practices)\n- [Troubleshooting](#troubleshooting)\n\n---\n\n## Getting Started\n\n### Development Setup\n\n1. **Clone and install dependencies**:\n   ```bash\n   git clone \u003crepository-url\u003e\n   cd fullstack-template\n   make install\n   ```\n\n2. **Set up environment**:\n   ```bash\n   cp .env.example .env\n   # Edit .env with your settings\n   ```\n\n3. **Start development servers**:\n   ```bash\n   # Terminal 1: Frontend dev server (hot reload)\n   make frontend-dev\n   \n   # Terminal 2: Backend API server\n   make dev\n   ```\n\n4. **Run tests**:\n   ```bash\n   # Backend tests\n   make test\n   \n   # Frontend tests\n   cd frontend \u0026\u0026 npm test\n   ```\n\n### Development Workflow\n\n1. **Create feature branch**: `git checkout -b feature/feature-name`\n2. **Make changes**: Follow coding standards and patterns\n3. **Add tests**: Ensure good test coverage\n4. **Run quality checks**: `make lint \u0026\u0026 make frontend-lint`\n5. **Test thoroughly**: `make test \u0026\u0026 cd frontend \u0026\u0026 npm test`\n6. **Commit changes**: Use conventional commit messages\n7. **Create pull request**: Include description and testing notes\n\n---\n\n## Code Organization\n\n### Project Structure Philosophy\n\nThe codebase follows these organizational principles:\n\n1. **Domain-Driven Design**: Code organized by business domains\n2. **Clean Architecture**: Clear separation of concerns\n3. **Convention over Configuration**: Consistent patterns throughout\n4. **Modular Design**: Easy to add/remove features\n\n### Backend Organization\n\n```\ninternal/\n├── auth/                   # Authentication domain\n│   ├── domain/            # Business entities and rules\n│   ├── repository/        # Data access implementations\n│   ├── service/           # Business logic\n│   └── transport/         # HTTP handlers\n├── user/                  # User management domain\n├── admin/                 # Admin operations domain\n├── middleware/            # Cross-cutting HTTP middleware\n│   ├── auth.go           # Authentication middleware\n│   ├── rbac.go           # Authorization middleware\n│   ├── cors.go           # CORS handling\n│   ├── logger.go         # Request logging\n│   └── rate_limit.go     # Rate limiting\n└── shared/               # Shared utilities\n    ├── config/           # Configuration management\n    ├── database/         # Database setup and migrations\n    ├── email/            # Email service\n    ├── logger/           # Structured logging\n    └── monitoring/       # Health checks and metrics\n```\n\n### Frontend Organization\n\n```\nsrc/\n├── components/           # React components\n│   ├── ui/              # Generic, reusable components\n│   ├── auth/            # Authentication-specific components\n│   ├── admin/           # Admin-specific components\n│   └── layout/          # Layout components\n├── contexts/            # React contexts for global state\n├── hooks/               # Custom React hooks\n├── lib/                 # Utilities and services\n├── pages/               # Page-level components\n├── types/               # TypeScript type definitions\n└── test/                # Test utilities and mocks\n```\n\n---\n\n## Backend Development\n\n### Adding a New Domain Module\n\nFollow this pattern when adding new business domains:\n\n1. **Create domain structure**:\n   ```bash\n   mkdir -p internal/product/{domain,repository,service,transport}\n   ```\n\n2. **Define domain entities** (`internal/product/domain/types.go`):\n   ```go\n   package domain\n\n   import (\n       \"time\"\n       \"gorm.io/gorm\"\n   )\n\n   type Product struct {\n       ID          uint           `json:\"id\" gorm:\"primarykey\"`\n       Name        string         `json:\"name\" gorm:\"not null\"`\n       Description string         `json:\"description\"`\n       Price       float64        `json:\"price\" gorm:\"not null\"`\n       UserID      uint           `json:\"user_id\" gorm:\"not null\"`\n       CreatedAt   time.Time      `json:\"created_at\"`\n       UpdatedAt   time.Time      `json:\"updated_at\"`\n       DeletedAt   gorm.DeletedAt `json:\"-\" gorm:\"index\"`\n   }\n\n   type CreateProductRequest struct {\n       Name        string  `json:\"name\" binding:\"required,min=1,max=100\"`\n       Description string  `json:\"description\" binding:\"max=500\"`\n       Price       float64 `json:\"price\" binding:\"required,min=0\"`\n   }\n\n   type UpdateProductRequest struct {\n       Name        string  `json:\"name\" binding:\"omitempty,min=1,max=100\"`\n       Description string  `json:\"description\" binding:\"omitempty,max=500\"`\n       Price       float64 `json:\"price\" binding:\"omitempty,min=0\"`\n   }\n   ```\n\n3. **Create repository interface** (`internal/product/repository/product.go`):\n   ```go\n   package repository\n\n   import (\n       \"gorm.io/gorm\"\n       \"github.com/your-org/fullstack-template/internal/product/domain\"\n   )\n\n   type ProductRepository interface {\n       Create(product *domain.Product) error\n       GetByID(id uint) (*domain.Product, error)\n       GetByUserID(userID uint) ([]*domain.Product, error)\n       Update(product *domain.Product) error\n       Delete(id uint) error\n   }\n\n   type productRepository struct {\n       db *gorm.DB\n   }\n\n   func NewProductRepository(db *gorm.DB) ProductRepository {\n       return \u0026productRepository{db: db}\n   }\n\n   func (r *productRepository) Create(product *domain.Product) error {\n       return r.db.Create(product).Error\n   }\n\n   func (r *productRepository) GetByID(id uint) (*domain.Product, error) {\n       var product domain.Product\n       err := r.db.First(\u0026product, id).Error\n       if err != nil {\n           if err == gorm.ErrRecordNotFound {\n               return nil, domain.ErrProductNotFound\n           }\n           return nil, err\n       }\n       return \u0026product, nil\n   }\n   ```\n\n4. **Implement service layer** (`internal/product/service/product.go`):\n   ```go\n   package service\n\n   import (\n       \"log/slog\"\n       \"github.com/your-org/fullstack-template/internal/product/domain\"\n       \"github.com/your-org/fullstack-template/internal/product/repository\"\n       \"github.com/your-org/fullstack-template/internal/shared/config\"\n   )\n\n   type ProductService struct {\n       config     *config.Config\n       logger     *slog.Logger\n       productRepo repository.ProductRepository\n   }\n\n   func NewProductService(\n       config *config.Config,\n       logger *slog.Logger,\n       productRepo repository.ProductRepository,\n   ) *ProductService {\n       return \u0026ProductService{\n           config:     config,\n           logger:     logger,\n           productRepo: productRepo,\n       }\n   }\n\n   func (s *ProductService) CreateProduct(userID uint, req *domain.CreateProductRequest) (*domain.Product, error) {\n       product := \u0026domain.Product{\n           Name:        req.Name,\n           Description: req.Description,\n           Price:       req.Price,\n           UserID:      userID,\n       }\n\n       if err := s.productRepo.Create(product); err != nil {\n           s.logger.Error(\"failed to create product\", \"error\", err)\n           return nil, err\n       }\n\n       s.logger.Info(\"product created\", \"product_id\", product.ID, \"user_id\", userID)\n       return product, nil\n   }\n   ```\n\n5. **Add HTTP handlers** (`internal/product/transport/http.go`):\n   ```go\n   package transport\n\n   import (\n       \"net/http\"\n       \"strconv\"\n       \"log/slog\"\n\n       \"github.com/gin-gonic/gin\"\n       \"github.com/your-org/fullstack-template/internal/product/domain\"\n       \"github.com/your-org/fullstack-template/internal/product/service\"\n       \"github.com/your-org/fullstack-template/internal/middleware\"\n   )\n\n   type ProductHandler struct {\n       productService *service.ProductService\n       logger         *slog.Logger\n   }\n\n   func NewProductHandler(productService *service.ProductService, logger *slog.Logger) *ProductHandler {\n       return \u0026ProductHandler{\n           productService: productService,\n           logger:         logger,\n       }\n   }\n\n   func (h *ProductHandler) CreateProduct(c *gin.Context) {\n       var req domain.CreateProductRequest\n       if err := c.ShouldBindJSON(\u0026req); err != nil {\n           c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n           return\n       }\n\n       userID := middleware.GetUserIDFromContext(c)\n       product, err := h.productService.CreateProduct(userID, \u0026req)\n       if err != nil {\n           c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Failed to create product\"})\n           return\n       }\n\n       c.JSON(http.StatusCreated, product)\n   }\n\n   func RegisterRoutes(r *gin.RouterGroup, productService *service.ProductService, logger *slog.Logger) {\n       handler := NewProductHandler(productService, logger)\n       \n       products := r.Group(\"/products\")\n       products.Use(middleware.RequireAuth())\n       {\n           products.POST(\"\", handler.CreateProduct)\n           products.GET(\"\", handler.GetUserProducts)\n           products.GET(\"/:id\", handler.GetProduct)\n           products.PUT(\"/:id\", handler.UpdateProduct)\n           products.DELETE(\"/:id\", handler.DeleteProduct)\n       }\n   }\n   ```\n\n6. **Register in main server** (`internal/http/server.go`):\n   ```go\n   // Add to imports\n   producttransport \"github.com/your-org/fullstack-template/internal/product/transport\"\n   productservice \"github.com/your-org/fullstack-template/internal/product/service\"\n   productrepo \"github.com/your-org/fullstack-template/internal/product/repository\"\n\n   // Add to server setup\n   func NewServer(cfg *config.Config, logger *slog.Logger, db *gorm.DB) *Server {\n       // ... existing code ...\n\n       // Product module\n       productRepo := productrepo.NewProductRepository(db)\n       productService := productservice.NewProductService(cfg, logger, productRepo)\n\n       // Register routes\n       api := r.Group(\"/api\")\n       producttransport.RegisterRoutes(api, productService, logger)\n   }\n   ```\n\n### Database Migrations\n\nAdd new entities to auto-migration:\n\n```go\n// internal/shared/database/database.go\nfunc AutoMigrate(db *gorm.DB) error {\n    return db.AutoMigrate(\n        \u0026authdomain.User{},\n        \u0026authdomain.RefreshToken{},\n        \u0026authdomain.PasswordReset{},\n        \u0026authdomain.AuditLog{},\n        \u0026productdomain.Product{}, // Add new entity\n    )\n}\n```\n\n### Error Handling Patterns\n\nFollow consistent error handling:\n\n```go\n// Domain errors (internal/product/domain/errors.go)\nvar (\n    ErrProductNotFound     = errors.New(\"product not found\")\n    ErrProductUnauthorized = errors.New(\"unauthorized to access product\")\n    ErrInvalidPrice        = errors.New(\"price must be positive\")\n)\n\n// Service layer error handling\nfunc (s *ProductService) GetProduct(userID, productID uint) (*domain.Product, error) {\n    product, err := s.productRepo.GetByID(productID)\n    if err != nil {\n        if err == domain.ErrProductNotFound {\n            return nil, err\n        }\n        s.logger.Error(\"failed to get product\", \"product_id\", productID, \"error\", err)\n        return nil, fmt.Errorf(\"failed to get product: %w\", err)\n    }\n\n    // Check ownership\n    if product.UserID != userID {\n        return nil, domain.ErrProductUnauthorized\n    }\n\n    return product, nil\n}\n\n// HTTP layer error handling\nfunc (h *ProductHandler) GetProduct(c *gin.Context) {\n    id, _ := strconv.ParseUint(c.Param(\"id\"), 10, 32)\n    userID := middleware.GetUserIDFromContext(c)\n\n    product, err := h.productService.GetProduct(userID, uint(id))\n    if err != nil {\n        switch err {\n        case domain.ErrProductNotFound:\n            c.JSON(http.StatusNotFound, gin.H{\"error\": \"Product not found\"})\n        case domain.ErrProductUnauthorized:\n            c.JSON(http.StatusForbidden, gin.H{\"error\": \"Access denied\"})\n        default:\n            h.logger.Error(\"get product failed\", \"error\", err)\n            c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"Internal server error\"})\n        }\n        return\n    }\n\n    c.JSON(http.StatusOK, product)\n}\n```\n\n### Testing Backend Code\n\nCreate comprehensive tests for each layer:\n\n```go\n// Test service layer (internal/product/service/product_test.go)\nfunc TestProductService_CreateProduct(t *testing.T) {\n    tests := []struct {\n        name    string\n        userID  uint\n        request *domain.CreateProductRequest\n        want    *domain.Product\n        wantErr bool\n    }{\n        {\n            name:   \"successful creation\",\n            userID: 1,\n            request: \u0026domain.CreateProductRequest{\n                Name:        \"Test Product\",\n                Description: \"Test Description\",\n                Price:       99.99,\n            },\n            want: \u0026domain.Product{\n                Name:        \"Test Product\",\n                Description: \"Test Description\", \n                Price:       99.99,\n                UserID:      1,\n            },\n            wantErr: false,\n        },\n    }\n\n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            // Setup mocks\n            mockRepo := \u0026MockProductRepository{}\n            service := NewProductService(nil, nil, mockRepo)\n\n            // Execute\n            got, err := service.CreateProduct(tt.userID, tt.request)\n\n            // Assert\n            if tt.wantErr {\n                assert.Error(t, err)\n            } else {\n                assert.NoError(t, err)\n                assert.Equal(t, tt.want.Name, got.Name)\n            }\n        })\n    }\n}\n```\n\n---\n\n## Frontend Development\n\n### Adding New Components\n\nFollow these patterns when creating React components:\n\n1. **UI Components** (generic, reusable):\n   ```typescript\n   // src/components/ui/Card.tsx\n   import React from 'react';\n   import { cn } from '../../utils/cn';\n\n   interface CardProps extends React.HTMLAttributes\u003cHTMLDivElement\u003e {\n     children: React.ReactNode;\n     variant?: 'default' | 'outlined' | 'elevated';\n   }\n\n   export const Card: React.FC\u003cCardProps\u003e = ({ \n     children, \n     variant = 'default', \n     className,\n     ...props \n   }) =\u003e {\n     return (\n       \u003cdiv\n         className={cn(\n           'rounded-lg p-4',\n           {\n             'bg-white shadow-sm': variant === 'default',\n             'border border-gray-200': variant === 'outlined',\n             'bg-white shadow-lg': variant === 'elevated',\n           },\n           className\n         )}\n         {...props}\n       \u003e\n         {children}\n       \u003c/div\u003e\n     );\n   };\n   ```\n\n2. **Domain Components** (business-specific):\n   ```typescript\n   // src/components/product/ProductCard.tsx\n   import React from 'react';\n   import { Card } from '../ui/Card';\n   import { Button } from '../ui/Button';\n   import { Product } from '../../types/product';\n\n   interface ProductCardProps {\n     product: Product;\n     onEdit?: (product: Product) =\u003e void;\n     onDelete?: (product: Product) =\u003e void;\n     readonly?: boolean;\n   }\n\n   export const ProductCard: React.FC\u003cProductCardProps\u003e = ({\n     product,\n     onEdit,\n     onDelete,\n     readonly = false,\n   }) =\u003e {\n     return (\n       \u003cCard className=\"space-y-4\"\u003e\n         \u003cdiv\u003e\n           \u003ch3 className=\"text-lg font-semibold\"\u003e{product.name}\u003c/h3\u003e\n           \u003cp className=\"text-gray-600\"\u003e{product.description}\u003c/p\u003e\n           \u003cp className=\"text-xl font-bold\"\u003e${product.price}\u003c/p\u003e\n         \u003c/div\u003e\n\n         {!readonly \u0026\u0026 (\n           \u003cdiv className=\"flex gap-2\"\u003e\n             {onEdit \u0026\u0026 (\n               \u003cButton \n                 variant=\"outline\" \n                 onClick={() =\u003e onEdit(product)}\n               \u003e\n                 Edit\n               \u003c/Button\u003e\n             )}\n             {onDelete \u0026\u0026 (\n               \u003cButton \n                 variant=\"destructive\" \n                 onClick={() =\u003e onDelete(product)}\n               \u003e\n                 Delete\n               \u003c/Button\u003e\n             )}\n           \u003c/div\u003e\n         )}\n       \u003c/Card\u003e\n     );\n   };\n   ```\n\n3. **Form Components**:\n   ```typescript\n   // src/components/product/ProductForm.tsx\n   import React, { useState } from 'react';\n   import { Button } from '../ui/Button';\n   import { Input } from '../ui/Input';\n   import { CreateProductRequest, Product } from '../../types/product';\n\n   interface ProductFormProps {\n     initialData?: Product;\n     onSubmit: (data: CreateProductRequest) =\u003e Promise\u003cvoid\u003e;\n     onCancel?: () =\u003e void;\n     isLoading?: boolean;\n   }\n\n   export const ProductForm: React.FC\u003cProductFormProps\u003e = ({\n     initialData,\n     onSubmit,\n     onCancel,\n     isLoading = false,\n   }) =\u003e {\n     const [formData, setFormData] = useState\u003cCreateProductRequest\u003e({\n       name: initialData?.name || '',\n       description: initialData?.description || '',\n       price: initialData?.price || 0,\n     });\n\n     const [errors, setErrors] = useState\u003cRecord\u003cstring, string\u003e\u003e({});\n\n     const handleSubmit = async (e: React.FormEvent) =\u003e {\n       e.preventDefault();\n       \n       // Validation\n       const newErrors: Record\u003cstring, string\u003e = {};\n       if (!formData.name.trim()) {\n         newErrors.name = 'Name is required';\n       }\n       if (formData.price \u003c= 0) {\n         newErrors.price = 'Price must be positive';\n       }\n\n       if (Object.keys(newErrors).length \u003e 0) {\n         setErrors(newErrors);\n         return;\n       }\n\n       try {\n         await onSubmit(formData);\n         setErrors({});\n       } catch (error) {\n         // Handle submission errors\n         console.error('Form submission error:', error);\n       }\n     };\n\n     return (\n       \u003cform onSubmit={handleSubmit} className=\"space-y-4\"\u003e\n         \u003cInput\n           label=\"Product Name\"\n           value={formData.name}\n           onChange={(e) =\u003e setFormData({ ...formData, name: e.target.value })}\n           error={errors.name}\n           disabled={isLoading}\n         /\u003e\n\n         \u003cInput\n           label=\"Description\"\n           value={formData.description}\n           onChange={(e) =\u003e setFormData({ ...formData, description: e.target.value })}\n           error={errors.description}\n           disabled={isLoading}\n         /\u003e\n\n         \u003cInput\n           label=\"Price\"\n           type=\"number\"\n           step=\"0.01\"\n           min=\"0\"\n           value={formData.price}\n           onChange={(e) =\u003e setFormData({ ...formData, price: parseFloat(e.target.value) })}\n           error={errors.price}\n           disabled={isLoading}\n         /\u003e\n\n         \u003cdiv className=\"flex gap-2\"\u003e\n           \u003cButton type=\"submit\" loading={isLoading}\u003e\n             {initialData ? 'Update' : 'Create'} Product\n           \u003c/Button\u003e\n           {onCancel \u0026\u0026 (\n             \u003cButton type=\"button\" variant=\"outline\" onClick={onCancel}\u003e\n               Cancel\n             \u003c/Button\u003e\n           )}\n         \u003c/div\u003e\n       \u003c/form\u003e\n     );\n   };\n   ```\n\n### Custom Hooks\n\nCreate reusable logic with custom hooks:\n\n```typescript\n// src/hooks/useProducts.ts\nimport { useState, useEffect } from 'react';\nimport { api } from '../lib/api';\nimport { Product, CreateProductRequest } from '../types/product';\n\nexport const useProducts = () =\u003e {\n  const [products, setProducts] = useState\u003cProduct[]\u003e([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState\u003cstring | null\u003e(null);\n\n  const fetchProducts = async () =\u003e {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await api.getProducts();\n      setProducts(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch products');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createProduct = async (data: CreateProductRequest) =\u003e {\n    try {\n      const newProduct = await api.createProduct(data);\n      setProducts(prev =\u003e [...prev, newProduct]);\n      return newProduct;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to create product');\n      throw err;\n    }\n  };\n\n  const updateProduct = async (id: number, data: Partial\u003cProduct\u003e) =\u003e {\n    try {\n      const updatedProduct = await api.updateProduct(id, data);\n      setProducts(prev =\u003e \n        prev.map(p =\u003e p.id === id ? updatedProduct : p)\n      );\n      return updatedProduct;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to update product');\n      throw err;\n    }\n  };\n\n  const deleteProduct = async (id: number) =\u003e {\n    try {\n      await api.deleteProduct(id);\n      setProducts(prev =\u003e prev.filter(p =\u003e p.id !== id));\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to delete product');\n      throw err;\n    }\n  };\n\n  useEffect(() =\u003e {\n    fetchProducts();\n  }, []);\n\n  return {\n    products,\n    loading,\n    error,\n    createProduct,\n    updateProduct,\n    deleteProduct,\n    refetch: fetchProducts,\n  };\n};\n```\n\n### State Management Patterns\n\nUse Context for global state:\n\n```typescript\n// src/contexts/ProductContext.tsx\nimport React, { createContext, useContext, ReactNode } from 'react';\nimport { useProducts } from '../hooks/useProducts';\nimport { Product, CreateProductRequest } from '../types/product';\n\ninterface ProductContextType {\n  products: Product[];\n  loading: boolean;\n  error: string | null;\n  createProduct: (data: CreateProductRequest) =\u003e Promise\u003cProduct\u003e;\n  updateProduct: (id: number, data: Partial\u003cProduct\u003e) =\u003e Promise\u003cProduct\u003e;\n  deleteProduct: (id: number) =\u003e Promise\u003cvoid\u003e;\n  refetch: () =\u003e Promise\u003cvoid\u003e;\n}\n\nconst ProductContext = createContext\u003cProductContextType | undefined\u003e(undefined);\n\nexport const ProductProvider: React.FC\u003c{ children: ReactNode }\u003e = ({ children }) =\u003e {\n  const productState = useProducts();\n\n  return (\n    \u003cProductContext.Provider value={productState}\u003e\n      {children}\n    \u003c/ProductContext.Provider\u003e\n  );\n};\n\nexport const useProductContext = (): ProductContextType =\u003e {\n  const context = useContext(ProductContext);\n  if (context === undefined) {\n    throw new Error('useProductContext must be used within a ProductProvider');\n  }\n  return context;\n};\n```\n\n### Testing Frontend Components\n\nCreate comprehensive component tests:\n\n```typescript\n// src/components/product/ProductCard.test.tsx\nimport { describe, it, expect, vi } from 'vitest';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { ProductCard } from './ProductCard';\nimport { Product } from '../../types/product';\n\nconst mockProduct: Product = {\n  id: 1,\n  name: 'Test Product',\n  description: 'Test Description',\n  price: 99.99,\n  user_id: 1,\n  created_at: '2024-01-01T00:00:00Z',\n  updated_at: '2024-01-01T00:00:00Z',\n};\n\ndescribe('ProductCard', () =\u003e {\n  it('renders product information', () =\u003e {\n    render(\u003cProductCard product={mockProduct} /\u003e);\n    \n    expect(screen.getByText('Test Product')).toBeInTheDocument();\n    expect(screen.getByText('Test Description')).toBeInTheDocument();\n    expect(screen.getByText('$99.99')).toBeInTheDocument();\n  });\n\n  it('calls onEdit when edit button is clicked', () =\u003e {\n    const onEdit = vi.fn();\n    render(\u003cProductCard product={mockProduct} onEdit={onEdit} /\u003e);\n    \n    fireEvent.click(screen.getByText('Edit'));\n    expect(onEdit).toHaveBeenCalledWith(mockProduct);\n  });\n\n  it('calls onDelete when delete button is clicked', () =\u003e {\n    const onDelete = vi.fn();\n    render(\u003cProductCard product={mockProduct} onDelete={onDelete} /\u003e);\n    \n    fireEvent.click(screen.getByText('Delete'));\n    expect(onDelete).toHaveBeenCalledWith(mockProduct);\n  });\n\n  it('hides action buttons in readonly mode', () =\u003e {\n    render(\n      \u003cProductCard \n        product={mockProduct} \n        onEdit={vi.fn()} \n        onDelete={vi.fn()} \n        readonly \n      /\u003e\n    );\n    \n    expect(screen.queryByText('Edit')).not.toBeInTheDocument();\n    expect(screen.queryByText('Delete')).not.toBeInTheDocument();\n  });\n});\n```\n\n---\n\n## Testing Guidelines\n\n### Backend Testing Strategy\n\n1. **Unit Tests**: Test individual functions and methods\n2. **Integration Tests**: Test API endpoints with database\n3. **Repository Tests**: Test data access layer\n4. **Service Tests**: Test business logic\n\n### Frontend Testing Strategy\n\n1. **Component Tests**: Test component behavior and rendering\n2. **Hook Tests**: Test custom hook logic\n3. **Integration Tests**: Test component interactions\n4. **API Tests**: Test API client functionality\n\n### Test Organization\n\n```\ninternal/\n├── auth/\n│   ├── service/\n│   │   ├── auth.go\n│   │   └── auth_test.go          # Unit tests\n│   └── repository/\n│       ├── user.go\n│       └── user_test.go          # Repository tests\n└── test/\n    └── integration/              # Integration tests\n        ├── auth_test.go\n        ├── user_test.go\n        └── setup_test.go\n\nfrontend/src/\n├── components/\n│   └── ui/\n│       ├── Button.tsx\n│       └── Button.test.tsx       # Component tests\n├── hooks/\n│   ├── useAuth.ts\n│   └── useAuth.test.ts           # Hook tests\n└── test/\n    ├── setup.ts                  # Test setup\n    ├── mocks/                    # Mock data and services\n    └── utils/                    # Test utilities\n```\n\n### Writing Good Tests\n\n1. **Follow AAA Pattern**: Arrange, Act, Assert\n2. **Test Behavior, Not Implementation**: Focus on what, not how\n3. **Use Descriptive Names**: Test names should explain the scenario\n4. **Keep Tests Independent**: Each test should be isolated\n5. **Mock External Dependencies**: Use mocks for databases, APIs\n\nExample test patterns:\n\n```go\n// Good: Tests behavior with clear scenario\nfunc TestAuthService_Login_WithValidCredentials_ReturnsTokens(t *testing.T) {\n    // Arrange\n    user := createTestUser(t)\n    mockRepo := \u0026MockUserRepository{}\n    service := NewAuthService(mockRepo)\n\n    // Act\n    response, err := service.Login(\u0026LoginRequest{\n        Email:    user.Email,\n        Password: \"password123\",\n    })\n\n    // Assert\n    assert.NoError(t, err)\n    assert.NotEmpty(t, response.AccessToken)\n    assert.NotEmpty(t, response.RefreshToken)\n}\n\n// Bad: Vague test name, testing implementation\nfunc TestLogin(t *testing.T) {\n    service := NewAuthService()\n    service.userRepo.GetByEmail(\"test@example.com\")\n    // ...\n}\n```\n\n---\n\n## Adding New Features\n\n### Feature Development Checklist\n\nWhen adding a new feature, follow this checklist:\n\n- [ ] **Design**: Plan the feature architecture\n- [ ] **Backend Implementation**:\n  - [ ] Domain entities and types\n  - [ ] Repository interfaces and implementations\n  - [ ] Service layer with business logic\n  - [ ] HTTP handlers and routing\n  - [ ] Database migrations\n  - [ ] Error handling\n  - [ ] Input validation\n  - [ ] Unit tests\n  - [ ] Integration tests\n- [ ] **Frontend Implementation**:\n  - [ ] TypeScript types\n  - [ ] API client methods\n  - [ ] React components\n  - [ ] Custom hooks\n  - [ ] State management\n  - [ ] Form validation\n  - [ ] Component tests\n  - [ ] Integration tests\n- [ ] **Documentation**:\n  - [ ] API documentation\n  - [ ] Component documentation\n  - [ ] Usage examples\n- [ ] **Quality Assurance**:\n  - [ ] Code review\n  - [ ] Manual testing\n  - [ ] Performance testing\n  - [ ] Security review\n\n### Example: Adding a Notification System\n\n1. **Backend Implementation**:\n   ```go\n   // Domain\n   type Notification struct {\n       ID       uint      `json:\"id\"`\n       UserID   uint      `json:\"user_id\"`\n       Type     string    `json:\"type\"`\n       Title    string    `json:\"title\"`\n       Message  string    `json:\"message\"`\n       Read     bool      `json:\"read\"`\n       Priority string    `json:\"priority\"`\n   }\n\n   // Service\n   func (s *NotificationService) CreateNotification(userID uint, req *CreateNotificationRequest) error {\n       notification := \u0026Notification{\n           UserID:   userID,\n           Type:     req.Type,\n           Title:    req.Title,\n           Message:  req.Message,\n           Priority: req.Priority,\n       }\n       return s.repo.Create(notification)\n   }\n\n   // HTTP Handler\n   func (h *NotificationHandler) GetNotifications(c *gin.Context) {\n       userID := middleware.GetUserIDFromContext(c)\n       notifications, err := h.service.GetUserNotifications(userID)\n       if err != nil {\n           c.JSON(500, gin.H{\"error\": \"Failed to get notifications\"})\n           return\n       }\n       c.JSON(200, notifications)\n   }\n   ```\n\n2. **Frontend Implementation**:\n   ```typescript\n   // Hook\n   export const useNotifications = () =\u003e {\n     const [notifications, setNotifications] = useState\u003cNotification[]\u003e([]);\n     \n     const fetchNotifications = async () =\u003e {\n       const data = await api.getNotifications();\n       setNotifications(data);\n     };\n\n     const markAsRead = async (id: number) =\u003e {\n       await api.markNotificationAsRead(id);\n       setNotifications(prev =\u003e \n         prev.map(n =\u003e n.id === id ? { ...n, read: true } : n)\n       );\n     };\n\n     return { notifications, fetchNotifications, markAsRead };\n   };\n\n   // Component\n   export const NotificationList: React.FC = () =\u003e {\n     const { notifications, markAsRead } = useNotifications();\n\n     return (\n       \u003cdiv className=\"space-y-2\"\u003e\n         {notifications.map(notification =\u003e (\n           \u003cNotificationItem\n             key={notification.id}\n             notification={notification}\n             onMarkAsRead={markAsRead}\n           /\u003e\n         ))}\n       \u003c/div\u003e\n     );\n   };\n   ```\n\n---\n\n## Best Practices\n\n### Code Quality\n\n1. **Follow Language Conventions**:\n   - Go: Follow [Effective Go](https://golang.org/doc/effective_go.html)\n   - TypeScript: Follow [TypeScript Handbook](https://www.typescriptlang.org/docs/)\n\n2. **Use Consistent Naming**:\n   - Go: `CamelCase` for public, `camelCase` for private\n   - TypeScript: `PascalCase` for components, `camelCase` for functions\n\n3. **Write Self-Documenting Code**:\n   ```go\n   // Good\n   func calculateMonthlyInterest(principal float64, annualRate float64) float64 {\n       return principal * (annualRate / 12)\n   }\n\n   // Bad\n   func calc(p, r float64) float64 {\n       return p * (r / 12)\n   }\n   ```\n\n4. **Handle Errors Properly**:\n   ```go\n   // Good\n   user, err := userService.GetUser(id)\n   if err != nil {\n       logger.Error(\"failed to get user\", \"user_id\", id, \"error\", err)\n       return fmt.Errorf(\"get user failed: %w\", err)\n   }\n\n   // Bad\n   user, _ := userService.GetUser(id)\n   ```\n\n### Security Best Practices\n\n1. **Input Validation**:\n   - Always validate and sanitize user input\n   - Use binding validation tags in Go\n   - Validate on both frontend and backend\n\n2. **Authentication**:\n   - Use secure JWT tokens\n   - Implement proper token refresh\n   - Set appropriate token expiration\n\n3. **Authorization**:\n   - Check permissions at every endpoint\n   - Use role-based access control\n   - Implement principle of least privilege\n\n4. **Data Protection**:\n   - Hash passwords with bcrypt\n   - Use HTTPS in production\n   - Sanitize data for XSS prevention\n\n### Performance Best Practices\n\n1. **Database Optimization**:\n   - Add appropriate indexes\n   - Use pagination for large datasets\n   - Optimize queries with EXPLAIN\n\n2. **Frontend Optimization**:\n   - Use React.memo for expensive components\n   - Implement code splitting\n   - Optimize bundle size\n\n3. **Caching**:\n   - Cache static data appropriately\n   - Use HTTP caching headers\n   - Implement application-level caching\n\n---\n\n## Troubleshooting\n\n### Common Backend Issues\n\n1. **Database Connection Errors**:\n   ```bash\n   # Check PostgreSQL status\n   pg_isready -h localhost -p 5432\n   \n   # Verify connection string\n   echo $DATABASE_URL\n   \n   # Test manual connection\n   psql -h localhost -U postgres -d fullstack_template\n   ```\n\n2. **Migration Issues**:\n   ```bash\n   # Reset database\n   make db-reset\n   \n   # Run migrations manually\n   go run cmd/api/main.go --migrate\n   ```\n\n3. **JWT Token Issues**:\n   ```bash\n   # Check JWT secret is set\n   echo $JWT_SECRET\n   \n   # Verify token structure\n   # Use jwt.io to decode tokens for debugging\n   ```\n\n### Common Frontend Issues\n\n1. **Build Errors**:\n   ```bash\n   # Clear node modules and reinstall\n   rm -rf node_modules package-lock.json\n   npm install\n   \n   # Type checking\n   npm run type-check\n   ```\n\n2. **API Connection Issues**:\n   ```typescript\n   // Check API configuration\n   console.log('API URL:', config.apiUrl);\n   \n   // Test API endpoints manually\n   curl http://localhost:8080/api/health\n   ```\n\n3. **State Management Issues**:\n   ```typescript\n   // Debug context state\n   const MyComponent = () =\u003e {\n     const auth = useAuth();\n     console.log('Auth state:', auth);\n     return \u003cdiv\u003e...\u003c/div\u003e;\n   };\n   ```\n\n### Development Tools\n\n1. **Backend Debugging**:\n   ```go\n   // Use structured logging\n   logger.Info(\"debug info\", \"user_id\", userID, \"action\", \"login\")\n   \n   // Use Go debugger (delve)\n   dlv debug cmd/api/main.go\n   ```\n\n2. **Frontend Debugging**:\n   ```typescript\n   // React Developer Tools\n   // Browser DevTools Console\n   // Network Tab for API calls\n   \n   // Debug API calls\n   console.log('API Request:', { method, url, data });\n   console.log('API Response:', response);\n   ```\n\n3. **Database Debugging**:\n   ```sql\n   -- Check database state\n   \\dt  -- List tables\n   \\d users  -- Describe users table\n   \n   -- Query logs\n   SELECT * FROM audit_logs ORDER BY created_at DESC LIMIT 10;\n   ```\n\n---\n\nThis developer guide provides the foundation for extending and maintaining the Fullstack Template. Follow these patterns and conventions to ensure consistency and quality throughout the codebase.",
      "size": 33844,
      "hash": "30b70b4a91124a64a39ae65a5d130cc71fe47da4b4d42aa1118a704a259c1a5a"
    },
    {
      "path": "docs/SECURITY.md",
      "template": false,
      "content": "# Security Documentation\n\nThis document outlines the security features, best practices, and guidelines implemented in the Fullstack Template to ensure robust application security.\n\n## Table of Contents\n\n- [Security Overview](#security-overview)\n- [Authentication Security](#authentication-security)\n- [Authorization \u0026 RBAC](#authorization--rbac)\n- [Input Validation \u0026 Sanitization](#input-validation--sanitization)\n- [Session Management](#session-management)\n- [Data Protection](#data-protection)\n- [Infrastructure Security](#infrastructure-security)\n- [Security Monitoring](#security-monitoring)\n- [Security Best Practices](#security-best-practices)\n- [Incident Response](#incident-response)\n- [Security Checklist](#security-checklist)\n\n---\n\n## Security Overview\n\nThe Fullstack Template implements **defense-in-depth** security principles with multiple layers of protection:\n\n```\n┌─────────────────────────────────────────────────────────────────┐\n│                    Transport Security                           │\n│  • HTTPS/TLS • Security Headers • CORS • Rate Limiting         │\n└─────────────────────────────────────────────────────────────────┘\n                              │\n┌─────────────────────────────────────────────────────────────────┐\n│                 Authentication Security                         │\n│  • JWT Tokens • Password Hashing • Token Refresh • MFA Ready   │\n└─────────────────────────────────────────────────────────────────┘\n                              │\n┌─────────────────────────────────────────────────────────────────┐\n│                  Authorization Security                         │\n│  • RBAC • Route Protection • Component Guards • API Middleware │\n└─────────────────────────────────────────────────────────────────┘\n                              │\n┌─────────────────────────────────────────────────────────────────┐\n│                    Input Security                               │\n│  • Validation • Sanitization • SQL Injection Prevention        │\n└─────────────────────────────────────────────────────────────────┘\n                              │\n┌─────────────────────────────────────────────────────────────────┐\n│                     Data Security                               │\n│  • Encryption • Secure Storage • Audit Trails • Privacy        │\n└─────────────────────────────────────────────────────────────────┘\n```\n\n### Security Principles\n\n1. **Zero Trust**: Never trust, always verify\n2. **Least Privilege**: Minimum required permissions\n3. **Defense in Depth**: Multiple security layers\n4. **Fail Securely**: Secure defaults and error handling\n5. **Security by Design**: Built-in, not bolted-on\n\n---\n\n## Authentication Security\n\n### JWT Implementation\n\nThe system uses **JSON Web Tokens (JWT)** with secure configuration:\n\n```go\n// JWT Configuration\ntype JWTConfig struct {\n    Secret               string        // 256-bit secret key\n    AccessTokenDuration  time.Duration // Short-lived (1 hour)\n    RefreshTokenDuration time.Duration // Longer-lived (30 days)\n    Issuer              string        // Token issuer\n    Audience            string        // Token audience\n}\n\n// Secure JWT Claims\ntype JWTClaims struct {\n    UserID    uint     `json:\"user_id\"`\n    Email     string   `json:\"email\"`\n    Role      UserRole `json:\"role\"`\n    TokenType string   `json:\"token_type\"` // \"access\" or \"refresh\"\n    jwt.RegisteredClaims\n}\n```\n\n### Token Security Features\n\n1. **Short-lived Access Tokens**: 1-hour expiration to limit exposure\n2. **Secure Refresh Tokens**: Database-stored, revocable tokens\n3. **Token Rotation**: New refresh token on each refresh\n4. **Token Blacklisting**: Ability to revoke tokens immediately\n5. **Audience/Issuer Validation**: Prevents token reuse across systems\n\n### Password Security\n\n```go\n// Secure password hashing with bcrypt\nfunc hashPassword(password string) (string, error) {\n    // Use bcrypt with appropriate cost (12+ for production)\n    bytes, err := bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost)\n    return string(bytes), err\n}\n\n// Password strength validation\nfunc validatePassword(password string) error {\n    if len(password) \u003c 8 {\n        return ErrPasswordTooWeak\n    }\n    \n    // Additional checks:\n    // - Minimum 8 characters\n    // - At least one uppercase letter\n    // - At least one lowercase letter  \n    // - At least one digit\n    // - At least one special character\n    \n    return nil\n}\n```\n\n### Multi-Factor Authentication (MFA) Ready\n\nThe architecture supports MFA implementation:\n\n```go\n// MFA types\ntype MFAMethod string\n\nconst (\n    MFAMethodTOTP = \"totp\"   // Time-based OTP (Google Authenticator)\n    MFAMethodSMS  = \"sms\"    // SMS-based OTP\n    MFAMethodEmail = \"email\" // Email-based OTP\n)\n\n// User MFA configuration\ntype UserMFA struct {\n    UserID     uint      `json:\"user_id\"`\n    Method     MFAMethod `json:\"method\"`\n    Secret     string    `json:\"secret\"` // Encrypted TOTP secret\n    BackupCodes []string `json:\"backup_codes\"` // Encrypted backup codes\n    Verified   bool      `json:\"verified\"`\n    CreatedAt  time.Time `json:\"created_at\"`\n}\n```\n\n---\n\n## Authorization \u0026 RBAC\n\n### Role-Based Access Control\n\nThe system implements a hierarchical RBAC model:\n\n```go\n// User roles with inheritance\ntype UserRole string\n\nconst (\n    RoleUser  UserRole = \"user\"  // Basic user permissions\n    RoleAdmin UserRole = \"admin\" // Full system access\n)\n\n// Permission matrix\nvar PermissionMatrix = map[UserRole][]Permission{\n    RoleUser: {\n        PermissionReadOwnProfile,\n        PermissionUpdateOwnProfile,\n        PermissionReadOwnData,\n        PermissionUpdateOwnData,\n    },\n    RoleAdmin: {\n        // Inherits all user permissions plus:\n        PermissionReadAllUsers,\n        PermissionUpdateAllUsers,\n        PermissionDeleteUsers,\n        PermissionManageRoles,\n        PermissionViewAuditLogs,\n        PermissionSystemConfig,\n    },\n}\n```\n\n### Backend Authorization Middleware\n\n```go\n// Role-based route protection\nfunc RequireRole(role UserRole) gin.HandlerFunc {\n    return func(c *gin.Context) {\n        user := GetUserFromContext(c)\n        \n        if user == nil {\n            c.JSON(401, gin.H{\"error\": \"Authentication required\"})\n            c.Abort()\n            return\n        }\n        \n        if !user.HasRole(role) {\n            logger.Warn(\"access denied\", \n                \"user_id\", user.ID, \n                \"required_role\", role, \n                \"user_role\", user.Role,\n                \"endpoint\", c.Request.URL.Path,\n            )\n            c.JSON(403, gin.H{\"error\": \"Insufficient permissions\"})\n            c.Abort()\n            return\n        }\n        \n        c.Next()\n    }\n}\n\n// Permission-based protection\nfunc RequirePermission(permission Permission) gin.HandlerFunc {\n    return func(c *gin.Context) {\n        user := GetUserFromContext(c)\n        \n        if !user.HasPermission(permission) {\n            c.JSON(403, gin.H{\"error\": \"Access denied\"})\n            c.Abort()\n            return\n        }\n        \n        c.Next()\n    }\n}\n```\n\n### Frontend Authorization Guards\n\n```typescript\n// Role-based component rendering\ninterface RoleGuardProps {\n  requiredRole: UserRole | UserRole[];\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\nexport const RoleGuard: React.FC\u003cRoleGuardProps\u003e = ({\n  requiredRole,\n  children,\n  fallback = null,\n}) =\u003e {\n  const { user } = useAuth();\n  \n  if (!user || !user.isActive()) {\n    return fallback;\n  }\n  \n  const hasRequiredRole = Array.isArray(requiredRole)\n    ? requiredRole.some(role =\u003e user.hasRole(role))\n    : user.hasRole(requiredRole);\n    \n  return hasRequiredRole ? children : fallback;\n};\n\n// Protected route component\nexport const ProtectedRoute: React.FC\u003cProtectedRouteProps\u003e = ({\n  children,\n  requiredRole,\n  requireEmailVerification = false,\n}) =\u003e {\n  const { user, isAuthenticated, isLoading } = useAuth();\n  const navigate = useNavigate();\n  \n  useEffect(() =\u003e {\n    if (!isLoading) {\n      if (!isAuthenticated) {\n        navigate('/login');\n        return;\n      }\n      \n      if (requireEmailVerification \u0026\u0026 !user?.email_verified) {\n        navigate('/verify-email');\n        return;\n      }\n      \n      if (requiredRole \u0026\u0026 !user?.hasRole(requiredRole)) {\n        navigate('/unauthorized');\n        return;\n      }\n    }\n  }, [isAuthenticated, isLoading, user, requiredRole]);\n  \n  if (isLoading) {\n    return \u003cLoadingSpinner /\u003e;\n  }\n  \n  return isAuthenticated ? children : null;\n};\n```\n\n---\n\n## Input Validation \u0026 Sanitization\n\n### Backend Validation\n\n```go\n// Request validation with binding tags\ntype CreateUserRequest struct {\n    Email     string `json:\"email\" binding:\"required,email,max=255\"`\n    Password  string `json:\"password\" binding:\"required,min=8,max=128\"`\n    FirstName string `json:\"first_name\" binding:\"required,min=1,max=50,alpha\"`\n    LastName  string `json:\"last_name\" binding:\"required,min=1,max=50,alpha\"`\n}\n\n// Custom validators\nfunc validateEmail(fl validator.FieldLevel) bool {\n    email := fl.Field().String()\n    // Additional email validation beyond basic format\n    return emailRegex.MatchString(email) \u0026\u0026 !isDisposableEmail(email)\n}\n\n// SQL injection prevention with GORM\nfunc (r *userRepository) GetByEmail(email string) (*User, error) {\n    var user User\n    // GORM automatically uses prepared statements\n    err := r.db.Where(\"email = ?\", email).First(\u0026user).Error\n    return \u0026user, err\n}\n\n// Manual query with parameterization\nfunc (r *userRepository) SearchUsers(query string) ([]*User, error) {\n    var users []*User\n    // Always use parameterized queries\n    err := r.db.Raw(\n        \"SELECT * FROM users WHERE LOWER(first_name || ' ' || last_name) LIKE LOWER(?)\",\n        \"%\"+query+\"%\",\n    ).Scan(\u0026users).Error\n    return users, err\n}\n```\n\n### Frontend Validation\n\n```typescript\n// Form validation schema\ninterface ValidationSchema {\n  email: (value: string) =\u003e string | null;\n  password: (value: string) =\u003e string | null;\n  name: (value: string) =\u003e string | null;\n}\n\nconst validationSchema: ValidationSchema = {\n  email: (value: string) =\u003e {\n    if (!value) return 'Email is required';\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n      return 'Please enter a valid email address';\n    }\n    if (value.length \u003e 255) return 'Email is too long';\n    return null;\n  },\n  \n  password: (value: string) =\u003e {\n    if (!value) return 'Password is required';\n    if (value.length \u003c 8) return 'Password must be at least 8 characters';\n    if (value.length \u003e 128) return 'Password is too long';\n    if (!/(?=.*[a-z])/.test(value)) return 'Password must contain lowercase letter';\n    if (!/(?=.*[A-Z])/.test(value)) return 'Password must contain uppercase letter';\n    if (!/(?=.*\\d)/.test(value)) return 'Password must contain a number';\n    if (!/(?=.*[!@#$%^\u0026*])/.test(value)) return 'Password must contain special character';\n    return null;\n  },\n  \n  name: (value: string) =\u003e {\n    if (!value) return 'Name is required';\n    if (value.length \u003e 50) return 'Name is too long';\n    if (!/^[a-zA-Z\\s-']+$/.test(value)) return 'Name contains invalid characters';\n    return null;\n  },\n};\n\n// XSS prevention with sanitization\nimport DOMPurify from 'dompurify';\n\nconst sanitizeInput = (input: string): string =\u003e {\n  return DOMPurify.sanitize(input, { \n    ALLOWED_TAGS: [], \n    ALLOWED_ATTR: [] \n  });\n};\n\n// Content Security Policy (CSP) headers\nconst cspDirectives = {\n  'default-src': [\"'self'\"],\n  'script-src': [\"'self'\", \"'unsafe-inline'\"],\n  'style-src': [\"'self'\", \"'unsafe-inline'\"],\n  'img-src': [\"'self'\", \"data:\", \"https:\"],\n  'connect-src': [\"'self'\"],\n  'font-src': [\"'self'\"],\n  'object-src': [\"'none'\"],\n  'media-src': [\"'self'\"],\n  'frame-src': [\"'none'\"],\n};\n```\n\n---\n\n## Session Management\n\n### Secure Session Handling\n\n```go\n// Session configuration\ntype SessionConfig struct {\n    MaxConcurrentSessions int           // Limit concurrent sessions\n    SessionTimeout        time.Duration // Automatic timeout\n    RefreshTokenRotation  bool          // Rotate refresh tokens\n    DeviceTracking        bool          // Track device information\n}\n\n// Session tracking\ntype UserSession struct {\n    ID           string    `json:\"id\"`\n    UserID       uint      `json:\"user_id\"`\n    DeviceInfo   string    `json:\"device_info\"`\n    IPAddress    string    `json:\"ip_address\"`\n    UserAgent    string    `json:\"user_agent\"`\n    LastActivity time.Time `json:\"last_activity\"`\n    CreatedAt    time.Time `json:\"created_at\"`\n    ExpiresAt    time.Time `json:\"expires_at\"`\n}\n\n// Session middleware\nfunc SessionTracking() gin.HandlerFunc {\n    return func(c *gin.Context) {\n        user := GetUserFromContext(c)\n        if user != nil {\n            // Update last activity\n            sessionService.UpdateActivity(user.ID, c.ClientIP(), c.GetHeader(\"User-Agent\"))\n            \n            // Check for suspicious activity\n            if sessionService.IsSuspiciousActivity(user.ID, c.ClientIP()) {\n                logger.Warn(\"suspicious activity detected\",\n                    \"user_id\", user.ID,\n                    \"ip\", c.ClientIP(),\n                    \"user_agent\", c.GetHeader(\"User-Agent\"),\n                )\n                // Could force re-authentication or lock account\n            }\n        }\n        c.Next()\n    }\n}\n```\n\n### Frontend Session Management\n\n```typescript\n// Automatic token refresh\nclass ApiClient {\n  private refreshPromise: Promise\u003cvoid\u003e | null = null;\n\n  private async request\u003cT\u003e(endpoint: string, options: RequestInit): Promise\u003cT\u003e {\n    let response = await fetch(url, config);\n    \n    // Handle token refresh on 401 errors\n    if (response.status === 401 \u0026\u0026 endpoint !== '/auth/refresh' \u0026\u0026 endpoint !== '/auth/login') {\n      const refreshed = await this.refreshToken();\n      if (refreshed) {\n        // Retry original request with new token\n        response = await fetch(url, config);\n      } else {\n        // Redirect to login\n        window.location.href = '/login';\n        return Promise.reject(new Error('Authentication failed'));\n      }\n    }\n    \n    return this.handleResponse(response);\n  }\n\n  async refreshToken(): Promise\u003cboolean\u003e {\n    // Prevent multiple simultaneous refresh attempts\n    if (this.refreshPromise) {\n      await this.refreshPromise;\n      return true;\n    }\n\n    this.refreshPromise = this.performRefresh();\n    \n    try {\n      await this.refreshPromise;\n      return true;\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      return false;\n    } finally {\n      this.refreshPromise = null;\n    }\n  }\n}\n\n// Session timeout warning\nexport const useSessionTimeout = () =\u003e {\n  const { logout } = useAuth();\n  \n  useEffect(() =\u003e {\n    let timeoutId: NodeJS.Timeout;\n    let warningId: NodeJS.Timeout;\n    \n    const resetTimer = () =\u003e {\n      clearTimeout(timeoutId);\n      clearTimeout(warningId);\n      \n      // Show warning 5 minutes before timeout\n      warningId = setTimeout(() =\u003e {\n        const extend = confirm('Your session will expire soon. Continue?');\n        if (!extend) {\n          logout();\n        }\n      }, 55 * 60 * 1000); // 55 minutes\n      \n      // Force logout after 1 hour\n      timeoutId = setTimeout(() =\u003e {\n        logout();\n      }, 60 * 60 * 1000); // 60 minutes\n    };\n    \n    // Reset timer on user activity\n    const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart'];\n    events.forEach(event =\u003e {\n      document.addEventListener(event, resetTimer, true);\n    });\n    \n    resetTimer(); // Initial timer\n    \n    return () =\u003e {\n      clearTimeout(timeoutId);\n      clearTimeout(warningId);\n      events.forEach(event =\u003e {\n        document.removeEventListener(event, resetTimer, true);\n      });\n    };\n  }, [logout]);\n};\n```\n\n---\n\n## Data Protection\n\n### Data Encryption\n\n```go\n// Encryption utilities\ntype Encryptor struct {\n    key []byte // 32-byte AES-256 key\n}\n\nfunc NewEncryptor(key string) (*Encryptor, error) {\n    keyBytes := sha256.Sum256([]byte(key))\n    return \u0026Encryptor{key: keyBytes[:]}, nil\n}\n\nfunc (e *Encryptor) Encrypt(plaintext string) (string, error) {\n    if plaintext == \"\" {\n        return \"\", nil\n    }\n    \n    block, err := aes.NewCipher(e.key)\n    if err != nil {\n        return \"\", err\n    }\n    \n    gcm, err := cipher.NewGCM(block)\n    if err != nil {\n        return \"\", err\n    }\n    \n    nonce := make([]byte, gcm.NonceSize())\n    if _, err = io.ReadFull(rand.Reader, nonce); err != nil {\n        return \"\", err\n    }\n    \n    ciphertext := gcm.Seal(nonce, nonce, []byte(plaintext), nil)\n    return base64.StdEncoding.EncodeToString(ciphertext), nil\n}\n\n// Sensitive data encryption\ntype EncryptedField struct {\n    Value string `gorm:\"column:encrypted_value\"`\n}\n\nfunc (ef *EncryptedField) Set(value string, encryptor *Encryptor) error {\n    encrypted, err := encryptor.Encrypt(value)\n    if err != nil {\n        return err\n    }\n    ef.Value = encrypted\n    return nil\n}\n\nfunc (ef *EncryptedField) Get(encryptor *Encryptor) (string, error) {\n    return encryptor.Decrypt(ef.Value)\n}\n\n// User model with encrypted fields\ntype User struct {\n    ID              uint           `json:\"id\" gorm:\"primarykey\"`\n    Email           string         `json:\"email\"`\n    PasswordHash    string         `json:\"-\"`\n    SSN             EncryptedField `json:\"-\" gorm:\"embedded;embeddedPrefix:ssn_\"`\n    CreditCard      EncryptedField `json:\"-\" gorm:\"embedded;embeddedPrefix:cc_\"`\n}\n```\n\n### Data Privacy\n\n```go\n// GDPR compliance utilities\ntype PrivacyService struct {\n    userRepo UserRepository\n    logger   *slog.Logger\n}\n\n// Right to be forgotten (GDPR Article 17)\nfunc (s *PrivacyService) DeleteUserData(userID uint, reason string) error {\n    // Log the deletion request\n    s.logger.Info(\"user data deletion requested\",\n        \"user_id\", userID,\n        \"reason\", reason,\n    )\n    \n    // Anonymize audit logs instead of deletion for compliance\n    if err := s.anonymizeAuditLogs(userID); err != nil {\n        return fmt.Errorf(\"failed to anonymize audit logs: %w\", err)\n    }\n    \n    // Delete user account and related data\n    if err := s.userRepo.HardDelete(userID); err != nil {\n        return fmt.Errorf(\"failed to delete user: %w\", err)\n    }\n    \n    return nil\n}\n\n// Data export (GDPR Article 20)\nfunc (s *PrivacyService) ExportUserData(userID uint) (*UserDataExport, error) {\n    user, err := s.userRepo.GetByID(userID)\n    if err != nil {\n        return nil, err\n    }\n    \n    export := \u0026UserDataExport{\n        PersonalData: user.ToExportFormat(),\n        ActivityData: s.getUserActivity(userID),\n        Preferences:  user.Preferences,\n        ExportedAt:   time.Now(),\n    }\n    \n    return export, nil\n}\n\n// Data minimization\nfunc (s *PrivacyService) CleanupExpiredData() error {\n    // Delete old password reset tokens\n    if err := s.deleteExpiredTokens(); err != nil {\n        return err\n    }\n    \n    // Anonymize old audit logs (after retention period)\n    if err := s.anonymizeOldAuditLogs(time.Now().AddDate(-7, 0, 0)); err != nil {\n        return err\n    }\n    \n    return nil\n}\n```\n\n---\n\n## Infrastructure Security\n\n### Security Headers\n\n```go\n// Security middleware\nfunc SecurityHeaders() gin.HandlerFunc {\n    return func(c *gin.Context) {\n        // Prevent MIME type sniffing\n        c.Header(\"X-Content-Type-Options\", \"nosniff\")\n        \n        // Prevent framing (clickjacking protection)\n        c.Header(\"X-Frame-Options\", \"DENY\")\n        \n        // XSS protection\n        c.Header(\"X-XSS-Protection\", \"1; mode=block\")\n        \n        // HSTS (HTTPS Strict Transport Security)\n        if c.Request.TLS != nil {\n            c.Header(\"Strict-Transport-Security\", \"max-age=31536000; includeSubDomains\")\n        }\n        \n        // Content Security Policy\n        c.Header(\"Content-Security-Policy\", \n            \"default-src 'self'; \"+\n            \"script-src 'self' 'unsafe-inline'; \"+\n            \"style-src 'self' 'unsafe-inline'; \"+\n            \"img-src 'self' data: https:; \"+\n            \"connect-src 'self'; \"+\n            \"font-src 'self'; \"+\n            \"object-src 'none'; \"+\n            \"media-src 'self'; \"+\n            \"frame-src 'none';\")\n        \n        // Referrer Policy\n        c.Header(\"Referrer-Policy\", \"strict-origin-when-cross-origin\")\n        \n        // Feature Policy\n        c.Header(\"Permissions-Policy\", \n            \"geolocation=(), microphone=(), camera=(), payment=()\")\n        \n        c.Next()\n    }\n}\n```\n\n### Rate Limiting\n\n```go\n// Rate limiting configuration\ntype RateLimitConfig struct {\n    GlobalRPS    int // Requests per second globally\n    UserRPS      int // Requests per second per user\n    AuthRPS      int // Special limit for auth endpoints\n    WindowSize   time.Duration\n    BurstAllowed int\n}\n\n// Advanced rate limiting\nfunc RateLimit(config RateLimitConfig) gin.HandlerFunc {\n    // IP-based rate limiting\n    ipLimiter := rate.NewLimiter(rate.Limit(config.GlobalRPS), config.BurstAllowed)\n    ipLimiters := make(map[string]*rate.Limiter)\n    mu := sync.RWMutex{}\n    \n    return func(c *gin.Context) {\n        ip := c.ClientIP()\n        \n        // Get or create limiter for IP\n        mu.RLock()\n        limiter, exists := ipLimiters[ip]\n        mu.RUnlock()\n        \n        if !exists {\n            mu.Lock()\n            limiter = rate.NewLimiter(rate.Limit(config.GlobalRPS), config.BurstAllowed)\n            ipLimiters[ip] = limiter\n            mu.Unlock()\n        }\n        \n        if !limiter.Allow() {\n            c.JSON(429, gin.H{\n                \"error\": \"Rate limit exceeded\",\n                \"retry_after\": 60,\n            })\n            c.Abort()\n            return\n        }\n        \n        // User-specific rate limiting (if authenticated)\n        if userID := GetUserIDFromContext(c); userID != 0 {\n            userKey := fmt.Sprintf(\"user:%d\", userID)\n            userLimiter := getUserLimiter(userKey, config.UserRPS)\n            \n            if !userLimiter.Allow() {\n                c.JSON(429, gin.H{\n                    \"error\": \"User rate limit exceeded\",\n                    \"retry_after\": 60,\n                })\n                c.Abort()\n                return\n            }\n        }\n        \n        c.Next()\n    }\n}\n\n// Auth-specific rate limiting\nfunc AuthRateLimit() gin.HandlerFunc {\n    return RateLimit(RateLimitConfig{\n        GlobalRPS:    10,  // Very restrictive for auth\n        UserRPS:      5,   // Per-user auth rate limit\n        WindowSize:   time.Minute,\n        BurstAllowed: 3,\n    })\n}\n```\n\n### CORS Configuration\n\n```go\n// CORS configuration\nfunc ConfigureCORS() gin.HandlerFunc {\n    config := cors.Config{\n        AllowOrigins: []string{\n            \"https://yourdomain.com\",\n            \"https://app.yourdomain.com\",\n        },\n        AllowMethods: []string{\n            \"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"OPTIONS\",\n        },\n        AllowHeaders: []string{\n            \"Origin\", \"Content-Type\", \"Authorization\",\n            \"X-Requested-With\", \"X-Client-Version\",\n        },\n        ExposeHeaders: []string{\n            \"X-RateLimit-Limit\", \"X-RateLimit-Remaining\",\n        },\n        AllowCredentials: true,\n        MaxAge:          12 * time.Hour,\n    }\n    \n    // Development environment\n    if os.Getenv(\"ENVIRONMENT\") == \"development\" {\n        config.AllowOrigins = []string{\"http://localhost:3000\", \"http://localhost:5173\"}\n    }\n    \n    return cors.New(config)\n}\n```\n\n---\n\n## Security Monitoring\n\n### Audit Logging\n\n```go\n// Comprehensive audit logging\ntype AuditLogger struct {\n    repo   AuditRepository\n    logger *slog.Logger\n}\n\nfunc (a *AuditLogger) LogSecurityEvent(\n    userID *uint,\n    action AuditAction,\n    level AuditLevel,\n    resource string,\n    description string,\n    metadata map[string]interface{},\n    c *gin.Context,\n) {\n    auditLog := \u0026AuditLog{\n        UserID:      userID,\n        Action:      action,\n        Level:       level,\n        Resource:    resource,\n        Description: description,\n        IPAddress:   c.ClientIP(),\n        UserAgent:   c.GetHeader(\"User-Agent\"),\n        Metadata:    metadata,\n        CreatedAt:   time.Now(),\n    }\n    \n    // Log to database\n    if err := a.repo.Create(auditLog); err != nil {\n        a.logger.Error(\"failed to create audit log\", \"error\", err)\n    }\n    \n    // Log to structured logger for monitoring\n    a.logger.Info(\"security event\",\n        \"action\", action,\n        \"level\", level,\n        \"user_id\", userID,\n        \"ip\", c.ClientIP(),\n        \"resource\", resource,\n    )\n    \n    // Send to security monitoring system\n    if level == AuditLevelError || level == AuditLevelWarning {\n        a.sendSecurityAlert(auditLog)\n    }\n}\n\n// Security events to monitor\nconst (\n    AuditActionLoginSuccess       AuditAction = \"login_success\"\n    AuditActionLoginFailed        AuditAction = \"login_failed\"\n    AuditActionPasswordChanged    AuditAction = \"password_changed\"\n    AuditActionRoleChanged        AuditAction = \"role_changed\"\n    AuditActionSuspiciousActivity AuditAction = \"suspicious_activity\"\n    AuditActionRateLimitExceeded  AuditAction = \"rate_limit_exceeded\"\n    AuditActionUnauthorizedAccess AuditAction = \"unauthorized_access\"\n)\n```\n\n### Intrusion Detection\n\n```go\n// Security monitoring service\ntype SecurityMonitor struct {\n    redis      *redis.Client\n    logger     *slog.Logger\n    auditLogger *AuditLogger\n}\n\n// Detect suspicious patterns\nfunc (s *SecurityMonitor) AnalyzeUserActivity(userID uint, ip string, userAgent string) {\n    key := fmt.Sprintf(\"user_activity:%d\", userID)\n    \n    // Track login locations\n    s.trackLoginLocation(userID, ip)\n    \n    // Track device changes\n    s.trackDeviceChange(userID, userAgent)\n    \n    // Track rapid requests\n    s.trackRequestPattern(userID, ip)\n    \n    // Detect brute force attempts\n    s.detectBruteForce(ip)\n}\n\nfunc (s *SecurityMonitor) trackLoginLocation(userID uint, ip string) {\n    // Get geolocation for IP\n    location := s.getIPLocation(ip)\n    \n    // Check if login from new country/region\n    lastLocation := s.getLastLoginLocation(userID)\n    if lastLocation != \"\" \u0026\u0026 location.Country != lastLocation {\n        s.auditLogger.LogSecurityEvent(\n            \u0026userID,\n            AuditActionSuspiciousActivity,\n            AuditLevelWarning,\n            \"auth\",\n            fmt.Sprintf(\"Login from new location: %s\", location.Country),\n            map[string]interface{}{\n                \"ip\": ip,\n                \"country\": location.Country,\n                \"previous_country\": lastLocation,\n            },\n            nil,\n        )\n        \n        // Could trigger email notification or require additional verification\n        s.sendLocationChangeAlert(userID, location)\n    }\n    \n    s.setLastLoginLocation(userID, location.Country)\n}\n\nfunc (s *SecurityMonitor) detectBruteForce(ip string) {\n    key := fmt.Sprintf(\"failed_logins:%s\", ip)\n    \n    // Increment failed login counter\n    count, err := s.redis.Incr(context.Background(), key).Result()\n    if err != nil {\n        s.logger.Error(\"failed to track failed logins\", \"error\", err)\n        return\n    }\n    \n    // Set expiration on first failed login\n    if count == 1 {\n        s.redis.Expire(context.Background(), key, 15*time.Minute)\n    }\n    \n    // Alert on suspicious activity\n    if count \u003e= 5 {\n        s.auditLogger.LogSecurityEvent(\n            nil,\n            AuditActionSuspiciousActivity,\n            AuditLevelError,\n            \"auth\",\n            fmt.Sprintf(\"Brute force attempt detected from IP %s\", ip),\n            map[string]interface{}{\n                \"failed_attempts\": count,\n                \"ip\": ip,\n            },\n            nil,\n        )\n        \n        // Could trigger IP blocking\n        s.blockSuspiciousIP(ip, time.Hour)\n    }\n}\n```\n\n### Security Alerts\n\n```go\n// Security alert system\ntype SecurityAlerts struct {\n    emailService EmailService\n    slackWebhook string\n    logger       *slog.Logger\n}\n\ntype SecurityAlert struct {\n    Level       string                 `json:\"level\"`\n    Title       string                 `json:\"title\"`\n    Description string                 `json:\"description\"`\n    UserID      *uint                  `json:\"user_id,omitempty\"`\n    IPAddress   string                 `json:\"ip_address\"`\n    Timestamp   time.Time             `json:\"timestamp\"`\n    Metadata    map[string]interface{} `json:\"metadata\"`\n}\n\nfunc (s *SecurityAlerts) SendAlert(alert SecurityAlert) {\n    // Log alert\n    s.logger.Warn(\"security alert\",\n        \"level\", alert.Level,\n        \"title\", alert.Title,\n        \"user_id\", alert.UserID,\n        \"ip\", alert.IPAddress,\n    )\n    \n    // Send to Slack (for immediate notification)\n    if s.slackWebhook != \"\" {\n        s.sendSlackAlert(alert)\n    }\n    \n    // Send email to security team\n    s.emailService.SendSecurityAlert(alert)\n    \n    // Could integrate with:\n    // - PagerDuty for critical alerts\n    // - SIEM systems\n    // - Security incident response tools\n}\n\nfunc (s *SecurityAlerts) sendSlackAlert(alert SecurityAlert) {\n    payload := map[string]interface{}{\n        \"text\": fmt.Sprintf(\"🚨 Security Alert: %s\", alert.Title),\n        \"attachments\": []map[string]interface{}{\n            {\n                \"color\":  s.getColorForLevel(alert.Level),\n                \"fields\": []map[string]interface{}{\n                    {\"title\": \"Level\", \"value\": alert.Level, \"short\": true},\n                    {\"title\": \"IP Address\", \"value\": alert.IPAddress, \"short\": true},\n                    {\"title\": \"Description\", \"value\": alert.Description, \"short\": false},\n                    {\"title\": \"Timestamp\", \"value\": alert.Timestamp.Format(time.RFC3339), \"short\": true},\n                },\n            },\n        },\n    }\n    \n    // Send webhook\n    s.sendWebhook(s.slackWebhook, payload)\n}\n```\n\n---\n\n## Security Best Practices\n\n### Development Security\n\n1. **Secure Coding Practices**:\n   ```go\n   // Always validate input\n   func (s *UserService) UpdateProfile(userID uint, req *UpdateProfileRequest) error {\n       if err := s.validateProfileRequest(req); err != nil {\n           return err\n       }\n       // ... process request\n   }\n   \n   // Use parameterized queries\n   func (r *repository) GetUser(id uint) (*User, error) {\n       var user User\n       err := r.db.Where(\"id = ?\", id).First(\u0026user).Error // ✅ Safe\n       // err := r.db.Raw(\"SELECT * FROM users WHERE id = \" + strconv.Itoa(id)).Scan(\u0026user).Error // ❌ Dangerous\n       return \u0026user, err\n   }\n   \n   // Handle errors securely\n   func (h *AuthHandler) Login(c *gin.Context) {\n       user, err := h.authService.Login(req)\n       if err != nil {\n           // Don't leak internal errors\n           h.logger.Error(\"login failed\", \"error\", err)\n           c.JSON(401, gin.H{\"error\": \"Invalid credentials\"}) // Generic message\n           return\n       }\n   }\n   ```\n\n2. **Secret Management**:\n   ```bash\n   # Use environment variables for secrets\n   export JWT_SECRET=\"$(openssl rand -base64 32)\"\n   export DATABASE_PASSWORD=\"secure-random-password\"\n   \n   # Never commit secrets to git\n   echo \"*.env\" \u003e\u003e .gitignore\n   echo \"secrets/\" \u003e\u003e .gitignore\n   \n   # Use secret management tools in production\n   # - AWS Secrets Manager\n   # - HashiCorp Vault\n   # - Azure Key Vault\n   ```\n\n3. **Dependency Security**:\n   ```bash\n   # Regularly update dependencies\n   go mod tidy\n   npm audit fix\n   \n   # Check for vulnerabilities\n   go list -json -m all | nancy sleuth\n   npm audit\n   \n   # Use dependency scanning tools\n   # - Snyk\n   # - OWASP Dependency Check\n   # - GitHub Security Advisories\n   ```\n\n### Deployment Security\n\n1. **Production Configuration**:\n   ```bash\n   # Use HTTPS in production\n   SECURE_COOKIES=true\n   CORS_ORIGINS=https://yourdomain.com\n   \n   # Disable debug modes\n   ENVIRONMENT=production\n   LOG_LEVEL=warn\n   \n   # Set secure JWT settings\n   JWT_SECRET=\"$(openssl rand -base64 32)\"\n   JWT_ACCESS_DURATION=1h\n   JWT_REFRESH_DURATION=720h\n   ```\n\n2. **Infrastructure Security**:\n   ```yaml\n   # docker-compose.prod.yml\n   version: '3.8'\n   services:\n     app:\n       image: your-app:latest\n       environment:\n         - ENVIRONMENT=production\n       secrets:\n         - jwt_secret\n         - db_password\n       deploy:\n         replicas: 3\n         update_config:\n           parallelism: 1\n           delay: 10s\n   \n   secrets:\n     jwt_secret:\n       external: true\n     db_password:\n       external: true\n   ```\n\n3. **Network Security**:\n   ```nginx\n   # nginx.conf\n   server {\n       listen 443 ssl http2;\n       server_name yourdomain.com;\n       \n       # SSL configuration\n       ssl_certificate /path/to/cert.pem;\n       ssl_certificate_key /path/to/key.pem;\n       ssl_protocols TLSv1.2 TLSv1.3;\n       ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;\n       \n       # Security headers\n       add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;\n       add_header X-Frame-Options DENY always;\n       add_header X-Content-Type-Options nosniff always;\n       \n       location / {\n           proxy_pass http://app:8080;\n           proxy_set_header Host $host;\n           proxy_set_header X-Real-IP $remote_addr;\n           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n           proxy_set_header X-Forwarded-Proto $scheme;\n       }\n   }\n   ```\n\n---\n\n## Incident Response\n\n### Security Incident Response Plan\n\n1. **Incident Classification**:\n   - **P0 (Critical)**: Data breach, system compromise\n   - **P1 (High)**: Authentication bypass, privilege escalation\n   - **P2 (Medium)**: Suspicious activity, failed attacks\n   - **P3 (Low)**: Policy violations, minor issues\n\n2. **Response Procedures**:\n   ```go\n   // Emergency response functions\n   func (s *SecurityService) EmergencyLockdown(userID uint, reason string) error {\n       // Immediately suspend user account\n       if err := s.userService.SuspendUser(userID, reason); err != nil {\n           return err\n       }\n       \n       // Revoke all tokens\n       if err := s.authService.RevokeAllTokens(userID); err != nil {\n           return err\n       }\n       \n       // Log incident\n       s.auditLogger.LogSecurityEvent(\n           \u0026userID,\n           \"emergency_lockdown\",\n           AuditLevelError,\n           \"security\",\n           fmt.Sprintf(\"Emergency lockdown: %s\", reason),\n           nil,\n           nil,\n       )\n       \n       // Notify security team\n       s.alerts.SendCriticalAlert(\"User account locked down\", userID, reason)\n       \n       return nil\n   }\n   \n   func (s *SecurityService) SystemLockdown() error {\n       // Enable maintenance mode\n       s.setMaintenanceMode(true)\n       \n       // Block new logins\n       s.setLoginDisabled(true)\n       \n       // Revoke active sessions\n       s.revokeAllActiveSessions()\n       \n       // Notify administrators\n       s.alerts.SendSystemAlert(\"System lockdown activated\")\n       \n       return nil\n   }\n   ```\n\n3. **Forensics and Investigation**:\n   ```sql\n   -- Query suspicious activity\n   SELECT * FROM audit_logs \n   WHERE level = 'error' \n   AND created_at \u003e NOW() - INTERVAL '24 hours'\n   ORDER BY created_at DESC;\n   \n   -- Analyze failed login attempts\n   SELECT ip_address, COUNT(*) as attempts\n   FROM audit_logs \n   WHERE action = 'login_failed'\n   AND created_at \u003e NOW() - INTERVAL '1 hour'\n   GROUP BY ip_address\n   HAVING COUNT(*) \u003e 5;\n   \n   -- Track user activity timeline\n   SELECT action, description, ip_address, created_at\n   FROM audit_logs\n   WHERE user_id = $1\n   AND created_at BETWEEN $2 AND $3\n   ORDER BY created_at;\n   ```\n\n---\n\n## Security Checklist\n\n### Development Checklist\n\n- [ ] **Authentication**\n  - [ ] Passwords hashed with bcrypt (cost ≥ 12)\n  - [ ] JWT tokens with short expiration (≤ 1 hour)\n  - [ ] Secure refresh token rotation\n  - [ ] Account lockout after failed attempts\n  - [ ] Email verification required\n\n- [ ] **Authorization**\n  - [ ] RBAC implemented correctly\n  - [ ] All endpoints protected appropriately\n  - [ ] Frontend route protection\n  - [ ] Component-level access control\n\n- [ ] **Input Security**\n  - [ ] All inputs validated and sanitized\n  - [ ] Parameterized database queries\n  - [ ] XSS prevention measures\n  - [ ] File upload restrictions\n\n- [ ] **Session Security**\n  - [ ] Secure session management\n  - [ ] Session timeout configured\n  - [ ] Concurrent session limits\n  - [ ] Device tracking enabled\n\n### Deployment Checklist\n\n- [ ] **Infrastructure**\n  - [ ] HTTPS enabled with valid certificates\n  - [ ] Security headers configured\n  - [ ] CORS properly configured\n  - [ ] Rate limiting enabled\n  - [ ] Firewall rules applied\n\n- [ ] **Configuration**\n  - [ ] Production environment variables set\n  - [ ] Debug modes disabled\n  - [ ] Strong JWT secrets\n  - [ ] Database access restricted\n  - [ ] Log levels appropriate\n\n- [ ] **Monitoring**\n  - [ ] Security logging enabled\n  - [ ] Audit trails configured\n  - [ ] Alert system functional\n  - [ ] Intrusion detection active\n  - [ ] Backup procedures tested\n\n### Compliance Checklist\n\n- [ ] **GDPR Compliance**\n  - [ ] Data processing lawful basis documented\n  - [ ] Privacy policy updated\n  - [ ] User consent mechanisms\n  - [ ] Data export functionality\n  - [ ] Right to be forgotten implemented\n  - [ ] Data retention policies defined\n\n- [ ] **Security Standards**\n  - [ ] OWASP Top 10 addressed\n  - [ ] Security code review completed\n  - [ ] Penetration testing performed\n  - [ ] Vulnerability scanning regular\n  - [ ] Incident response plan documented\n\n---\n\nThis security documentation provides comprehensive coverage of the security measures implemented in the Fullstack Template. Regular security reviews and updates should be performed to maintain the security posture as the application evolves.",
      "size": 39020,
      "hash": "61766e20cc25fa5b3b343da5647c7c9a44566034f49ce7e2000156dca5ef3adc"
    },
    {
      "path": "frontend/.env.example",
      "template": false,
      "content": "# API Configuration\nVITE_API_BASE_URL=/api",
      "size": 42,
      "hash": "6a63ce4736e36d3ac511c3f9304355129ead18c8de73401c8949be07d5b4e1ff"
    },
    {
      "path": "frontend/index.html",
      "template": true,
      "content": "\u003c!doctype html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003clink rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" /\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n    \u003ctitle\u003eFullstack Template\u003c/title\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003cdiv id=\"root\"\u003e\u003c/div\u003e\n    \u003cscript type=\"module\" src=\"/src/main.tsx\"\u003e\u003c/script\u003e\n  \u003c/body\u003e\n\u003c/html\u003e",
      "size": 366,
      "hash": "76eaa8f4353839e72834117b642df05f950cf01ff72bc1450704594b49396048",
      "mappings": [
        {
          "find": "\u003ctitle\u003eFullstack Template\u003c/title\u003e",
          "replace": "\u003ctitle\u003e{{.ProjectName}}\u003c/title\u003e"
        }
      ]
    },
    {
      "path": "frontend/package-lock.json",
      "template": false,
      "content": "{\n  \"name\": \"fullstack-template-frontend\",\n  \"version\": \"0.0.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"fullstack-template-frontend\",\n      \"version\": \"0.0.0\",\n      \"dependencies\": {\n        \"clsx\": \"^2.1.1\",\n        \"lucide-react\": \"^0.263.1\",\n        \"react\": \"^18.2.0\",\n        \"react-dom\": \"^18.2.0\"\n      },\n      \"devDependencies\": {\n        \"@testing-library/jest-dom\": \"^6.1.0\",\n        \"@testing-library/react\": \"^14.3.1\",\n        \"@testing-library/user-event\": \"^14.6.1\",\n        \"@types/node\": \"^20.12.7\",\n        \"@types/react\": \"^18.2.66\",\n        \"@types/react-dom\": \"^18.2.22\",\n        \"@typescript-eslint/eslint-plugin\": \"^7.2.0\",\n        \"@typescript-eslint/parser\": \"^7.2.0\",\n        \"@vitejs/plugin-react\": \"^4.2.1\",\n        \"@vitest/coverage-v8\": \"^1.0.0\",\n        \"@vitest/ui\": \"^1.0.0\",\n        \"autoprefixer\": \"^10.4.19\",\n        \"eslint\": \"^8.57.0\",\n        \"eslint-plugin-react\": \"^7.34.1\",\n        \"eslint-plugin-react-hooks\": \"^4.6.0\",\n        \"eslint-plugin-react-refresh\": \"^0.4.6\",\n        \"jsdom\": \"^23.0.0\",\n        \"msw\": \"^2.10.4\",\n        \"postcss\": \"^8.4.38\",\n        \"react-router-dom\": \"^7.7.1\",\n        \"tailwindcss\": \"^3.4.3\",\n        \"typescript\": \"^5.2.2\",\n        \"vite\": \"^5.2.0\",\n        \"vitest\": \"^1.6.1\"\n      }\n    },\n    \"node_modules/@adobe/css-tools\": {\n      \"version\": \"4.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/@adobe/css-tools/-/css-tools-4.4.3.tgz\",\n      \"integrity\": \"sha512-VQKMkwriZbaOgVCby1UDY/LDk5fIjhQicCvVPFqfe+69fWaPWydbWJ3wRt59/YzIwda1I81loas3oCoHxnqvdA==\",\n      \"dev\": true\n    },\n    \"node_modules/@alloc/quick-lru\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz\",\n      \"integrity\": \"sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@ampproject/remapping\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz\",\n      \"integrity\": \"sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.5\",\n        \"@jridgewell/trace-mapping\": \"^0.3.24\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.0.0\"\n      }\n    },\n    \"node_modules/@asamuzakjp/css-color\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@asamuzakjp/css-color/-/css-color-3.2.0.tgz\",\n      \"integrity\": \"sha512-K1A6z8tS3XsmCMM86xoWdn7Fkdn9m6RSVtocUrJYIwZnFVkng/PvkEoWtOWmP+Scc6saYWHWZYbndEEXxl24jw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@csstools/css-calc\": \"^2.1.3\",\n        \"@csstools/css-color-parser\": \"^3.0.9\",\n        \"@csstools/css-parser-algorithms\": \"^3.0.4\",\n        \"@csstools/css-tokenizer\": \"^3.0.3\",\n        \"lru-cache\": \"^10.4.3\"\n      }\n    },\n    \"node_modules/@asamuzakjp/css-color/node_modules/lru-cache\": {\n      \"version\": \"10.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz\",\n      \"integrity\": \"sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@asamuzakjp/dom-selector\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@asamuzakjp/dom-selector/-/dom-selector-2.0.2.tgz\",\n      \"integrity\": \"sha512-x1KXOatwofR6ZAYzXRBL5wrdV0vwNxlTCK9NCuLqAzQYARqGcvFwiJA6A1ERuh+dgeA4Dxm3JBYictIes+SqUQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bidi-js\": \"^1.0.3\",\n        \"css-tree\": \"^2.3.1\",\n        \"is-potential-custom-element-name\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/@babel/code-frame\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz\",\n      \"integrity\": \"sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-validator-identifier\": \"^7.27.1\",\n        \"js-tokens\": \"^4.0.0\",\n        \"picocolors\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/compat-data\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.0.tgz\",\n      \"integrity\": \"sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/core\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.28.0.tgz\",\n      \"integrity\": \"sha512-UlLAnTPrFdNGoFtbSXwcGFQBtQZJCNjaN6hQNP3UPvuNXT1i82N26KL3dZeIpNalWywr9IuQuncaAfUaS1g6sQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@ampproject/remapping\": \"^2.2.0\",\n        \"@babel/code-frame\": \"^7.27.1\",\n        \"@babel/generator\": \"^7.28.0\",\n        \"@babel/helper-compilation-targets\": \"^7.27.2\",\n        \"@babel/helper-module-transforms\": \"^7.27.3\",\n        \"@babel/helpers\": \"^7.27.6\",\n        \"@babel/parser\": \"^7.28.0\",\n        \"@babel/template\": \"^7.27.2\",\n        \"@babel/traverse\": \"^7.28.0\",\n        \"@babel/types\": \"^7.28.0\",\n        \"convert-source-map\": \"^2.0.0\",\n        \"debug\": \"^4.1.0\",\n        \"gensync\": \"^1.0.0-beta.2\",\n        \"json5\": \"^2.2.3\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/babel\"\n      }\n    },\n    \"node_modules/@babel/core/node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/@babel/generator\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.28.0.tgz\",\n      \"integrity\": \"sha512-lJjzvrbEeWrhB4P3QBsH7tey117PjLZnDbLiQEKjQ/fNJTjuq4HSqgFA+UNSwZT8D7dxxbnuSBMsa1lrWzKlQg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.28.0\",\n        \"@babel/types\": \"^7.28.0\",\n        \"@jridgewell/gen-mapping\": \"^0.3.12\",\n        \"@jridgewell/trace-mapping\": \"^0.3.28\",\n        \"jsesc\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-compilation-targets\": {\n      \"version\": \"7.27.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz\",\n      \"integrity\": \"sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.27.2\",\n        \"@babel/helper-validator-option\": \"^7.27.1\",\n        \"browserslist\": \"^4.24.0\",\n        \"lru-cache\": \"^5.1.1\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-compilation-targets/node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/@babel/helper-globals\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz\",\n      \"integrity\": \"sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-imports\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz\",\n      \"integrity\": \"sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/traverse\": \"^7.27.1\",\n        \"@babel/types\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-transforms\": {\n      \"version\": \"7.27.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.27.3.tgz\",\n      \"integrity\": \"sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-imports\": \"^7.27.1\",\n        \"@babel/helper-validator-identifier\": \"^7.27.1\",\n        \"@babel/traverse\": \"^7.27.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-plugin-utils\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz\",\n      \"integrity\": \"sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-string-parser\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz\",\n      \"integrity\": \"sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-identifier\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz\",\n      \"integrity\": \"sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-option\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz\",\n      \"integrity\": \"sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helpers\": {\n      \"version\": \"7.28.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.28.2.tgz\",\n      \"integrity\": \"sha512-/V9771t+EgXz62aCcyofnQhGM8DQACbRhvzKFsXKC9QM+5MadF8ZmIm0crDMaz3+o0h0zXfJnd4EhbYbxsrcFw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/template\": \"^7.27.2\",\n        \"@babel/types\": \"^7.28.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/parser\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz\",\n      \"integrity\": \"sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.28.0\"\n      },\n      \"bin\": {\n        \"parser\": \"bin/babel-parser.js\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-react-jsx-self\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.27.1.tgz\",\n      \"integrity\": \"sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-react-jsx-source\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.27.1.tgz\",\n      \"integrity\": \"sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.28.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.2.tgz\",\n      \"integrity\": \"sha512-KHp2IflsnGywDjBWDkR9iEqiWSpc8GIi0lgTT3mOElT0PP1tG26P4tmFI2YvAdzgq9RGyoHZQEIEdZy6Ec5xCA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/template\": {\n      \"version\": \"7.27.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz\",\n      \"integrity\": \"sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.27.1\",\n        \"@babel/parser\": \"^7.27.2\",\n        \"@babel/types\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/traverse\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.0.tgz\",\n      \"integrity\": \"sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.27.1\",\n        \"@babel/generator\": \"^7.28.0\",\n        \"@babel/helper-globals\": \"^7.28.0\",\n        \"@babel/parser\": \"^7.28.0\",\n        \"@babel/template\": \"^7.27.2\",\n        \"@babel/types\": \"^7.28.0\",\n        \"debug\": \"^4.3.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/types\": {\n      \"version\": \"7.28.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.28.2.tgz\",\n      \"integrity\": \"sha512-ruv7Ae4J5dUYULmeXw1gmb7rYRz57OWCPM57pHojnLq/3Z1CK2lNSLTCVjxVk1F/TZHwOZZrOWi0ur95BbLxNQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-string-parser\": \"^7.27.1\",\n        \"@babel/helper-validator-identifier\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/@bcoe/v8-coverage\": {\n      \"version\": \"0.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz\",\n      \"integrity\": \"sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\",\n      \"dev\": true\n    },\n    \"node_modules/@bundled-es-modules/cookie\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@bundled-es-modules/cookie/-/cookie-2.0.1.tgz\",\n      \"integrity\": \"sha512-8o+5fRPLNbjbdGRRmJj3h6Hh1AQJf2dk3qQ/5ZFb+PXkRNiSoMGGUKlsgLfrxneb72axVJyIYji64E2+nNfYyw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cookie\": \"^0.7.2\"\n      }\n    },\n    \"node_modules/@bundled-es-modules/statuses\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@bundled-es-modules/statuses/-/statuses-1.0.1.tgz\",\n      \"integrity\": \"sha512-yn7BklA5acgcBr+7w064fGV+SGIFySjCKpqjcWgBAIfrAkY+4GQTJJHQMeT3V/sgz23VTEVV8TtOmkvJAhFVfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"statuses\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/@bundled-es-modules/tough-cookie\": {\n      \"version\": \"0.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/@bundled-es-modules/tough-cookie/-/tough-cookie-0.1.6.tgz\",\n      \"integrity\": \"sha512-dvMHbL464C0zI+Yqxbz6kZ5TOEp7GLW+pry/RWndAR8MJQAXZ2rPmIs8tziTZjeIyhSNZgZbCePtfSbdWqStJw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/tough-cookie\": \"^4.0.5\",\n        \"tough-cookie\": \"^4.1.4\"\n      }\n    },\n    \"node_modules/@csstools/color-helpers\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@csstools/color-helpers/-/color-helpers-5.0.2.tgz\",\n      \"integrity\": \"sha512-JqWH1vsgdGcw2RR6VliXXdA0/59LttzlU8UlRT/iUUsEeWfYq8I+K0yhihEUTTHLRm1EXvpsCx3083EU15ecsA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/csstools\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/csstools\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/@csstools/css-calc\": {\n      \"version\": \"2.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/@csstools/css-calc/-/css-calc-2.1.4.tgz\",\n      \"integrity\": \"sha512-3N8oaj+0juUw/1H3YwmDDJXCgTB1gKU6Hc/bB502u9zR0q2vd786XJH9QfrKIEgFlZmhZiq6epXl4rHqhzsIgQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/csstools\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/csstools\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      },\n      \"peerDependencies\": {\n        \"@csstools/css-parser-algorithms\": \"^3.0.5\",\n        \"@csstools/css-tokenizer\": \"^3.0.4\"\n      }\n    },\n    \"node_modules/@csstools/css-color-parser\": {\n      \"version\": \"3.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/@csstools/css-color-parser/-/css-color-parser-3.0.10.tgz\",\n      \"integrity\": \"sha512-TiJ5Ajr6WRd1r8HSiwJvZBiJOqtH86aHpUjq5aEKWHiII2Qfjqd/HCWKPOW8EP4vcspXbHnXrwIDlu5savQipg==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/csstools\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/csstools\"\n        }\n      ],\n      \"dependencies\": {\n        \"@csstools/color-helpers\": \"^5.0.2\",\n        \"@csstools/css-calc\": \"^2.1.4\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      },\n      \"peerDependencies\": {\n        \"@csstools/css-parser-algorithms\": \"^3.0.5\",\n        \"@csstools/css-tokenizer\": \"^3.0.4\"\n      }\n    },\n    \"node_modules/@csstools/css-parser-algorithms\": {\n      \"version\": \"3.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@csstools/css-parser-algorithms/-/css-parser-algorithms-3.0.5.tgz\",\n      \"integrity\": \"sha512-DaDeUkXZKjdGhgYaHNJTV9pV7Y9B3b644jCLs9Upc3VeNGg6LWARAT6O+Q+/COo+2gg/bM5rhpMAtf70WqfBdQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/csstools\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/csstools\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      },\n      \"peerDependencies\": {\n        \"@csstools/css-tokenizer\": \"^3.0.4\"\n      }\n    },\n    \"node_modules/@csstools/css-tokenizer\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@csstools/css-tokenizer/-/css-tokenizer-3.0.4.tgz\",\n      \"integrity\": \"sha512-Vd/9EVDiu6PPJt9yAh6roZP6El1xHrdvIVGjyBsHR0RYwNHgL7FJPyIIW4fANJNG6FtyZfvlRPpFI4ZM/lubvw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/csstools\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/csstools\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/@esbuild/aix-ppc64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz\",\n      \"integrity\": \"sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"aix\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/android-arm\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz\",\n      \"integrity\": \"sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/android-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/android-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/darwin-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/darwin-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/freebsd-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/freebsd-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-arm\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz\",\n      \"integrity\": \"sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-ia32\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz\",\n      \"integrity\": \"sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-loong64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz\",\n      \"integrity\": \"sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==\",\n      \"cpu\": [\n        \"loong64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-mips64el\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz\",\n      \"integrity\": \"sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==\",\n      \"cpu\": [\n        \"mips64el\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-ppc64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz\",\n      \"integrity\": \"sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-riscv64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz\",\n      \"integrity\": \"sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-s390x\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz\",\n      \"integrity\": \"sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/netbsd-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"netbsd\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/openbsd-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"openbsd\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/sunos-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"sunos\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/win32-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/win32-ia32\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz\",\n      \"integrity\": \"sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@esbuild/win32-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@eslint-community/eslint-utils\": {\n      \"version\": \"4.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz\",\n      \"integrity\": \"sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^3.4.3\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || \u003e=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^6.0.0 || ^7.0.0 || \u003e=8.0.0\"\n      }\n    },\n    \"node_modules/@eslint-community/regexpp\": {\n      \"version\": \"4.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz\",\n      \"integrity\": \"sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.0.0 || ^14.0.0 || \u003e=16.0.0\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc\": {\n      \"version\": \"2.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz\",\n      \"integrity\": \"sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^9.6.0\",\n        \"globals\": \"^13.19.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || \u003e=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc/node_modules/brace-expansion\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/@eslint/js\": {\n      \"version\": \"8.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz\",\n      \"integrity\": \"sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || \u003e=16.0.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array\": {\n      \"version\": \"0.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz\",\n      \"integrity\": \"sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==\",\n      \"deprecated\": \"Use @eslint/config-array instead\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@humanwhocodes/object-schema\": \"^2.0.3\",\n        \"debug\": \"^4.3.1\",\n        \"minimatch\": \"^3.0.5\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10.10.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array/node_modules/brace-expansion\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/@humanwhocodes/module-importer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n      \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12.22\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/nzakas\"\n      }\n    },\n    \"node_modules/@humanwhocodes/object-schema\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz\",\n      \"integrity\": \"sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==\",\n      \"deprecated\": \"Use @eslint/object-schema instead\",\n      \"dev\": true\n    },\n    \"node_modules/@inquirer/confirm\": {\n      \"version\": \"5.1.14\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/confirm/-/confirm-5.1.14.tgz\",\n      \"integrity\": \"sha512-5yR4IBfe0kXe59r1YCTG8WXkUbl7Z35HK87Sw+WUyGD8wNUx7JvY7laahzeytyE1oLn74bQnL7hstctQxisQ8Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^10.1.15\",\n        \"@inquirer/type\": \"^3.0.8\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      },\n      \"peerDependencies\": {\n        \"@types/node\": \"\u003e=18\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@inquirer/core\": {\n      \"version\": \"10.1.15\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/core/-/core-10.1.15.tgz\",\n      \"integrity\": \"sha512-8xrp836RZvKkpNbVvgWUlxjT4CraKk2q+I3Ksy+seI2zkcE+y6wNs1BVhgcv8VyImFecUhdQrYLdW32pAjwBdA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/figures\": \"^1.0.13\",\n        \"@inquirer/type\": \"^3.0.8\",\n        \"ansi-escapes\": \"^4.3.2\",\n        \"cli-width\": \"^4.1.0\",\n        \"mute-stream\": \"^2.0.0\",\n        \"signal-exit\": \"^4.1.0\",\n        \"wrap-ansi\": \"^6.2.0\",\n        \"yoctocolors-cjs\": \"^2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      },\n      \"peerDependencies\": {\n        \"@types/node\": \"\u003e=18\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@inquirer/core/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/@inquirer/core/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/@inquirer/core/node_modules/wrap-ansi\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz\",\n      \"integrity\": \"sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/@inquirer/figures\": {\n      \"version\": \"1.0.13\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/figures/-/figures-1.0.13.tgz\",\n      \"integrity\": \"sha512-lGPVU3yO9ZNqA7vTYz26jny41lE7yoQansmqdMLBEfqaGsmdg7V3W9mK9Pvb5IL4EVZ9GnSDGMO/cJXud5dMaw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/@inquirer/type\": {\n      \"version\": \"3.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/type/-/type-3.0.8.tgz\",\n      \"integrity\": \"sha512-lg9Whz8onIHRthWaN1Q9EGLa/0LFJjyM8mEUbL1eTi6yMGvBf8gvyDLtxSXztQsxMvhxxNpJYrwa1YHdq+w4Jw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      },\n      \"peerDependencies\": {\n        \"@types/node\": \"\u003e=18\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@isaacs/cliui\": {\n      \"version\": \"8.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\",\n      \"integrity\": \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^5.1.2\",\n        \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n        \"strip-ansi\": \"^7.0.1\",\n        \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n        \"wrap-ansi\": \"^8.1.0\",\n        \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/ansi-regex\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/@istanbuljs/schema\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz\",\n      \"integrity\": \"sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/@jest/schemas\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/schemas/-/schemas-29.6.3.tgz\",\n      \"integrity\": \"sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sinclair/typebox\": \"^0.27.8\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || \u003e=18.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.12\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz\",\n      \"integrity\": \"sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/sourcemap-codec\": \"^1.5.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.24\"\n      }\n    },\n    \"node_modules/@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz\",\n      \"integrity\": \"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz\",\n      \"integrity\": \"sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==\",\n      \"dev\": true\n    },\n    \"node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.29\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz\",\n      \"integrity\": \"sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n      }\n    },\n    \"node_modules/@mswjs/interceptors\": {\n      \"version\": \"0.39.4\",\n      \"resolved\": \"https://registry.npmjs.org/@mswjs/interceptors/-/interceptors-0.39.4.tgz\",\n      \"integrity\": \"sha512-B82DbrGVCIBrNEfRJbqUFB0eNz0wVzqbenEpmbE71XLVU4yKZbDnRBuxz+7udc/uM7LDWDD4sRJ5tISzHf2QkQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@open-draft/deferred-promise\": \"^2.2.0\",\n        \"@open-draft/logger\": \"^0.3.0\",\n        \"@open-draft/until\": \"^2.0.0\",\n        \"is-node-process\": \"^1.2.0\",\n        \"outvariant\": \"^1.4.3\",\n        \"strict-event-emitter\": \"^0.5.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 8\"\n      }\n    },\n    \"node_modules/@open-draft/deferred-promise\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@open-draft/deferred-promise/-/deferred-promise-2.2.0.tgz\",\n      \"integrity\": \"sha512-CecwLWx3rhxVQF6V4bAgPS5t+So2sTbPgAzafKkVizyi7tlwpcFpdFqq+wqF2OwNBmqFuu6tOyouTuxgpMfzmA==\",\n      \"dev\": true\n    },\n    \"node_modules/@open-draft/logger\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@open-draft/logger/-/logger-0.3.0.tgz\",\n      \"integrity\": \"sha512-X2g45fzhxH238HKO4xbSr7+wBS8Fvw6ixhTDuvLd5mqh6bJJCFAPwU9mPDxbcrRtfxv4u5IHCEH77BmxvXmmxQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-node-process\": \"^1.2.0\",\n        \"outvariant\": \"^1.4.0\"\n      }\n    },\n    \"node_modules/@open-draft/until\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@open-draft/until/-/until-2.1.0.tgz\",\n      \"integrity\": \"sha512-U69T3ItWHvLwGg5eJ0n3I62nWuE6ilHlmz7zM0npLBRvPRd7e6NYmg54vvRtP5mZG7kZqZCFVdsTWo7BPtBujg==\",\n      \"dev\": true\n    },\n    \"node_modules/@pkgjs/parseargs\": {\n      \"version\": \"0.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz\",\n      \"integrity\": \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \"\u003e=14\"\n      }\n    },\n    \"node_modules/@polka/url\": {\n      \"version\": \"1.0.0-next.29\",\n      \"resolved\": \"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.29.tgz\",\n      \"integrity\": \"sha512-wwQAWhWSuHaag8c4q/KN/vCoeOJYshAIvMQwD4GpSb3OiZklFfvAgmj0VCBBImRpuF/aFgIRzllXlVX93Jevww==\",\n      \"dev\": true\n    },\n    \"node_modules/@rolldown/pluginutils\": {\n      \"version\": \"1.0.0-beta.27\",\n      \"resolved\": \"https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.27.tgz\",\n      \"integrity\": \"sha512-+d0F4MKMCbeVUJwG96uQ4SgAznZNSq93I3V+9NHA4OpvqG8mRCpGdKmK8l/dl02h2CCDHwW2FqilnTyDcAnqjA==\",\n      \"dev\": true\n    },\n    \"node_modules/@rollup/rollup-android-arm-eabi\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.46.0.tgz\",\n      \"integrity\": \"sha512-9f3nSTFI2ivfxc7/tHBHcJ8pRnp8ROrELvsVprlQPVvcZ+j5zztYd+PTJGpyIOAdTvNwNrpCXswKSeoQcyGjMQ==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-android-arm64\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.46.0.tgz\",\n      \"integrity\": \"sha512-tFZSEhqJ8Yrpe50TzOdeoYi72gi/jsnT7y8Qrozf3cNu28WX+s6I3XzEPUAqoaT9SAS8Xz9AzGTFlxxCH/w20w==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-darwin-arm64\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.46.0.tgz\",\n      \"integrity\": \"sha512-+DikIIs+p6yU2hF51UaWG8BnHbq90X0QIOt5zqSKSZxY+G3qqdLih214e9InJal21af2PuuxkDectetGfbVPJw==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-darwin-x64\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.46.0.tgz\",\n      \"integrity\": \"sha512-5a+NofhdEB/WimSlFMskbFQn1vqz1FWryYpA99trmZGO6qEmiS0IsX6w4B3d91U878Q2ZQdiaFF1gxX4P147og==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-freebsd-arm64\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.46.0.tgz\",\n      \"integrity\": \"sha512-igr/RlKPS3OCy4jD3XBmAmo3UAcNZkJSubRsw1JeM8bAbwf15k/3eMZXD91bnjheijJiOJcga3kfCLKjV8IXNg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-freebsd-x64\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.46.0.tgz\",\n      \"integrity\": \"sha512-MdigWzPSHlQzB1xZ+MdFDWTAH+kcn7UxjEBoOKuaso7z1DRlnAnrknB1mTtNOQ+GdPI8xgExAGwHeqQjntR0Cg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm-gnueabihf\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.46.0.tgz\",\n      \"integrity\": \"sha512-dmZseE0ZwA/4yy1+BwFrDqFTjjNg24GO9xSrb1weVbt6AFkhp5pz1gVS7IMtfIvoWy8yp6q/zN0bKnefRUImvQ==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm-musleabihf\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.46.0.tgz\",\n      \"integrity\": \"sha512-fzhfn6p9Cfm3W8UrWKIa4l7Wfjs/KGdgaswMBBE3KY3Ta43jg2XsPrAtfezHpsRk0Nx+TFuS3hZk/To2N5kFPQ==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm64-gnu\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.46.0.tgz\",\n      \"integrity\": \"sha512-vVDD+iPDPmJQ5nAQ5Tifq3ywdv60FartglFI8VOCK+hcU9aoG0qlQTsDJP97O5yiTaTqlneZWoARMcVC5nyUoQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm64-musl\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.46.0.tgz\",\n      \"integrity\": \"sha512-0d0jx08fzDHCzXqrtCMEEyxKU0SvJrWmUjUDE2/KDQ2UDJql0tfiwYvEx1oHELClKO8CNdE+AGJj+RqXscZpdQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-loongarch64-gnu\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.46.0.tgz\",\n      \"integrity\": \"sha512-XBYu9oW9eKJadWn8M7hkTZsD4yG+RrsTrVEgyKwb4L72cpJjRbRboTG9Lg9fec8MxJp/cfTHAocg4mnismQR8A==\",\n      \"cpu\": [\n        \"loong64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-ppc64-gnu\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-ppc64-gnu/-/rollup-linux-ppc64-gnu-4.46.0.tgz\",\n      \"integrity\": \"sha512-wJaRvcT17PoOK6Ggcfo3nouFlybHvARBS4jzT0PC/lg17fIJHcDS2fZz3sD+iA4nRlho2zE6OGbU0HvwATdokQ==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-riscv64-gnu\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.46.0.tgz\",\n      \"integrity\": \"sha512-GZ5bkMFteAGkcmh8x0Ok4LSa+L62Ez0tMsHPX6JtR0wl4Xc3bQcrFHDiR5DGLEDFtGrXih4Nd/UDaFqs968/wA==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-riscv64-musl\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.46.0.tgz\",\n      \"integrity\": \"sha512-7CjPw6FflFsVOUfWOrVrREiV3IYXG4RzZ1ZQUaT3BtSK8YXN6x286o+sruPZJESIaPebYuFowmg54ZdrkVBYog==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-s390x-gnu\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.46.0.tgz\",\n      \"integrity\": \"sha512-nmvnl0ZiuysltcB/cKjUh40Rx4FbSyueERDsl2FLvLYr6pCgSsvGr3SocUT84svSpmloS7f1DRWqtRha74Gi1w==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-x64-gnu\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.46.0.tgz\",\n      \"integrity\": \"sha512-Cv+moII5C8RM6gZbR3cb21o6rquVDZrN2o81maROg1LFzBz2dZUwIQSxFA8GtGZ/F2KtsqQ2z3eFPBb6akvQNg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-x64-musl\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.46.0.tgz\",\n      \"integrity\": \"sha512-PHcMG8DZTM9RCIjp8QIfN0VYtX0TtBPnWOTRurFhoCDoi9zptUZL2k7pCs+5rgut7JAiUsYy+huyhVKPcmxoog==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-arm64-msvc\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.46.0.tgz\",\n      \"integrity\": \"sha512-1SI/Rd47e8aQJeFWMDg16ET+fjvCcD/CzeaRmIEPmb05hx+3cCcwIF4ebUag4yTt/D1peE+Mgp0+Po3M358cAA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-ia32-msvc\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.46.0.tgz\",\n      \"integrity\": \"sha512-JwOCYxmumFDfDhx4kNyz6kTVK3gWzBIvVdMNzQMRDubcoGRDniOOmo6DDNP42qwZx3Bp9/6vWJ+kNzNqXoHmeA==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-x64-msvc\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.46.0.tgz\",\n      \"integrity\": \"sha512-IPMIfrfkG1GaEXi+JSsQEx8x9b4b+hRZXO7KYc2pKio3zO2/VDXDs6B9Ts/nnO+25Fk1tdAVtUn60HKKPPzDig==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@sinclair/typebox\": {\n      \"version\": \"0.27.8\",\n      \"resolved\": \"https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.27.8.tgz\",\n      \"integrity\": \"sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==\",\n      \"dev\": true\n    },\n    \"node_modules/@testing-library/dom\": {\n      \"version\": \"10.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@testing-library/dom/-/dom-10.4.1.tgz\",\n      \"integrity\": \"sha512-o4PXJQidqJl82ckFaXUeoAW+XysPLauYI43Abki5hABd853iMhitooc6znOnczgbTYmEP6U6/y1ZyKAIsvMKGg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.10.4\",\n        \"@babel/runtime\": \"^7.12.5\",\n        \"@types/aria-query\": \"^5.0.1\",\n        \"aria-query\": \"5.3.0\",\n        \"dom-accessibility-api\": \"^0.5.9\",\n        \"lz-string\": \"^1.5.0\",\n        \"picocolors\": \"1.1.1\",\n        \"pretty-format\": \"^27.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/@testing-library/jest-dom\": {\n      \"version\": \"6.6.4\",\n      \"resolved\": \"https://registry.npmjs.org/@testing-library/jest-dom/-/jest-dom-6.6.4.tgz\",\n      \"integrity\": \"sha512-xDXgLjVunjHqczScfkCJ9iyjdNOVHvvCdqHSSxwM9L0l/wHkTRum67SDc020uAlCoqktJplgO2AAQeLP1wgqDQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@adobe/css-tools\": \"^4.4.0\",\n        \"aria-query\": \"^5.0.0\",\n        \"css.escape\": \"^1.5.1\",\n        \"dom-accessibility-api\": \"^0.6.3\",\n        \"lodash\": \"^4.17.21\",\n        \"picocolors\": \"^1.1.1\",\n        \"redent\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=14\",\n        \"npm\": \"\u003e=6\",\n        \"yarn\": \"\u003e=1\"\n      }\n    },\n    \"node_modules/@testing-library/jest-dom/node_modules/dom-accessibility-api\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.6.3.tgz\",\n      \"integrity\": \"sha512-7ZgogeTnjuHbo+ct10G9Ffp0mif17idi0IyWNVA/wcwcm7NPOD/WEHVP3n7n3MhXqxoIYm8d6MuZohYWIZ4T3w==\",\n      \"dev\": true\n    },\n    \"node_modules/@testing-library/react\": {\n      \"version\": \"14.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/@testing-library/react/-/react-14.3.1.tgz\",\n      \"integrity\": \"sha512-H99XjUhWQw0lTgyMN05W3xQG1Nh4lq574D8keFf1dDoNTJgp66VbJozRaczoF+wsiaPJNt/TcnfpLGufGxSrZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.12.5\",\n        \"@testing-library/dom\": \"^9.0.0\",\n        \"@types/react-dom\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=14\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^18.0.0\",\n        \"react-dom\": \"^18.0.0\"\n      }\n    },\n    \"node_modules/@testing-library/react/node_modules/@testing-library/dom\": {\n      \"version\": \"9.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/@testing-library/dom/-/dom-9.3.4.tgz\",\n      \"integrity\": \"sha512-FlS4ZWlp97iiNWig0Muq8p+3rVDjRiYE+YKGbAqXOu9nwJFFOdL00kFpz42M+4huzYi86vAK1sOOfyOG45muIQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.10.4\",\n        \"@babel/runtime\": \"^7.12.5\",\n        \"@types/aria-query\": \"^5.0.1\",\n        \"aria-query\": \"5.1.3\",\n        \"chalk\": \"^4.1.0\",\n        \"dom-accessibility-api\": \"^0.5.9\",\n        \"lz-string\": \"^1.5.0\",\n        \"pretty-format\": \"^27.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=14\"\n      }\n    },\n    \"node_modules/@testing-library/react/node_modules/aria-query\": {\n      \"version\": \"5.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.1.3.tgz\",\n      \"integrity\": \"sha512-R5iJ5lkuHybztUfuOAznmboyjWq8O6sqNqtK7CLOqdydi54VNbORp49mb14KbWgG1QD3JFO9hJdZ+y4KutfdOQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"deep-equal\": \"^2.0.5\"\n      }\n    },\n    \"node_modules/@testing-library/user-event\": {\n      \"version\": \"14.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@testing-library/user-event/-/user-event-14.6.1.tgz\",\n      \"integrity\": \"sha512-vq7fv0rnt+QTXgPxr5Hjc210p6YKq2kmdziLgnsZGgLJ9e6VAShx1pACLuRjd/AS/sr7phAR58OIIpf0LlmQNw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12\",\n        \"npm\": \"\u003e=6\"\n      },\n      \"peerDependencies\": {\n        \"@testing-library/dom\": \"\u003e=7.21.4\"\n      }\n    },\n    \"node_modules/@types/aria-query\": {\n      \"version\": \"5.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/aria-query/-/aria-query-5.0.4.tgz\",\n      \"integrity\": \"sha512-rfT93uj5s0PRL7EzccGMs3brplhcrghnDoV26NqKhCAS1hVo+WdNsPvE/yb6ilfr5hi2MEk6d5EWJTKdxg8jVw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/babel__core\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz\",\n      \"integrity\": \"sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\",\n        \"@types/babel__generator\": \"*\",\n        \"@types/babel__template\": \"*\",\n        \"@types/babel__traverse\": \"*\"\n      }\n    },\n    \"node_modules/@types/babel__generator\": {\n      \"version\": \"7.27.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz\",\n      \"integrity\": \"sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__template\": {\n      \"version\": \"7.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz\",\n      \"integrity\": \"sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.1.0\",\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__traverse\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.7.tgz\",\n      \"integrity\": \"sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.20.7\"\n      }\n    },\n    \"node_modules/@types/cookie\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/cookie/-/cookie-0.6.0.tgz\",\n      \"integrity\": \"sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/estree\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz\",\n      \"integrity\": \"sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"20.19.9\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz\",\n      \"integrity\": \"sha512-cuVNgarYWZqxRJDQHEB58GEONhOK79QVR/qYx4S7kcUObQvUwvFnYxJuuHUKm2aieN9X3yZB4LZsuYNU1Qphsw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"undici-types\": \"~6.21.0\"\n      }\n    },\n    \"node_modules/@types/prop-types\": {\n      \"version\": \"15.7.15\",\n      \"resolved\": \"https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.15.tgz\",\n      \"integrity\": \"sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/react\": {\n      \"version\": \"18.3.23\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react/-/react-18.3.23.tgz\",\n      \"integrity\": \"sha512-/LDXMQh55EzZQ0uVAZmKKhfENivEvWz6E+EYzh+/MCjMhNsotd+ZHhBGIjFDTi6+fz0OhQQQLbTgdQIxxCsC0w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/prop-types\": \"*\",\n        \"csstype\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/@types/react-dom\": {\n      \"version\": \"18.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.7.tgz\",\n      \"integrity\": \"sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"@types/react\": \"^18.0.0\"\n      }\n    },\n    \"node_modules/@types/statuses\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/statuses/-/statuses-2.0.6.tgz\",\n      \"integrity\": \"sha512-xMAgYwceFhRA2zY+XbEA7mxYbA093wdiW8Vu6gZPGWy9cmOyU9XesH1tNcEWsKFd5Vzrqx5T3D38PWx1FIIXkA==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/tough-cookie\": {\n      \"version\": \"4.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/tough-cookie/-/tough-cookie-4.0.5.tgz\",\n      \"integrity\": \"sha512-/Ad8+nIOV7Rl++6f1BdKxFSMgmoqEoYbHRpPcx3JEfv8VRsQe9Z4mCXeJBzxs7mbHY/XOZZuXlRNfhpVPbs6ZA==\",\n      \"dev\": true\n    },\n    \"node_modules/@typescript-eslint/eslint-plugin\": {\n      \"version\": \"7.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.18.0.tgz\",\n      \"integrity\": \"sha512-94EQTWZ40mzBc42ATNIBimBEDltSJ9RQHCC8vc/PDbxi4k8dVwUAv4o98dk50M1zB+JGFxp43FP7f8+FP8R6Sw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@eslint-community/regexpp\": \"^4.10.0\",\n        \"@typescript-eslint/scope-manager\": \"7.18.0\",\n        \"@typescript-eslint/type-utils\": \"7.18.0\",\n        \"@typescript-eslint/utils\": \"7.18.0\",\n        \"@typescript-eslint/visitor-keys\": \"7.18.0\",\n        \"graphemer\": \"^1.4.0\",\n        \"ignore\": \"^5.3.1\",\n        \"natural-compare\": \"^1.4.0\",\n        \"ts-api-utils\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"@typescript-eslint/parser\": \"^7.0.0\",\n        \"eslint\": \"^8.56.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/parser\": {\n      \"version\": \"7.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.18.0.tgz\",\n      \"integrity\": \"sha512-4Z+L8I2OqhZV8qA132M4wNL30ypZGYOQVBfMgxDH/K5UX0PNqTu1c6za9ST5r9+tavvHiTWmBnKzpCJ/GlVFtg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/scope-manager\": \"7.18.0\",\n        \"@typescript-eslint/types\": \"7.18.0\",\n        \"@typescript-eslint/typescript-estree\": \"7.18.0\",\n        \"@typescript-eslint/visitor-keys\": \"7.18.0\",\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^8.56.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/scope-manager\": {\n      \"version\": \"7.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.18.0.tgz\",\n      \"integrity\": \"sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"7.18.0\",\n        \"@typescript-eslint/visitor-keys\": \"7.18.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@typescript-eslint/type-utils\": {\n      \"version\": \"7.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.18.0.tgz\",\n      \"integrity\": \"sha512-XL0FJXuCLaDuX2sYqZUUSOJ2sG5/i1AAze+axqmLnSkNEVMVYLF+cbwlB2w8D1tinFuSikHmFta+P+HOofrLeA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/typescript-estree\": \"7.18.0\",\n        \"@typescript-eslint/utils\": \"7.18.0\",\n        \"debug\": \"^4.3.4\",\n        \"ts-api-utils\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^8.56.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/types\": {\n      \"version\": \"7.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-7.18.0.tgz\",\n      \"integrity\": \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^18.18.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree\": {\n      \"version\": \"7.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.18.0.tgz\",\n      \"integrity\": \"sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"7.18.0\",\n        \"@typescript-eslint/visitor-keys\": \"7.18.0\",\n        \"debug\": \"^4.3.4\",\n        \"globby\": \"^11.1.0\",\n        \"is-glob\": \"^4.0.3\",\n        \"minimatch\": \"^9.0.4\",\n        \"semver\": \"^7.6.0\",\n        \"ts-api-utils\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/utils\": {\n      \"version\": \"7.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.18.0.tgz\",\n      \"integrity\": \"sha512-kK0/rNa2j74XuHVcoCZxdFBMF+aq/vH83CXAOHieC+2Gis4mF8jJXT5eAfyD3K0sAxtPuwxaIOIOvhwzVDt/kw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@eslint-community/eslint-utils\": \"^4.4.0\",\n        \"@typescript-eslint/scope-manager\": \"7.18.0\",\n        \"@typescript-eslint/types\": \"7.18.0\",\n        \"@typescript-eslint/typescript-estree\": \"7.18.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^8.56.0\"\n      }\n    },\n    \"node_modules/@typescript-eslint/visitor-keys\": {\n      \"version\": \"7.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.18.0.tgz\",\n      \"integrity\": \"sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"7.18.0\",\n        \"eslint-visitor-keys\": \"^3.4.3\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@ungap/structured-clone\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz\",\n      \"integrity\": \"sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==\",\n      \"dev\": true\n    },\n    \"node_modules/@vitejs/plugin-react\": {\n      \"version\": \"4.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.7.0.tgz\",\n      \"integrity\": \"sha512-gUu9hwfWvvEDBBmgtAowQCojwZmJ5mcLn3aufeCsitijs3+f2NsrPtlAWIR6OPiqljl96GVCUbLe0HyqIpVaoA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/core\": \"^7.28.0\",\n        \"@babel/plugin-transform-react-jsx-self\": \"^7.27.1\",\n        \"@babel/plugin-transform-react-jsx-source\": \"^7.27.1\",\n        \"@rolldown/pluginutils\": \"1.0.0-beta.27\",\n        \"@types/babel__core\": \"^7.20.5\",\n        \"react-refresh\": \"^0.17.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.18.0 || \u003e=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"vite\": \"^4.2.0 || ^5.0.0 || ^6.0.0 || ^7.0.0\"\n      }\n    },\n    \"node_modules/@vitest/coverage-v8\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@vitest/coverage-v8/-/coverage-v8-1.6.1.tgz\",\n      \"integrity\": \"sha512-6YeRZwuO4oTGKxD3bijok756oktHSIm3eczVVzNe3scqzuhLwltIF3S9ZL/vwOVIpURmU6SnZhziXXAfw8/Qlw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@ampproject/remapping\": \"^2.2.1\",\n        \"@bcoe/v8-coverage\": \"^0.2.3\",\n        \"debug\": \"^4.3.4\",\n        \"istanbul-lib-coverage\": \"^3.2.2\",\n        \"istanbul-lib-report\": \"^3.0.1\",\n        \"istanbul-lib-source-maps\": \"^5.0.4\",\n        \"istanbul-reports\": \"^3.1.6\",\n        \"magic-string\": \"^0.30.5\",\n        \"magicast\": \"^0.3.3\",\n        \"picocolors\": \"^1.0.0\",\n        \"std-env\": \"^3.5.0\",\n        \"strip-literal\": \"^2.0.0\",\n        \"test-exclude\": \"^6.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      },\n      \"peerDependencies\": {\n        \"vitest\": \"1.6.1\"\n      }\n    },\n    \"node_modules/@vitest/expect\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@vitest/expect/-/expect-1.6.1.tgz\",\n      \"integrity\": \"sha512-jXL+9+ZNIJKruofqXuuTClf44eSpcHlgj3CiuNihUF3Ioujtmc0zIa3UJOW5RjDK1YLBJZnWBlPuqhYycLioog==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@vitest/spy\": \"1.6.1\",\n        \"@vitest/utils\": \"1.6.1\",\n        \"chai\": \"^4.3.10\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      }\n    },\n    \"node_modules/@vitest/runner\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@vitest/runner/-/runner-1.6.1.tgz\",\n      \"integrity\": \"sha512-3nSnYXkVkf3mXFfE7vVyPmi3Sazhb/2cfZGGs0JRzFsPFvAMBEcrweV1V1GsrstdXeKCTXlJbvnQwGWgEIHmOA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@vitest/utils\": \"1.6.1\",\n        \"p-limit\": \"^5.0.0\",\n        \"pathe\": \"^1.1.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      }\n    },\n    \"node_modules/@vitest/runner/node_modules/p-limit\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-5.0.0.tgz\",\n      \"integrity\": \"sha512-/Eaoq+QyLSiXQ4lyYV23f14mZRQcXnxfHrN0vCai+ak9G0pp9iEQukIIZq5NccEvwRB8PUnZT0KsOoDCINS1qQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yocto-queue\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@vitest/runner/node_modules/yocto-queue\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-1.2.1.tgz\",\n      \"integrity\": \"sha512-AyeEbWOu/TAXdxlV9wmGcR0+yh2j3vYPGOECcIj2S7MkrLyC7ne+oye2BKTItt0ii2PHk4cDy+95+LshzbXnGg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12.20\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@vitest/snapshot\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@vitest/snapshot/-/snapshot-1.6.1.tgz\",\n      \"integrity\": \"sha512-WvidQuWAzU2p95u8GAKlRMqMyN1yOJkGHnx3M1PL9Raf7AQ1kwLKg04ADlCa3+OXUZE7BceOhVZiuWAbzCKcUQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"magic-string\": \"^0.30.5\",\n        \"pathe\": \"^1.1.1\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      }\n    },\n    \"node_modules/@vitest/snapshot/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/@vitest/snapshot/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || \u003e=18.0.0\"\n      }\n    },\n    \"node_modules/@vitest/snapshot/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/@vitest/spy\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@vitest/spy/-/spy-1.6.1.tgz\",\n      \"integrity\": \"sha512-MGcMmpGkZebsMZhbQKkAf9CX5zGvjkBTqf8Zx3ApYWXr3wG+QvEu2eXWfnIIWYSJExIp4V9FCKDEeygzkYrXMw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tinyspy\": \"^2.2.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      }\n    },\n    \"node_modules/@vitest/ui\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@vitest/ui/-/ui-1.6.1.tgz\",\n      \"integrity\": \"sha512-xa57bCPGuzEFqGjPs3vVLyqareG8DX0uMkr5U/v5vLv5/ZUrBrPL7gzxzTJedEyZxFMfsozwTIbbYfEQVo3kgg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@vitest/utils\": \"1.6.1\",\n        \"fast-glob\": \"^3.3.2\",\n        \"fflate\": \"^0.8.1\",\n        \"flatted\": \"^3.2.9\",\n        \"pathe\": \"^1.1.1\",\n        \"picocolors\": \"^1.0.0\",\n        \"sirv\": \"^2.0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      },\n      \"peerDependencies\": {\n        \"vitest\": \"1.6.1\"\n      }\n    },\n    \"node_modules/@vitest/utils\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@vitest/utils/-/utils-1.6.1.tgz\",\n      \"integrity\": \"sha512-jOrrUvXM4Av9ZWiG1EajNto0u96kWAhJ1LmPmJhXXQx/32MecEKd10pOLYgS2BQx1TgkGhloPU1ArDW2vvaY6g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"diff-sequences\": \"^29.6.3\",\n        \"estree-walker\": \"^3.0.3\",\n        \"loupe\": \"^2.3.7\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      }\n    },\n    \"node_modules/@vitest/utils/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/@vitest/utils/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || \u003e=18.0.0\"\n      }\n    },\n    \"node_modules/@vitest/utils/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/acorn\": {\n      \"version\": \"8.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz\",\n      \"integrity\": \"sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=0.4.0\"\n      }\n    },\n    \"node_modules/acorn-jsx\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\",\n      \"integrity\": \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/acorn-walk\": {\n      \"version\": \"8.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.4.tgz\",\n      \"integrity\": \"sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"acorn\": \"^8.11.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=0.4.0\"\n      }\n    },\n    \"node_modules/agent-base\": {\n      \"version\": \"7.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz\",\n      \"integrity\": \"sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 14\"\n      }\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"6.12.6\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.21.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-escapes/node_modules/type-fest\": {\n      \"version\": \"0.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz\",\n      \"integrity\": \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/any-promise\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz\",\n      \"integrity\": \"sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==\",\n      \"dev\": true\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 8\"\n      }\n    },\n    \"node_modules/arg\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/arg/-/arg-5.0.2.tgz\",\n      \"integrity\": \"sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==\",\n      \"dev\": true\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"dev\": true\n    },\n    \"node_modules/aria-query\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.3.0.tgz\",\n      \"integrity\": \"sha512-b0P0sZPKtyu8HkeRAfCq0IfURZK+SuwMjY1UXGBU27wpAiTwQAIlq56IbIO+ytk/JjS1fMR14ee5WBBfKi5J6A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"dequal\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/array-buffer-byte-length\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz\",\n      \"integrity\": \"sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"is-array-buffer\": \"^3.0.5\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-includes\": {\n      \"version\": \"3.1.9\",\n      \"resolved\": \"https://registry.npmjs.org/array-includes/-/array-includes-3.1.9.tgz\",\n      \"integrity\": \"sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.4\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.24.0\",\n        \"es-object-atoms\": \"^1.1.1\",\n        \"get-intrinsic\": \"^1.3.0\",\n        \"is-string\": \"^1.1.1\",\n        \"math-intrinsics\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-union\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n      \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/array.prototype.findlast\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz\",\n      \"integrity\": \"sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"es-shim-unscopables\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flat\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz\",\n      \"integrity\": \"sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.5\",\n        \"es-shim-unscopables\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flatmap\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz\",\n      \"integrity\": \"sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.5\",\n        \"es-shim-unscopables\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.tosorted\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz\",\n      \"integrity\": \"sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.3\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-shim-unscopables\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/arraybuffer.prototype.slice\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz\",\n      \"integrity\": \"sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.1\",\n        \"call-bind\": \"^1.0.8\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.5\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.6\",\n        \"is-array-buffer\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/assertion-error\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/assertion-error/-/assertion-error-1.1.0.tgz\",\n      \"integrity\": \"sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/async-function\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz\",\n      \"integrity\": \"sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/asynckit\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n      \"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\",\n      \"dev\": true\n    },\n    \"node_modules/autoprefixer\": {\n      \"version\": \"10.4.21\",\n      \"resolved\": \"https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz\",\n      \"integrity\": \"sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/autoprefixer\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"browserslist\": \"^4.24.4\",\n        \"caniuse-lite\": \"^1.0.30001702\",\n        \"fraction.js\": \"^4.3.7\",\n        \"normalize-range\": \"^0.1.2\",\n        \"picocolors\": \"^1.1.1\",\n        \"postcss-value-parser\": \"^4.2.0\"\n      },\n      \"bin\": {\n        \"autoprefixer\": \"bin/autoprefixer\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || \u003e=14\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.1.0\"\n      }\n    },\n    \"node_modules/available-typed-arrays\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz\",\n      \"integrity\": \"sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"possible-typed-array-names\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/bidi-js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/bidi-js/-/bidi-js-1.0.3.tgz\",\n      \"integrity\": \"sha512-RKshQI1R3YQ+n9YJz2QQ147P66ELpa1FQEg20Dk8oW9t2KgLbpDLLp9aGZ7y8WHSshDknG0bknqGw5/tyCs5tw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"require-from-string\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz\",\n      \"integrity\": \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/browserslist\": {\n      \"version\": \"4.25.1\",\n      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz\",\n      \"integrity\": \"sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"caniuse-lite\": \"^1.0.30001726\",\n        \"electron-to-chromium\": \"^1.5.173\",\n        \"node-releases\": \"^2.0.19\",\n        \"update-browserslist-db\": \"^1.1.3\"\n      },\n      \"bin\": {\n        \"browserslist\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || \u003e=13.7\"\n      }\n    },\n    \"node_modules/cac\": {\n      \"version\": \"6.7.14\",\n      \"resolved\": \"https://registry.npmjs.org/cac/-/cac-6.7.14.tgz\",\n      \"integrity\": \"sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz\",\n      \"integrity\": \"sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.0\",\n        \"es-define-property\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"set-function-length\": \"^1.2.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/call-bind-apply-helpers\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz\",\n      \"integrity\": \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/call-bound\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz\",\n      \"integrity\": \"sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/callsites\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/camelcase-css\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz\",\n      \"integrity\": \"sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 6\"\n      }\n    },\n    \"node_modules/caniuse-lite\": {\n      \"version\": \"1.0.30001727\",\n      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001727.tgz\",\n      \"integrity\": \"sha512-pB68nIHmbN6L/4C6MH1DokyR3bYqFwjaSs/sWDHGj4CTcFtQUQMuJftVwWkXq7mNWOybD3KhUv3oWHoGxgP14Q==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/caniuse-lite\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ]\n    },\n    \"node_modules/chai\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/chai/-/chai-4.5.0.tgz\",\n      \"integrity\": \"sha512-RITGBfijLkBddZvnn8jdqoTypxvqbOLYQkGGxXzeFjVHvudaPw0HNFD9x928/eUwYWd2dPCugVqspGALTZZQKw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"assertion-error\": \"^1.1.0\",\n        \"check-error\": \"^1.0.3\",\n        \"deep-eql\": \"^4.1.3\",\n        \"get-func-name\": \"^2.0.2\",\n        \"loupe\": \"^2.3.6\",\n        \"pathval\": \"^1.1.1\",\n        \"type-detect\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=4\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/check-error\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/check-error/-/check-error-1.0.3.tgz\",\n      \"integrity\": \"sha512-iKEoDYaRmd1mxM90a2OEfWhjsjPpYPuQ+lMYsoxB126+t8fw7ySEO48nmDg5COTjxDI65/Y2OWpeEHk3ZOe8zg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-func-name\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 8.10.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/chokidar/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 6\"\n      }\n    },\n    \"node_modules/cli-width\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-width/-/cli-width-4.1.0.tgz\",\n      \"integrity\": \"sha512-ouuZd4/dm2Sw5Gmqy6bGyNNNe1qt9RpmxveLSO7KcgsTnU7RXfsw+/bukWGo1abgBiMAic068rclZsO4IWmmxQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 12\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/cliui/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/cliui/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/cliui/node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/clsx\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz\",\n      \"integrity\": \"sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==\",\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/combined-stream\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"delayed-stream\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.8\"\n      }\n    },\n    \"node_modules/commander\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\",\n      \"integrity\": \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 6\"\n      }\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"node_modules/confbox\": {\n      \"version\": \"0.1.8\",\n      \"resolved\": \"https://registry.npmjs.org/confbox/-/confbox-0.1.8.tgz\",\n      \"integrity\": \"sha512-RMtmw0iFkeR4YV+fUOSucriAQNb9g8zFR52MWCtl+cCZOFRNL6zeB395vPzFhEjjn4fMxXudmELnl/KF/WrK6w==\",\n      \"dev\": true\n    },\n    \"node_modules/convert-source-map\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz\",\n      \"integrity\": \"sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==\",\n      \"dev\": true\n    },\n    \"node_modules/cookie\": {\n      \"version\": \"0.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz\",\n      \"integrity\": \"sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.6\"\n      }\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\",\n      \"integrity\": \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 8\"\n      }\n    },\n    \"node_modules/css-tree\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/css-tree/-/css-tree-2.3.1.tgz\",\n      \"integrity\": \"sha512-6Fv1DV/TYw//QF5IzQdqsNDjx/wc8TrMBZsqjL9eW01tWb7R7k/mq+/VXfJCl7SoD5emsJop9cOByJZfs8hYIw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mdn-data\": \"2.0.30\",\n        \"source-map-js\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12.20.0 || ^14.13.0 || \u003e=15.0.0\"\n      }\n    },\n    \"node_modules/css.escape\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/css.escape/-/css.escape-1.5.1.tgz\",\n      \"integrity\": \"sha512-YUifsXXuknHlUsmlgyY0PKzgPOr7/FjCePfHNt0jxm83wHZi44VDMQ7/fGNkjY3/jV1MC+1CmZbaHzugyeRtpg==\",\n      \"dev\": true\n    },\n    \"node_modules/cssesc\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz\",\n      \"integrity\": \"sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"cssesc\": \"bin/cssesc\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=4\"\n      }\n    },\n    \"node_modules/cssstyle\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/cssstyle/-/cssstyle-4.6.0.tgz\",\n      \"integrity\": \"sha512-2z+rWdzbbSZv6/rhtvzvqeZQHrBaqgogqt85sqFNbabZOuFbCVFb8kPeEtZjiKkbrm395irpNKiYeFeLiQnFPg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@asamuzakjp/css-color\": \"^3.2.0\",\n        \"rrweb-cssom\": \"^0.8.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/cssstyle/node_modules/rrweb-cssom\": {\n      \"version\": \"0.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/rrweb-cssom/-/rrweb-cssom-0.8.0.tgz\",\n      \"integrity\": \"sha512-guoltQEx+9aMf2gDZ0s62EcV8lsXR+0w8915TC3ITdn2YueuNjdAYh/levpU9nFaoChh9RUS5ZdQMrKfVEN9tw==\",\n      \"dev\": true\n    },\n    \"node_modules/csstype\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz\",\n      \"integrity\": \"sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==\",\n      \"dev\": true\n    },\n    \"node_modules/data-urls\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/data-urls/-/data-urls-5.0.0.tgz\",\n      \"integrity\": \"sha512-ZYP5VBHshaDAiVZxjbRVcFJpc+4xGgT0bK3vzy1HLN8jTO975HEbuYzZJcHoQEY5K1a0z8YayJkyVETa08eNTg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"whatwg-mimetype\": \"^4.0.0\",\n        \"whatwg-url\": \"^14.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/data-view-buffer\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz\",\n      \"integrity\": \"sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/data-view-byte-length\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz\",\n      \"integrity\": \"sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/inspect-js\"\n      }\n    },\n    \"node_modules/data-view-byte-offset\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz\",\n      \"integrity\": \"sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.1.tgz\",\n      \"integrity\": \"sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/decimal.js\": {\n      \"version\": \"10.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/decimal.js/-/decimal.js-10.6.0.tgz\",\n      \"integrity\": \"sha512-YpgQiITW3JXGntzdUmyUR1V812Hn8T1YVXhCu+wO3OpS4eU9l4YdD3qjyiKdV6mvV29zapkMeD390UVEf2lkUg==\",\n      \"dev\": true\n    },\n    \"node_modules/deep-eql\": {\n      \"version\": \"4.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/deep-eql/-/deep-eql-4.1.4.tgz\",\n      \"integrity\": \"sha512-SUwdGfqdKOwxCPeVYjwSyRpJ7Z+fhpwIAtmCUdZIWZ/YP5R9WAsyuSgpLVDi9bjWoN2LXHNss/dk3urXtdQxGg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-detect\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/deep-equal\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-2.2.3.tgz\",\n      \"integrity\": \"sha512-ZIwpnevOurS8bpT4192sqAowWM76JDKSHYzMLty3BZGSswgq6pBaH3DhCSW5xVAZICZyKdOBPjwww5wfgT/6PA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.0\",\n        \"call-bind\": \"^1.0.5\",\n        \"es-get-iterator\": \"^1.1.3\",\n        \"get-intrinsic\": \"^1.2.2\",\n        \"is-arguments\": \"^1.1.1\",\n        \"is-array-buffer\": \"^3.0.2\",\n        \"is-date-object\": \"^1.0.5\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\",\n        \"isarray\": \"^2.0.5\",\n        \"object-is\": \"^1.1.5\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"regexp.prototype.flags\": \"^1.5.1\",\n        \"side-channel\": \"^1.0.4\",\n        \"which-boxed-primitive\": \"^1.0.2\",\n        \"which-collection\": \"^1.0.1\",\n        \"which-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/deep-is\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n      \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\",\n      \"dev\": true\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/define-properties\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz\",\n      \"integrity\": \"sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/delayed-stream\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n      \"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.4.0\"\n      }\n    },\n    \"node_modules/dequal\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz\",\n      \"integrity\": \"sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/didyoumean\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz\",\n      \"integrity\": \"sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==\",\n      \"dev\": true\n    },\n    \"node_modules/diff-sequences\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.6.3.tgz\",\n      \"integrity\": \"sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || \u003e=18.0.0\"\n      }\n    },\n    \"node_modules/dir-glob\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n      \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-type\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/dlv\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz\",\n      \"integrity\": \"sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==\",\n      \"dev\": true\n    },\n    \"node_modules/doctrine\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz\",\n      \"integrity\": \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6.0.0\"\n      }\n    },\n    \"node_modules/dom-accessibility-api\": {\n      \"version\": \"0.5.16\",\n      \"resolved\": \"https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.5.16.tgz\",\n      \"integrity\": \"sha512-X7BJ2yElsnOJ30pZF4uIIDfBEVgF4XEBxL9Bxhy6dnrm5hkzqmsWHGTiHqRiITNhMyFLyAiWndIJP7Z1NTteDg==\",\n      \"dev\": true\n    },\n    \"node_modules/dunder-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/eastasianwidth\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\",\n      \"integrity\": \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\",\n      \"dev\": true\n    },\n    \"node_modules/electron-to-chromium\": {\n      \"version\": \"1.5.191\",\n      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.191.tgz\",\n      \"integrity\": \"sha512-xcwe9ELcuxYLUFqZZxL19Z6HVKcvNkIwhbHUz7L3us6u12yR+7uY89dSl570f/IqNthx8dAw3tojG7i4Ni4tDA==\",\n      \"dev\": true\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"dev\": true\n    },\n    \"node_modules/entities\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/entities/-/entities-6.0.1.tgz\",\n      \"integrity\": \"sha512-aN97NXWF6AWBTahfVOIrB/NShkzi5H7F9r1s9mD3cDj4Ko5f2qhhVoYMibXF7GlLveb/D2ioWay8lxI97Ven3g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/fb55/entities?sponsor=1\"\n      }\n    },\n    \"node_modules/es-abstract\": {\n      \"version\": \"1.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz\",\n      \"integrity\": \"sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.2\",\n        \"arraybuffer.prototype.slice\": \"^1.0.4\",\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.4\",\n        \"data-view-buffer\": \"^1.0.2\",\n        \"data-view-byte-length\": \"^1.0.2\",\n        \"data-view-byte-offset\": \"^1.0.1\",\n        \"es-define-property\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.1.1\",\n        \"es-set-tostringtag\": \"^2.1.0\",\n        \"es-to-primitive\": \"^1.3.0\",\n        \"function.prototype.name\": \"^1.1.8\",\n        \"get-intrinsic\": \"^1.3.0\",\n        \"get-proto\": \"^1.0.1\",\n        \"get-symbol-description\": \"^1.1.0\",\n        \"globalthis\": \"^1.0.4\",\n        \"gopd\": \"^1.2.0\",\n        \"has-property-descriptors\": \"^1.0.2\",\n        \"has-proto\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"hasown\": \"^2.0.2\",\n        \"internal-slot\": \"^1.1.0\",\n        \"is-array-buffer\": \"^3.0.5\",\n        \"is-callable\": \"^1.2.7\",\n        \"is-data-view\": \"^1.0.2\",\n        \"is-negative-zero\": \"^2.0.3\",\n        \"is-regex\": \"^1.2.1\",\n        \"is-set\": \"^2.0.3\",\n        \"is-shared-array-buffer\": \"^1.0.4\",\n        \"is-string\": \"^1.1.1\",\n        \"is-typed-array\": \"^1.1.15\",\n        \"is-weakref\": \"^1.1.1\",\n        \"math-intrinsics\": \"^1.1.0\",\n        \"object-inspect\": \"^1.13.4\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.7\",\n        \"own-keys\": \"^1.0.1\",\n        \"regexp.prototype.flags\": \"^1.5.4\",\n        \"safe-array-concat\": \"^1.1.3\",\n        \"safe-push-apply\": \"^1.0.0\",\n        \"safe-regex-test\": \"^1.1.0\",\n        \"set-proto\": \"^1.0.0\",\n        \"stop-iteration-iterator\": \"^1.1.0\",\n        \"string.prototype.trim\": \"^1.2.10\",\n        \"string.prototype.trimend\": \"^1.0.9\",\n        \"string.prototype.trimstart\": \"^1.0.8\",\n        \"typed-array-buffer\": \"^1.0.3\",\n        \"typed-array-byte-length\": \"^1.0.3\",\n        \"typed-array-byte-offset\": \"^1.0.4\",\n        \"typed-array-length\": \"^1.0.7\",\n        \"unbox-primitive\": \"^1.1.0\",\n        \"which-typed-array\": \"^1.1.19\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/es-get-iterator\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-get-iterator/-/es-get-iterator-1.1.3.tgz\",\n      \"integrity\": \"sha512-sPZmqHBe6JIiTfN5q2pEi//TwxmAFHwj/XEuYjTuse78i8KxaqMTTzxPoFKuzRpDpTJ+0NAbpfenkmH2rePtuw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"is-arguments\": \"^1.1.1\",\n        \"is-map\": \"^2.0.2\",\n        \"is-set\": \"^2.0.2\",\n        \"is-string\": \"^1.0.7\",\n        \"isarray\": \"^2.0.5\",\n        \"stop-iteration-iterator\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-iterator-helpers\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.2.1.tgz\",\n      \"integrity\": \"sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.3\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-set-tostringtag\": \"^2.0.3\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.6\",\n        \"globalthis\": \"^1.0.4\",\n        \"gopd\": \"^1.2.0\",\n        \"has-property-descriptors\": \"^1.0.2\",\n        \"has-proto\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"internal-slot\": \"^1.1.0\",\n        \"iterator.prototype\": \"^1.1.4\",\n        \"safe-array-concat\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/es-object-atoms\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz\",\n      \"integrity\": \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/es-set-tostringtag\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz\",\n      \"integrity\": \"sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.6\",\n        \"has-tostringtag\": \"^1.0.2\",\n        \"hasown\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/es-shim-unscopables\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz\",\n      \"integrity\": \"sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hasown\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/es-to-primitive\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz\",\n      \"integrity\": \"sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-callable\": \"^1.2.7\",\n        \"is-date-object\": \"^1.0.5\",\n        \"is-symbol\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/esbuild\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz\",\n      \"integrity\": \"sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"bin\": {\n        \"esbuild\": \"bin/esbuild\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"optionalDependencies\": {\n        \"@esbuild/aix-ppc64\": \"0.21.5\",\n        \"@esbuild/android-arm\": \"0.21.5\",\n        \"@esbuild/android-arm64\": \"0.21.5\",\n        \"@esbuild/android-x64\": \"0.21.5\",\n        \"@esbuild/darwin-arm64\": \"0.21.5\",\n        \"@esbuild/darwin-x64\": \"0.21.5\",\n        \"@esbuild/freebsd-arm64\": \"0.21.5\",\n        \"@esbuild/freebsd-x64\": \"0.21.5\",\n        \"@esbuild/linux-arm\": \"0.21.5\",\n        \"@esbuild/linux-arm64\": \"0.21.5\",\n        \"@esbuild/linux-ia32\": \"0.21.5\",\n        \"@esbuild/linux-loong64\": \"0.21.5\",\n        \"@esbuild/linux-mips64el\": \"0.21.5\",\n        \"@esbuild/linux-ppc64\": \"0.21.5\",\n        \"@esbuild/linux-riscv64\": \"0.21.5\",\n        \"@esbuild/linux-s390x\": \"0.21.5\",\n        \"@esbuild/linux-x64\": \"0.21.5\",\n        \"@esbuild/netbsd-x64\": \"0.21.5\",\n        \"@esbuild/openbsd-x64\": \"0.21.5\",\n        \"@esbuild/sunos-x64\": \"0.21.5\",\n        \"@esbuild/win32-arm64\": \"0.21.5\",\n        \"@esbuild/win32-ia32\": \"0.21.5\",\n        \"@esbuild/win32-x64\": \"0.21.5\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz\",\n      \"integrity\": \"sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/eslint\": {\n      \"version\": \"8.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz\",\n      \"integrity\": \"sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\",\n      \"deprecated\": \"This version is no longer supported. Please see https://eslint.org/version-support for other options.\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n        \"@eslint-community/regexpp\": \"^4.6.1\",\n        \"@eslint/eslintrc\": \"^2.1.4\",\n        \"@eslint/js\": \"8.57.1\",\n        \"@humanwhocodes/config-array\": \"^0.13.0\",\n        \"@humanwhocodes/module-importer\": \"^1.0.1\",\n        \"@nodelib/fs.walk\": \"^1.2.8\",\n        \"@ungap/structured-clone\": \"^1.2.0\",\n        \"ajv\": \"^6.12.4\",\n        \"chalk\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.2\",\n        \"debug\": \"^4.3.2\",\n        \"doctrine\": \"^3.0.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"eslint-scope\": \"^7.2.2\",\n        \"eslint-visitor-keys\": \"^3.4.3\",\n        \"espree\": \"^9.6.1\",\n        \"esquery\": \"^1.4.2\",\n        \"esutils\": \"^2.0.2\",\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"find-up\": \"^5.0.0\",\n        \"glob-parent\": \"^6.0.2\",\n        \"globals\": \"^13.19.0\",\n        \"graphemer\": \"^1.4.0\",\n        \"ignore\": \"^5.2.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-glob\": \"^4.0.0\",\n        \"is-path-inside\": \"^3.0.3\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.4.1\",\n        \"lodash.merge\": \"^4.6.2\",\n        \"minimatch\": \"^3.1.2\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.9.3\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"text-table\": \"^0.2.0\"\n      },\n      \"bin\": {\n        \"eslint\": \"bin/eslint.js\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || \u003e=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-plugin-react\": {\n      \"version\": \"7.37.5\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.5.tgz\",\n      \"integrity\": \"sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.8\",\n        \"array.prototype.findlast\": \"^1.2.5\",\n        \"array.prototype.flatmap\": \"^1.3.3\",\n        \"array.prototype.tosorted\": \"^1.1.4\",\n        \"doctrine\": \"^2.1.0\",\n        \"es-iterator-helpers\": \"^1.2.1\",\n        \"estraverse\": \"^5.3.0\",\n        \"hasown\": \"^2.0.2\",\n        \"jsx-ast-utils\": \"^2.4.1 || ^3.0.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.entries\": \"^1.1.9\",\n        \"object.fromentries\": \"^2.0.8\",\n        \"object.values\": \"^1.2.1\",\n        \"prop-types\": \"^15.8.1\",\n        \"resolve\": \"^2.0.0-next.5\",\n        \"semver\": \"^6.3.1\",\n        \"string.prototype.matchall\": \"^4.0.12\",\n        \"string.prototype.repeat\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=4\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7\"\n      }\n    },\n    \"node_modules/eslint-plugin-react-hooks\": {\n      \"version\": \"4.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-4.6.2.tgz\",\n      \"integrity\": \"sha512-QzliNJq4GinDBcD8gPB5v0wh6g8q3SUi6EFF0x8N/BL9PoVs0atuGc47ozMRyOWAKdwaZ5OnbOEa3WR+dSGKuQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0\"\n      }\n    },\n    \"node_modules/eslint-plugin-react-refresh\": {\n      \"version\": \"0.4.20\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react-refresh/-/eslint-plugin-react-refresh-0.4.20.tgz\",\n      \"integrity\": \"sha512-XpbHQ2q5gUF8BGOX4dHe+71qoirYMhApEPZ7sfhF/dNnOF1UXnCMGZf79SFTBO7Bz5YEIT4TMieSlJBWhP9WBA==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"eslint\": \"\u003e=8.40\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/brace-expansion\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/doctrine\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n      \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/eslint-scope\": {\n      \"version\": \"7.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz\",\n      \"integrity\": \"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || \u003e=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n      \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || \u003e=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint/node_modules/brace-expansion\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/eslint/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/espree\": {\n      \"version\": \"9.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.6.1.tgz\",\n      \"integrity\": \"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"acorn\": \"^8.9.0\",\n        \"acorn-jsx\": \"^5.3.2\",\n        \"eslint-visitor-keys\": \"^3.4.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || \u003e=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/esquery\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz\",\n      \"integrity\": \"sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=0.10\"\n      }\n    },\n    \"node_modules/esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=4.0\"\n      }\n    },\n    \"node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=4.0\"\n      }\n    },\n    \"node_modules/estree-walker\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz\",\n      \"integrity\": \"sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/esutils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/execa\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-8.0.1.tgz\",\n      \"integrity\": \"sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.3\",\n        \"get-stream\": \"^8.0.1\",\n        \"human-signals\": \"^5.0.0\",\n        \"is-stream\": \"^3.0.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"npm-run-path\": \"^5.1.0\",\n        \"onetime\": \"^6.0.0\",\n        \"signal-exit\": \"^4.1.0\",\n        \"strip-final-newline\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=16.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n      }\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-glob\": {\n      \"version\": \"3.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz\",\n      \"integrity\": \"sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"^2.0.2\",\n        \"@nodelib/fs.walk\": \"^1.2.3\",\n        \"glob-parent\": \"^5.1.2\",\n        \"merge2\": \"^1.3.0\",\n        \"micromatch\": \"^4.0.8\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8.6.0\"\n      }\n    },\n    \"node_modules/fast-glob/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 6\"\n      }\n    },\n    \"node_modules/fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n      \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\",\n      \"dev\": true\n    },\n    \"node_modules/fastq\": {\n      \"version\": \"1.19.1\",\n      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz\",\n      \"integrity\": \"sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"node_modules/fflate\": {\n      \"version\": \"0.8.2\",\n      \"resolved\": \"https://registry.npmjs.org/fflate/-/fflate-0.8.2.tgz\",\n      \"integrity\": \"sha512-cPJU47OaAoCbg0pBvzsgpTPhmhqI5eJjh/JIu8tPj5q+T7iLvW/JAYUqmE7KOB4R1ZyEhzBaIQpQpardBF5z8A==\",\n      \"dev\": true\n    },\n    \"node_modules/file-entry-cache\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz\",\n      \"integrity\": \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"flat-cache\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || \u003e=12.0.0\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/flat-cache\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz\",\n      \"integrity\": \"sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"flatted\": \"^3.2.9\",\n        \"keyv\": \"^4.5.3\",\n        \"rimraf\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || \u003e=12.0.0\"\n      }\n    },\n    \"node_modules/flatted\": {\n      \"version\": \"3.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz\",\n      \"integrity\": \"sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==\",\n      \"dev\": true\n    },\n    \"node_modules/for-each\": {\n      \"version\": \"0.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz\",\n      \"integrity\": \"sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-callable\": \"^1.2.7\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/foreground-child\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz\",\n      \"integrity\": \"sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.6\",\n        \"signal-exit\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/form-data\": {\n      \"version\": \"4.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.4.tgz\",\n      \"integrity\": \"sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"asynckit\": \"^0.4.0\",\n        \"combined-stream\": \"^1.0.8\",\n        \"es-set-tostringtag\": \"^2.1.0\",\n        \"hasown\": \"^2.0.2\",\n        \"mime-types\": \"^2.1.12\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 6\"\n      }\n    },\n    \"node_modules/fraction.js\": {\n      \"version\": \"4.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz\",\n      \"integrity\": \"sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"type\": \"patreon\",\n        \"url\": \"https://github.com/sponsors/rawify\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || \u003e=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/function.prototype.name\": {\n      \"version\": \"1.1.8\",\n      \"resolved\": \"https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz\",\n      \"integrity\": \"sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.3\",\n        \"define-properties\": \"^1.2.1\",\n        \"functions-have-names\": \"^1.2.3\",\n        \"hasown\": \"^2.0.2\",\n        \"is-callable\": \"^1.2.7\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/functions-have-names\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz\",\n      \"integrity\": \"sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/gensync\": {\n      \"version\": \"1.0.0-beta.2\",\n      \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n      \"integrity\": \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6.9.0\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"6.* || 8.* || \u003e= 10.*\"\n      }\n    },\n    \"node_modules/get-func-name\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/get-func-name/-/get-func-name-2.0.2.tgz\",\n      \"integrity\": \"sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz\",\n      \"integrity\": \"sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"es-define-property\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.1.1\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-proto\": \"^1.0.1\",\n        \"gopd\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"hasown\": \"^2.0.2\",\n        \"math-intrinsics\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"dunder-proto\": \"^1.0.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/get-stream\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-8.0.1.tgz\",\n      \"integrity\": \"sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/get-symbol-description\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz\",\n      \"integrity\": \"sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.6\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"deprecated\": \"Glob versions prior to v9 are no longer supported\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10.13.0\"\n      }\n    },\n    \"node_modules/glob/node_modules/brace-expansion\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/glob/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/globals\": {\n      \"version\": \"13.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.24.0.tgz\",\n      \"integrity\": \"sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/globalthis\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz\",\n      \"integrity\": \"sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-properties\": \"^1.2.1\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/globby\": {\n      \"version\": \"11.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.1.0.tgz\",\n      \"integrity\": \"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-union\": \"^2.1.0\",\n        \"dir-glob\": \"^3.0.1\",\n        \"fast-glob\": \"^3.2.9\",\n        \"ignore\": \"^5.2.0\",\n        \"merge2\": \"^1.4.1\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/graphemer\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz\",\n      \"integrity\": \"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\",\n      \"dev\": true\n    },\n    \"node_modules/graphql\": {\n      \"version\": \"16.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/graphql/-/graphql-16.11.0.tgz\",\n      \"integrity\": \"sha512-mS1lbMsxgQj6hge1XZ6p7GPhbrtFwUFYi3wRzXAC/FmYnyXMTvvI3td3rjmQ2u8ewXueaSvRPWaEcgVVOT9Jnw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.16.0 || ^16.0.0 || \u003e=17.0.0\"\n      }\n    },\n    \"node_modules/has-bigints\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz\",\n      \"integrity\": \"sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-proto\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz\",\n      \"integrity\": \"sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"dunder-proto\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-tostringtag\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz\",\n      \"integrity\": \"sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/headers-polyfill\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/headers-polyfill/-/headers-polyfill-4.0.3.tgz\",\n      \"integrity\": \"sha512-IScLbePpkvO846sIwOtOTDjutRMWdXdJmXdMvk6gCBHxFO8d+QKOQedyZSxFTTFYRSmlgSTDtXqqq4pcenBXLQ==\",\n      \"dev\": true\n    },\n    \"node_modules/html-encoding-sniffer\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-4.0.0.tgz\",\n      \"integrity\": \"sha512-Y22oTqIU4uuPgEemfz7NDJz6OeKf12Lsu+QC+s3BVpda64lTiMYCyGwg5ki4vFxkMwQdeZDl2adZoqUgdFuTgQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"whatwg-encoding\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/html-escaper\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz\",\n      \"integrity\": \"sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==\",\n      \"dev\": true\n    },\n    \"node_modules/http-proxy-agent\": {\n      \"version\": \"7.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-7.0.2.tgz\",\n      \"integrity\": \"sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"agent-base\": \"^7.1.0\",\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 14\"\n      }\n    },\n    \"node_modules/https-proxy-agent\": {\n      \"version\": \"7.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.6.tgz\",\n      \"integrity\": \"sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"agent-base\": \"^7.1.2\",\n        \"debug\": \"4\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 14\"\n      }\n    },\n    \"node_modules/human-signals\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-5.0.0.tgz\",\n      \"integrity\": \"sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=16.17.0\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz\",\n      \"integrity\": \"sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safer-buffer\": \"\u003e= 2.1.2 \u003c 3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz\",\n      \"integrity\": \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 4\"\n      }\n    },\n    \"node_modules/import-fresh\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz\",\n      \"integrity\": \"sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.8.19\"\n      }\n    },\n    \"node_modules/indent-string\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz\",\n      \"integrity\": \"sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"deprecated\": \"This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"node_modules/internal-slot\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz\",\n      \"integrity\": \"sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"hasown\": \"^2.0.2\",\n        \"side-channel\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/is-arguments\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-arguments/-/is-arguments-1.2.0.tgz\",\n      \"integrity\": \"sha512-7bVbi0huj/wrIAOzb8U1aszg9kdi3KN/CyU19CTI7tAoZYEZoL9yCDXpbXN+uPsuWnP02cyug1gleqq+TU+YCA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-array-buffer\": {\n      \"version\": \"3.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz\",\n      \"integrity\": \"sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.3\",\n        \"get-intrinsic\": \"^1.2.6\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-async-function\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz\",\n      \"integrity\": \"sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"async-function\": \"^1.0.0\",\n        \"call-bound\": \"^1.0.3\",\n        \"get-proto\": \"^1.0.1\",\n        \"has-tostringtag\": \"^1.0.2\",\n        \"safe-regex-test\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-bigint\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz\",\n      \"integrity\": \"sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-bigints\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/is-boolean-object\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz\",\n      \"integrity\": \"sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-callable\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz\",\n      \"integrity\": \"sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.16.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz\",\n      \"integrity\": \"sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hasown\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-data-view\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz\",\n      \"integrity\": \"sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.6\",\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-date-object\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz\",\n      \"integrity\": \"sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/is-finalizationregistry\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz\",\n      \"integrity\": \"sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/is-generator-function\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz\",\n      \"integrity\": \"sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"get-proto\": \"^1.0.0\",\n        \"has-tostringtag\": \"^1.0.2\",\n        \"safe-regex-test\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/is-map\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz\",\n      \"integrity\": \"sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-negative-zero\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz\",\n      \"integrity\": \"sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-node-process\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-node-process/-/is-node-process-1.2.0.tgz\",\n      \"integrity\": \"sha512-Vg4o6/fqPxIjtxgUH5QLJhwZ7gW5diGCVlXpuUfELC62CuxM1iHcRe51f2W1FDy04Ai4KJkagKjx3XaqyfRKXw==\",\n      \"dev\": true\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.12.0\"\n      }\n    },\n    \"node_modules/is-number-object\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz\",\n      \"integrity\": \"sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-path-inside\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/is-potential-custom-element-name\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-potential-custom-element-name/-/is-potential-custom-element-name-1.0.1.tgz\",\n      \"integrity\": \"sha512-bCYeRA2rVibKZd+s2625gGnGF/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPKJ1hrN3nzPNKFEKOUiQ==\",\n      \"dev\": true\n    },\n    \"node_modules/is-regex\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz\",\n      \"integrity\": \"sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"gopd\": \"^1.2.0\",\n        \"has-tostringtag\": \"^1.0.2\",\n        \"hasown\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-set\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz\",\n      \"integrity\": \"sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-shared-array-buffer\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz\",\n      \"integrity\": \"sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-stream\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-3.0.0.tgz\",\n      \"integrity\": \"sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || \u003e=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-string\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz\",\n      \"integrity\": \"sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-symbol\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz\",\n      \"integrity\": \"sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"has-symbols\": \"^1.1.0\",\n        \"safe-regex-test\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-typed-array\": {\n      \"version\": \"1.1.15\",\n      \"resolved\": \"https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz\",\n      \"integrity\": \"sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"which-typed-array\": \"^1.1.16\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakmap\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz\",\n      \"integrity\": \"sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakref\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz\",\n      \"integrity\": \"sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakset\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz\",\n      \"integrity\": \"sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"get-intrinsic\": \"^1.2.6\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz\",\n      \"integrity\": \"sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==\",\n      \"dev\": true\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n      \"dev\": true\n    },\n    \"node_modules/istanbul-lib-coverage\": {\n      \"version\": \"3.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.2.tgz\",\n      \"integrity\": \"sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-report\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.1.tgz\",\n      \"integrity\": \"sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"make-dir\": \"^4.0.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      }\n    },\n    \"node_modules/istanbul-lib-source-maps\": {\n      \"version\": \"5.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-5.0.6.tgz\",\n      \"integrity\": \"sha512-yg2d+Em4KizZC5niWhQaIomgf5WlL4vOOjZ5xGCmF8SnPE/mDWWXgvRExdcpCgh9lLRRa1/fSYp2ymmbJ1pI+A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.23\",\n        \"debug\": \"^4.1.1\",\n        \"istanbul-lib-coverage\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      }\n    },\n    \"node_modules/istanbul-reports\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.1.7.tgz\",\n      \"integrity\": \"sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"html-escaper\": \"^2.0.0\",\n        \"istanbul-lib-report\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/iterator.prototype\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.5.tgz\",\n      \"integrity\": \"sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.6\",\n        \"get-proto\": \"^1.0.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"set-function-name\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/jackspeak\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz\",\n      \"integrity\": \"sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@isaacs/cliui\": \"^8.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      },\n      \"optionalDependencies\": {\n        \"@pkgjs/parseargs\": \"^0.11.0\"\n      }\n    },\n    \"node_modules/jiti\": {\n      \"version\": \"1.21.7\",\n      \"resolved\": \"https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz\",\n      \"integrity\": \"sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"jiti\": \"bin/jiti.js\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\"\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/jsdom\": {\n      \"version\": \"23.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsdom/-/jsdom-23.2.0.tgz\",\n      \"integrity\": \"sha512-L88oL7D/8ufIES+Zjz7v0aes+oBMh2Xnh3ygWvL0OaICOomKEPKuPnIfBJekiXr+BHbbMjrWn/xqrDQuxFTeyA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@asamuzakjp/dom-selector\": \"^2.0.1\",\n        \"cssstyle\": \"^4.0.1\",\n        \"data-urls\": \"^5.0.0\",\n        \"decimal.js\": \"^10.4.3\",\n        \"form-data\": \"^4.0.0\",\n        \"html-encoding-sniffer\": \"^4.0.0\",\n        \"http-proxy-agent\": \"^7.0.0\",\n        \"https-proxy-agent\": \"^7.0.2\",\n        \"is-potential-custom-element-name\": \"^1.0.1\",\n        \"parse5\": \"^7.1.2\",\n        \"rrweb-cssom\": \"^0.6.0\",\n        \"saxes\": \"^6.0.0\",\n        \"symbol-tree\": \"^3.2.4\",\n        \"tough-cookie\": \"^4.1.3\",\n        \"w3c-xmlserializer\": \"^5.0.0\",\n        \"webidl-conversions\": \"^7.0.0\",\n        \"whatwg-encoding\": \"^3.1.1\",\n        \"whatwg-mimetype\": \"^4.0.0\",\n        \"whatwg-url\": \"^14.0.0\",\n        \"ws\": \"^8.16.0\",\n        \"xml-name-validator\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      },\n      \"peerDependencies\": {\n        \"canvas\": \"^2.11.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"canvas\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jsesc\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz\",\n      \"integrity\": \"sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"jsesc\": \"bin/jsesc\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/json-buffer\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz\",\n      \"integrity\": \"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\",\n      \"dev\": true\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n      \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n      \"dev\": true\n    },\n    \"node_modules/json-stable-stringify-without-jsonify\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz\",\n      \"integrity\": \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/json5\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-2.2.3.tgz\",\n      \"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/jsx-ast-utils\": {\n      \"version\": \"3.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz\",\n      \"integrity\": \"sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.6\",\n        \"array.prototype.flat\": \"^1.3.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"object.values\": \"^1.1.6\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=4.0\"\n      }\n    },\n    \"node_modules/keyv\": {\n      \"version\": \"4.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz\",\n      \"integrity\": \"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"json-buffer\": \"3.0.1\"\n      }\n    },\n    \"node_modules/levn\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\",\n      \"integrity\": \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"~0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.8.0\"\n      }\n    },\n    \"node_modules/lilconfig\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz\",\n      \"integrity\": \"sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/antonk52\"\n      }\n    },\n    \"node_modules/lines-and-columns\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\",\n      \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\",\n      \"dev\": true\n    },\n    \"node_modules/local-pkg\": {\n      \"version\": \"0.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/local-pkg/-/local-pkg-0.5.1.tgz\",\n      \"integrity\": \"sha512-9rrA30MRRP3gBD3HTGnC6cDFpaE1kVDWxWgqWJUN0RvDNAo+Nz/9GxB+nHOH0ifbVFy0hSA1V6vFDvnx54lTEQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mlly\": \"^1.7.3\",\n        \"pkg-types\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/antfu\"\n      }\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.merge\": {\n      \"version\": \"4.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz\",\n      \"integrity\": \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\",\n      \"dev\": true\n    },\n    \"node_modules/loose-envify\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz\",\n      \"integrity\": \"sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\",\n      \"dependencies\": {\n        \"js-tokens\": \"^3.0.0 || ^4.0.0\"\n      },\n      \"bin\": {\n        \"loose-envify\": \"cli.js\"\n      }\n    },\n    \"node_modules/loupe\": {\n      \"version\": \"2.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/loupe/-/loupe-2.3.7.tgz\",\n      \"integrity\": \"sha512-zSMINGVYkdpYSOBmLi0D1Uo7JU9nVdQKrHxC8eYlV+9YKK9WePqAlL7lSlorG/U2Fw1w0hTBmaa/jrQ3UbPHtA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-func-name\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz\",\n      \"integrity\": \"sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yallist\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/lucide-react\": {\n      \"version\": \"0.263.1\",\n      \"resolved\": \"https://registry.npmjs.org/lucide-react/-/lucide-react-0.263.1.tgz\",\n      \"integrity\": \"sha512-keqxAx97PlaEN89PXZ6ki1N8nRjGWtDa4021GFYLNj0RgruM5odbpl8GHTExj0hhPq3sF6Up0gnxt6TSHu+ovw==\",\n      \"peerDependencies\": {\n        \"react\": \"^16.5.1 || ^17.0.0 || ^18.0.0\"\n      }\n    },\n    \"node_modules/lz-string\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/lz-string/-/lz-string-1.5.0.tgz\",\n      \"integrity\": \"sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"lz-string\": \"bin/bin.js\"\n      }\n    },\n    \"node_modules/magic-string\": {\n      \"version\": \"0.30.17\",\n      \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz\",\n      \"integrity\": \"sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/sourcemap-codec\": \"^1.5.0\"\n      }\n    },\n    \"node_modules/magicast\": {\n      \"version\": \"0.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/magicast/-/magicast-0.3.5.tgz\",\n      \"integrity\": \"sha512-L0WhttDl+2BOsybvEOLK7fW3UA0OQ0IQ2d6Zl2x/a6vVRs3bAY0ECOSHHeL5jD+SbOpOCUEi0y1DgHEn9Qn1AQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.25.4\",\n        \"@babel/types\": \"^7.25.4\",\n        \"source-map-js\": \"^1.2.0\"\n      }\n    },\n    \"node_modules/make-dir\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/make-dir/-/make-dir-4.0.0.tgz\",\n      \"integrity\": \"sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"semver\": \"^7.5.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/math-intrinsics\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz\",\n      \"integrity\": \"sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/mdn-data\": {\n      \"version\": \"2.0.30\",\n      \"resolved\": \"https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.30.tgz\",\n      \"integrity\": \"sha512-GaqWWShW4kv/G9IEucWScBx9G1/vsFZZJUO+tD26M8J8z3Kw5RDQjaoZe03YAClgeS/SWPOcb4nkFBTEi5DUEA==\",\n      \"dev\": true\n    },\n    \"node_modules/merge-stream\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\",\n      \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\",\n      \"dev\": true\n    },\n    \"node_modules/merge2\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\",\n      \"integrity\": \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 8\"\n      }\n    },\n    \"node_modules/micromatch\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n      \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"braces\": \"^3.0.3\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8.6\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.6\"\n      }\n    },\n    \"node_modules/mimic-fn\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz\",\n      \"integrity\": \"sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/min-indent\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgz\",\n      \"integrity\": \"sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=4\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n      \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=16 || 14 \u003e=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/minipass\": {\n      \"version\": \"7.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz\",\n      \"integrity\": \"sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=16 || 14 \u003e=14.17\"\n      }\n    },\n    \"node_modules/mlly\": {\n      \"version\": \"1.7.4\",\n      \"resolved\": \"https://registry.npmjs.org/mlly/-/mlly-1.7.4.tgz\",\n      \"integrity\": \"sha512-qmdSIPC4bDJXgZTCR7XosJiNKySV7O215tsPtDN9iEO/7q/76b/ijtgRu/+epFXSJhijtTCCGp3DWS549P3xKw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"acorn\": \"^8.14.0\",\n        \"pathe\": \"^2.0.1\",\n        \"pkg-types\": \"^1.3.0\",\n        \"ufo\": \"^1.5.4\"\n      }\n    },\n    \"node_modules/mlly/node_modules/pathe\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz\",\n      \"integrity\": \"sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==\",\n      \"dev\": true\n    },\n    \"node_modules/mrmime\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/mrmime/-/mrmime-2.0.1.tgz\",\n      \"integrity\": \"sha512-Y3wQdFg2Va6etvQ5I82yUhGdsKrcYox6p7FfL1LbK2J4V01F9TGlepTIhnK24t7koZibmg82KGglhA1XK5IsLQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"node_modules/msw\": {\n      \"version\": \"2.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/msw/-/msw-2.10.4.tgz\",\n      \"integrity\": \"sha512-6R1or/qyele7q3RyPwNuvc0IxO8L8/Aim6Sz5ncXEgcWUNxSKE+udriTOWHtpMwmfkLYlacA2y7TIx4cL5lgHA==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"dependencies\": {\n        \"@bundled-es-modules/cookie\": \"^2.0.1\",\n        \"@bundled-es-modules/statuses\": \"^1.0.1\",\n        \"@bundled-es-modules/tough-cookie\": \"^0.1.6\",\n        \"@inquirer/confirm\": \"^5.0.0\",\n        \"@mswjs/interceptors\": \"^0.39.1\",\n        \"@open-draft/deferred-promise\": \"^2.2.0\",\n        \"@open-draft/until\": \"^2.1.0\",\n        \"@types/cookie\": \"^0.6.0\",\n        \"@types/statuses\": \"^2.0.4\",\n        \"graphql\": \"^16.8.1\",\n        \"headers-polyfill\": \"^4.0.2\",\n        \"is-node-process\": \"^1.2.0\",\n        \"outvariant\": \"^1.4.3\",\n        \"path-to-regexp\": \"^6.3.0\",\n        \"picocolors\": \"^1.1.1\",\n        \"strict-event-emitter\": \"^0.5.1\",\n        \"type-fest\": \"^4.26.1\",\n        \"yargs\": \"^17.7.2\"\n      },\n      \"bin\": {\n        \"msw\": \"cli/index.js\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/mswjs\"\n      },\n      \"peerDependencies\": {\n        \"typescript\": \"\u003e= 4.8.x\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/msw/node_modules/type-fest\": {\n      \"version\": \"4.41.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz\",\n      \"integrity\": \"sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/mute-stream\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mute-stream/-/mute-stream-2.0.0.tgz\",\n      \"integrity\": \"sha512-WWdIxpyjEn+FhQJQQv9aQAYlHoNVdzIzUySNV1gHUPDSdZJ3yZn7pAAbQcV7B56Mvu881q9FZV+0Vx2xC44VWA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^18.17.0 || \u003e=20.5.0\"\n      }\n    },\n    \"node_modules/mz\": {\n      \"version\": \"2.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/mz/-/mz-2.7.0.tgz\",\n      \"integrity\": \"sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"any-promise\": \"^1.0.0\",\n        \"object-assign\": \"^4.0.1\",\n        \"thenify-all\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/nanoid\": {\n      \"version\": \"3.3.11\",\n      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz\",\n      \"integrity\": \"sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"bin\": {\n        \"nanoid\": \"bin/nanoid.cjs\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || ^13.7 || ^14 || \u003e=15.0.1\"\n      }\n    },\n    \"node_modules/natural-compare\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\",\n      \"integrity\": \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\",\n      \"dev\": true\n    },\n    \"node_modules/node-releases\": {\n      \"version\": \"2.0.19\",\n      \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz\",\n      \"integrity\": \"sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==\",\n      \"dev\": true\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/normalize-range\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz\",\n      \"integrity\": \"sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/npm-run-path\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-5.3.0.tgz\",\n      \"integrity\": \"sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-key\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || \u003e=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/npm-run-path/node_modules/path-key\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-4.0.0.tgz\",\n      \"integrity\": \"sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/object-hash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz\",\n      \"integrity\": \"sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 6\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.4\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz\",\n      \"integrity\": \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-is\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/object-is/-/object-is-1.1.6.tgz\",\n      \"integrity\": \"sha512-F8cZ+KfGlSGi09lJT7/Nd6KJZ9ygtvYC0/UYYLI9nmQKLMnydpB9yvbv9K1uSkEu7FU9vYPmVwLg328tX+ot3Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-keys\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz\",\n      \"integrity\": \"sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/object.assign\": {\n      \"version\": \"4.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz\",\n      \"integrity\": \"sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.3\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.entries\": {\n      \"version\": \"1.1.9\",\n      \"resolved\": \"https://registry.npmjs.org/object.entries/-/object.entries-1.1.9.tgz\",\n      \"integrity\": \"sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.4\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/object.fromentries\": {\n      \"version\": \"2.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz\",\n      \"integrity\": \"sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.values\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/object.values/-/object.values-1.2.1.tgz\",\n      \"integrity\": \"sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.3\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/onetime\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-6.0.0.tgz\",\n      \"integrity\": \"sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mimic-fn\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/optionator\": {\n      \"version\": \"0.9.4\",\n      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz\",\n      \"integrity\": \"sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"deep-is\": \"^0.1.3\",\n        \"fast-levenshtein\": \"^2.0.6\",\n        \"levn\": \"^0.4.1\",\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"^0.4.0\",\n        \"word-wrap\": \"^1.2.5\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.8.0\"\n      }\n    },\n    \"node_modules/outvariant\": {\n      \"version\": \"1.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/outvariant/-/outvariant-1.4.3.tgz\",\n      \"integrity\": \"sha512-+Sl2UErvtsoajRDKCE5/dBz4DIvHXQQnAxtQTF04OJxY0+DyZXSo5P5Bb7XYWOh81syohlYL24hbDwxedPUJCA==\",\n      \"dev\": true\n    },\n    \"node_modules/own-keys\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz\",\n      \"integrity\": \"sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.6\",\n        \"object-keys\": \"^1.1.1\",\n        \"safe-push-apply\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yocto-queue\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/package-json-from-dist\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz\",\n      \"integrity\": \"sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==\",\n      \"dev\": true\n    },\n    \"node_modules/parent-module\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n      \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"callsites\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/parse5\": {\n      \"version\": \"7.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse5/-/parse5-7.3.0.tgz\",\n      \"integrity\": \"sha512-IInvU7fabl34qmi9gY8XOVxhYyMyuH2xUNpb2q8/Y+7552KlejkRvqvD19nMoUW/uQGGbqNpA6Tufu5FL5BZgw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"entities\": \"^6.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/inikulin/parse5?sponsor=1\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n      \"dev\": true\n    },\n    \"node_modules/path-scurry\": {\n      \"version\": \"1.11.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz\",\n      \"integrity\": \"sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^10.2.0\",\n        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=16 || 14 \u003e=14.18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/path-scurry/node_modules/lru-cache\": {\n      \"version\": \"10.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz\",\n      \"integrity\": \"sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==\",\n      \"dev\": true\n    },\n    \"node_modules/path-to-regexp\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-6.3.0.tgz\",\n      \"integrity\": \"sha512-Yhpw4T9C6hPpgPeA28us07OJeqZ5EzQTkbfwuhsUg0c237RomFoETJgmp2sa3F/41gfLE6G5cqcYwznmeEeOlQ==\",\n      \"dev\": true\n    },\n    \"node_modules/path-type\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n      \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/pathe\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\",\n      \"integrity\": \"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\",\n      \"dev\": true\n    },\n    \"node_modules/pathval\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/pathval/-/pathval-1.1.1.tgz\",\n      \"integrity\": \"sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/picocolors\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz\",\n      \"integrity\": \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\",\n      \"dev\": true\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/pify\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz\",\n      \"integrity\": \"sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/pirates\": {\n      \"version\": \"4.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz\",\n      \"integrity\": \"sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 6\"\n      }\n    },\n    \"node_modules/pkg-types\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/pkg-types/-/pkg-types-1.3.1.tgz\",\n      \"integrity\": \"sha512-/Jm5M4RvtBFVkKWRu2BLUTNP8/M2a+UwuAX+ae4770q1qVGtfjG+WTCupoZixokjmHiry8uI+dlY8KXYV5HVVQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"confbox\": \"^0.1.8\",\n        \"mlly\": \"^1.7.4\",\n        \"pathe\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/pkg-types/node_modules/pathe\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz\",\n      \"integrity\": \"sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==\",\n      \"dev\": true\n    },\n    \"node_modules/possible-typed-array-names\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz\",\n      \"integrity\": \"sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/postcss\": {\n      \"version\": \"8.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz\",\n      \"integrity\": \"sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"nanoid\": \"^3.3.11\",\n        \"picocolors\": \"^1.1.1\",\n        \"source-map-js\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || \u003e=14\"\n      }\n    },\n    \"node_modules/postcss-import\": {\n      \"version\": \"15.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz\",\n      \"integrity\": \"sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"postcss-value-parser\": \"^4.0.0\",\n        \"read-cache\": \"^1.0.0\",\n        \"resolve\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.0.0\"\n      }\n    },\n    \"node_modules/postcss-import/node_modules/resolve\": {\n      \"version\": \"1.22.10\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz\",\n      \"integrity\": \"sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.16.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/postcss-js\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz\",\n      \"integrity\": \"sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"camelcase-css\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12 || ^14 || \u003e= 16\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.4.21\"\n      }\n    },\n    \"node_modules/postcss-load-config\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz\",\n      \"integrity\": \"sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"lilconfig\": \"^3.0.0\",\n        \"yaml\": \"^2.3.4\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 14\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"\u003e=8.0.9\",\n        \"ts-node\": \"\u003e=9.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"postcss\": {\n          \"optional\": true\n        },\n        \"ts-node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/postcss-nested\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz\",\n      \"integrity\": \"sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"postcss-selector-parser\": \"^6.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12.0\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.2.14\"\n      }\n    },\n    \"node_modules/postcss-selector-parser\": {\n      \"version\": \"6.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz\",\n      \"integrity\": \"sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cssesc\": \"^3.0.0\",\n        \"util-deprecate\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=4\"\n      }\n    },\n    \"node_modules/postcss-value-parser\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz\",\n      \"integrity\": \"sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==\",\n      \"dev\": true\n    },\n    \"node_modules/prelude-ls\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n      \"integrity\": \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.8.0\"\n      }\n    },\n    \"node_modules/pretty-format\": {\n      \"version\": \"27.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-27.5.1.tgz\",\n      \"integrity\": \"sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^17.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10.13.0 || ^12.13.0 || ^14.15.0 || \u003e=15.0.0\"\n      }\n    },\n    \"node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/pretty-format/node_modules/react-is\": {\n      \"version\": \"17.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz\",\n      \"integrity\": \"sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==\",\n      \"dev\": true\n    },\n    \"node_modules/prop-types\": {\n      \"version\": \"15.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz\",\n      \"integrity\": \"sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"loose-envify\": \"^1.4.0\",\n        \"object-assign\": \"^4.1.1\",\n        \"react-is\": \"^16.13.1\"\n      }\n    },\n    \"node_modules/psl\": {\n      \"version\": \"1.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/psl/-/psl-1.15.0.tgz\",\n      \"integrity\": \"sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.3.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/lupomontero\"\n      }\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n      \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/querystringify\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz\",\n      \"integrity\": \"sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ==\",\n      \"dev\": true\n    },\n    \"node_modules/queue-microtask\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n      \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/react\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react/-/react-18.3.1.tgz\",\n      \"integrity\": \"sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/react-dom\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz\",\n      \"integrity\": \"sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\",\n        \"scheduler\": \"^0.23.2\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^18.3.1\"\n      }\n    },\n    \"node_modules/react-is\": {\n      \"version\": \"16.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz\",\n      \"integrity\": \"sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\",\n      \"dev\": true\n    },\n    \"node_modules/react-refresh\": {\n      \"version\": \"0.17.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-refresh/-/react-refresh-0.17.0.tgz\",\n      \"integrity\": \"sha512-z6F7K9bV85EfseRCp2bzrpyQ0Gkw1uLoCel9XBVWPg/TjRj94SkJzUTGfOa4bs7iJvBWtQG0Wq7wnI0syw3EBQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/react-router\": {\n      \"version\": \"7.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-router/-/react-router-7.7.1.tgz\",\n      \"integrity\": \"sha512-jVKHXoWRIsD/qS6lvGveckwb862EekvapdHJN/cGmzw40KnJH5gg53ujOJ4qX6EKIK9LSBfFed/xiQ5yeXNrUA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cookie\": \"^1.0.1\",\n        \"set-cookie-parser\": \"^2.6.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=20.0.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"\u003e=18\",\n        \"react-dom\": \"\u003e=18\"\n      },\n      \"peerDependenciesMeta\": {\n        \"react-dom\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/react-router-dom\": {\n      \"version\": \"7.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-router-dom/-/react-router-dom-7.7.1.tgz\",\n      \"integrity\": \"sha512-bavdk2BA5r3MYalGKZ01u8PGuDBloQmzpBZVhDLrOOv1N943Wq6dcM9GhB3x8b7AbqPMEezauv4PeGkAJfy7FQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"react-router\": \"7.7.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=20.0.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"\u003e=18\",\n        \"react-dom\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/react-router/node_modules/cookie\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-1.0.2.tgz\",\n      \"integrity\": \"sha512-9Kr/j4O16ISv8zBBhJoi4bXOYNTkFLOqSL3UDB0njXxCXNezjeyVrJyGOWtgfs/q2km1gwBcfH8q1yEGoMYunA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/read-cache\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz\",\n      \"integrity\": \"sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pify\": \"^2.3.0\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8.10.0\"\n      }\n    },\n    \"node_modules/redent\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/redent/-/redent-3.0.0.tgz\",\n      \"integrity\": \"sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"indent-string\": \"^4.0.0\",\n        \"strip-indent\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/reflect.getprototypeof\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz\",\n      \"integrity\": \"sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.9\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.7\",\n        \"get-proto\": \"^1.0.1\",\n        \"which-builtin-type\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/regexp.prototype.flags\": {\n      \"version\": \"1.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz\",\n      \"integrity\": \"sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-proto\": \"^1.0.1\",\n        \"gopd\": \"^1.2.0\",\n        \"set-function-name\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/require-from-string\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz\",\n      \"integrity\": \"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/requires-port\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz\",\n      \"integrity\": \"sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ==\",\n      \"dev\": true\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"2.0.0-next.5\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz\",\n      \"integrity\": \"sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.13.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=4\"\n      }\n    },\n    \"node_modules/reusify\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz\",\n      \"integrity\": \"sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"iojs\": \"\u003e=1.0.0\",\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\",\n      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n      \"deprecated\": \"Rimraf versions prior to v4 are no longer supported\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/rollup\": {\n      \"version\": \"4.46.0\",\n      \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-4.46.0.tgz\",\n      \"integrity\": \"sha512-ONmkT3Ud3IfW15nl7l4qAZko5/2iZ5ALVBDh02ZSZ5IGVLJSYkRcRa3iB58VyEIyoofs9m2xdVrm+lTi97+3pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/estree\": \"1.0.8\"\n      },\n      \"bin\": {\n        \"rollup\": \"dist/bin/rollup\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18.0.0\",\n        \"npm\": \"\u003e=8.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"@rollup/rollup-android-arm-eabi\": \"4.46.0\",\n        \"@rollup/rollup-android-arm64\": \"4.46.0\",\n        \"@rollup/rollup-darwin-arm64\": \"4.46.0\",\n        \"@rollup/rollup-darwin-x64\": \"4.46.0\",\n        \"@rollup/rollup-freebsd-arm64\": \"4.46.0\",\n        \"@rollup/rollup-freebsd-x64\": \"4.46.0\",\n        \"@rollup/rollup-linux-arm-gnueabihf\": \"4.46.0\",\n        \"@rollup/rollup-linux-arm-musleabihf\": \"4.46.0\",\n        \"@rollup/rollup-linux-arm64-gnu\": \"4.46.0\",\n        \"@rollup/rollup-linux-arm64-musl\": \"4.46.0\",\n        \"@rollup/rollup-linux-loongarch64-gnu\": \"4.46.0\",\n        \"@rollup/rollup-linux-ppc64-gnu\": \"4.46.0\",\n        \"@rollup/rollup-linux-riscv64-gnu\": \"4.46.0\",\n        \"@rollup/rollup-linux-riscv64-musl\": \"4.46.0\",\n        \"@rollup/rollup-linux-s390x-gnu\": \"4.46.0\",\n        \"@rollup/rollup-linux-x64-gnu\": \"4.46.0\",\n        \"@rollup/rollup-linux-x64-musl\": \"4.46.0\",\n        \"@rollup/rollup-win32-arm64-msvc\": \"4.46.0\",\n        \"@rollup/rollup-win32-ia32-msvc\": \"4.46.0\",\n        \"@rollup/rollup-win32-x64-msvc\": \"4.46.0\",\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/rrweb-cssom\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/rrweb-cssom/-/rrweb-cssom-0.6.0.tgz\",\n      \"integrity\": \"sha512-APM0Gt1KoXBz0iIkkdB/kfvGOwC4UuJFeG/c+yV7wSc7q96cG/kJ0HiYCnzivD9SB53cLV1MlHFNfOuPaadYSw==\",\n      \"dev\": true\n    },\n    \"node_modules/run-parallel\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n      \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"queue-microtask\": \"^1.2.2\"\n      }\n    },\n    \"node_modules/safe-array-concat\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz\",\n      \"integrity\": \"sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.6\",\n        \"has-symbols\": \"^1.1.0\",\n        \"isarray\": \"^2.0.5\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/safe-push-apply\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz\",\n      \"integrity\": \"sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"isarray\": \"^2.0.5\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/safe-regex-test\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz\",\n      \"integrity\": \"sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-regex\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"dev\": true\n    },\n    \"node_modules/saxes\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/saxes/-/saxes-6.0.0.tgz\",\n      \"integrity\": \"sha512-xAg7SOnEhrm5zI3puOOKyy1OMcMlIJZYNJY7xLBwSze0UjhPLnWfj2GF2EpT0jmzaJKIWKHLsaSSajf35bcYnA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"xmlchars\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=v12.22.7\"\n      }\n    },\n    \"node_modules/scheduler\": {\n      \"version\": \"0.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz\",\n      \"integrity\": \"sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/semver\": {\n      \"version\": \"7.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\",\n      \"integrity\": \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      }\n    },\n    \"node_modules/set-cookie-parser\": {\n      \"version\": \"2.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.1.tgz\",\n      \"integrity\": \"sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ==\",\n      \"dev\": true\n    },\n    \"node_modules/set-function-length\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\n      \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/set-function-name\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz\",\n      \"integrity\": \"sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"functions-have-names\": \"^1.2.3\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/set-proto\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz\",\n      \"integrity\": \"sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"dunder-proto\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz\",\n      \"integrity\": \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-list\": \"^1.0.0\",\n        \"side-channel-map\": \"^1.0.1\",\n        \"side-channel-weakmap\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-list\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz\",\n      \"integrity\": \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-map\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz\",\n      \"integrity\": \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-weakmap\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz\",\n      \"integrity\": \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-map\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/siginfo\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/siginfo/-/siginfo-2.0.0.tgz\",\n      \"integrity\": \"sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==\",\n      \"dev\": true\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/sirv\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/sirv/-/sirv-2.0.4.tgz\",\n      \"integrity\": \"sha512-94Bdh3cC2PKrbgSOUqTiGPWVZeSiXfKOVZNJniWoqrWrRkB1CJzBU3NEbiTsPcYy1lDsANA/THzS+9WBiy5nfQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@polka/url\": \"^1.0.0-next.24\",\n        \"mrmime\": \"^2.0.0\",\n        \"totalist\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 10\"\n      }\n    },\n    \"node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/source-map-js\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz\",\n      \"integrity\": \"sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/stackback\": {\n      \"version\": \"0.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/stackback/-/stackback-0.0.2.tgz\",\n      \"integrity\": \"sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==\",\n      \"dev\": true\n    },\n    \"node_modules/statuses\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.2.tgz\",\n      \"integrity\": \"sha512-DvEy55V3DB7uknRo+4iOGT5fP1slR8wQohVdknigZPMpMstaKJQWhwiYBACJE3Ul2pTnATihhBYnRhZQHGBiRw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.8\"\n      }\n    },\n    \"node_modules/std-env\": {\n      \"version\": \"3.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/std-env/-/std-env-3.9.0.tgz\",\n      \"integrity\": \"sha512-UGvjygr6F6tpH7o2qyqR6QYpwraIjKSdtzyBdyytFOHmPZY917kwdwLG0RbOjWOnKmnm3PeHjaoLLMie7kPLQw==\",\n      \"dev\": true\n    },\n    \"node_modules/stop-iteration-iterator\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.1.0.tgz\",\n      \"integrity\": \"sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"internal-slot\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/strict-event-emitter\": {\n      \"version\": \"0.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/strict-event-emitter/-/strict-event-emitter-0.5.1.tgz\",\n      \"integrity\": \"sha512-vMgjE/GGEPEFnhFub6pa4FmJBRBVOLpIII2hvCZ8Kzb7K0hlHo7mQv6xYrBvCL2LtAIBwFUK8wvuJgTVSQ5MFQ==\",\n      \"dev\": true\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/string-width-cjs\": {\n      \"name\": \"string-width\",\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/string-width-cjs/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/string-width/node_modules/ansi-regex\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/string-width/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/string.prototype.matchall\": {\n      \"version\": \"4.0.12\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.12.tgz\",\n      \"integrity\": \"sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.3\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.6\",\n        \"gopd\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"internal-slot\": \"^1.1.0\",\n        \"regexp.prototype.flags\": \"^1.5.3\",\n        \"set-function-name\": \"^2.0.2\",\n        \"side-channel\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.repeat\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz\",\n      \"integrity\": \"sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-properties\": \"^1.1.3\",\n        \"es-abstract\": \"^1.17.5\"\n      }\n    },\n    \"node_modules/string.prototype.trim\": {\n      \"version\": \"1.2.10\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz\",\n      \"integrity\": \"sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.2\",\n        \"define-data-property\": \"^1.1.4\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.5\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimend\": {\n      \"version\": \"1.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz\",\n      \"integrity\": \"sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimstart\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz\",\n      \"integrity\": \"sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/strip-ansi-cjs\": {\n      \"name\": \"strip-ansi\",\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/strip-final-newline\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-3.0.0.tgz\",\n      \"integrity\": \"sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/strip-indent\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-indent/-/strip-indent-3.0.0.tgz\",\n      \"integrity\": \"sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"min-indent\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/strip-literal\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-literal/-/strip-literal-2.1.1.tgz\",\n      \"integrity\": \"sha512-631UJ6O00eNGfMiWG78ck80dfBab8X6IVFB51jZK5Icd7XAs60Z5y7QdSd/wGIklnWvRbUNloVzhOKKmutxQ6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"js-tokens\": \"^9.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/antfu\"\n      }\n    },\n    \"node_modules/strip-literal/node_modules/js-tokens\": {\n      \"version\": \"9.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-9.0.1.tgz\",\n      \"integrity\": \"sha512-mxa9E9ITFOt0ban3j6L5MpjwegGz6lBQmM1IJkWeBZGcMxto50+eWdjC/52xDbS2vy0k7vIMK0Fe2wfL9OQSpQ==\",\n      \"dev\": true\n    },\n    \"node_modules/sucrase\": {\n      \"version\": \"3.35.0\",\n      \"resolved\": \"https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz\",\n      \"integrity\": \"sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"commander\": \"^4.0.0\",\n        \"glob\": \"^10.3.10\",\n        \"lines-and-columns\": \"^1.1.6\",\n        \"mz\": \"^2.7.0\",\n        \"pirates\": \"^4.0.1\",\n        \"ts-interface-checker\": \"^0.1.9\"\n      },\n      \"bin\": {\n        \"sucrase\": \"bin/sucrase\",\n        \"sucrase-node\": \"bin/sucrase-node\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=16 || 14 \u003e=14.17\"\n      }\n    },\n    \"node_modules/sucrase/node_modules/glob\": {\n      \"version\": \"10.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.4.5.tgz\",\n      \"integrity\": \"sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"foreground-child\": \"^3.1.0\",\n        \"jackspeak\": \"^3.1.2\",\n        \"minimatch\": \"^9.0.4\",\n        \"minipass\": \"^7.1.2\",\n        \"package-json-from-dist\": \"^1.0.0\",\n        \"path-scurry\": \"^1.11.1\"\n      },\n      \"bin\": {\n        \"glob\": \"dist/esm/bin.mjs\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/symbol-tree\": {\n      \"version\": \"3.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.4.tgz\",\n      \"integrity\": \"sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==\",\n      \"dev\": true\n    },\n    \"node_modules/tailwindcss\": {\n      \"version\": \"3.4.17\",\n      \"resolved\": \"https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz\",\n      \"integrity\": \"sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@alloc/quick-lru\": \"^5.2.0\",\n        \"arg\": \"^5.0.2\",\n        \"chokidar\": \"^3.6.0\",\n        \"didyoumean\": \"^1.2.2\",\n        \"dlv\": \"^1.1.3\",\n        \"fast-glob\": \"^3.3.2\",\n        \"glob-parent\": \"^6.0.2\",\n        \"is-glob\": \"^4.0.3\",\n        \"jiti\": \"^1.21.6\",\n        \"lilconfig\": \"^3.1.3\",\n        \"micromatch\": \"^4.0.8\",\n        \"normalize-path\": \"^3.0.0\",\n        \"object-hash\": \"^3.0.0\",\n        \"picocolors\": \"^1.1.1\",\n        \"postcss\": \"^8.4.47\",\n        \"postcss-import\": \"^15.1.0\",\n        \"postcss-js\": \"^4.0.1\",\n        \"postcss-load-config\": \"^4.0.2\",\n        \"postcss-nested\": \"^6.2.0\",\n        \"postcss-selector-parser\": \"^6.1.2\",\n        \"resolve\": \"^1.22.8\",\n        \"sucrase\": \"^3.35.0\"\n      },\n      \"bin\": {\n        \"tailwind\": \"lib/cli.js\",\n        \"tailwindcss\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=14.0.0\"\n      }\n    },\n    \"node_modules/tailwindcss/node_modules/resolve\": {\n      \"version\": \"1.22.10\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz\",\n      \"integrity\": \"sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.16.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/test-exclude\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz\",\n      \"integrity\": \"sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"glob\": \"^7.1.4\",\n        \"minimatch\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/test-exclude/node_modules/brace-expansion\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/test-exclude/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/text-table\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\",\n      \"integrity\": \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\",\n      \"dev\": true\n    },\n    \"node_modules/thenify\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz\",\n      \"integrity\": \"sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"any-promise\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/thenify-all\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz\",\n      \"integrity\": \"sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"thenify\": \"\u003e= 3.1.0 \u003c 4\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=0.8\"\n      }\n    },\n    \"node_modules/tinybench\": {\n      \"version\": \"2.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/tinybench/-/tinybench-2.9.0.tgz\",\n      \"integrity\": \"sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==\",\n      \"dev\": true\n    },\n    \"node_modules/tinypool\": {\n      \"version\": \"0.8.4\",\n      \"resolved\": \"https://registry.npmjs.org/tinypool/-/tinypool-0.8.4.tgz\",\n      \"integrity\": \"sha512-i11VH5gS6IFeLY3gMBQ00/MmLncVP7JLXOw1vlgkytLmJK7QnEr7NXf0LBdxfmNPAeyetukOk0bOYrJrFGjYJQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=14.0.0\"\n      }\n    },\n    \"node_modules/tinyspy\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/tinyspy/-/tinyspy-2.2.1.tgz\",\n      \"integrity\": \"sha512-KYad6Vy5VDWV4GH3fjpseMQ/XU2BhIYP7Vzd0LG44qRWm/Yt2WCOTicFdvmgo6gWaqooMQCawTtILVQJupKu7A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=14.0.0\"\n      }\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8.0\"\n      }\n    },\n    \"node_modules/totalist\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/totalist/-/totalist-3.0.1.tgz\",\n      \"integrity\": \"sha512-sf4i37nQ2LBx4m3wB74y+ubopq6W/dIzXg0FDGjsYnZHVa1Da8FH853wlL2gtUhg+xJXjfk3kUZS3BRoQeoQBQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/tough-cookie\": {\n      \"version\": \"4.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.1.4.tgz\",\n      \"integrity\": \"sha512-Loo5UUvLD9ScZ6jh8beX1T6sO1w2/MpCRpEP7V280GKMVUQ0Jzar2U3UJPsrdbziLEMMhu3Ujnq//rhiFuIeag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"psl\": \"^1.1.33\",\n        \"punycode\": \"^2.1.1\",\n        \"universalify\": \"^0.2.0\",\n        \"url-parse\": \"^1.5.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=6\"\n      }\n    },\n    \"node_modules/tr46\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-5.1.1.tgz\",\n      \"integrity\": \"sha512-hdF5ZgjTqgAntKkklYw0R03MG2x/bSzTtkxmIRw/sTNV8YXsCJ1tfLAX23lhxhHJlEf3CRCOCGGWw3vI3GaSPw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/ts-api-utils\": {\n      \"version\": \"1.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.3.tgz\",\n      \"integrity\": \"sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=16\"\n      },\n      \"peerDependencies\": {\n        \"typescript\": \"\u003e=4.2.0\"\n      }\n    },\n    \"node_modules/ts-interface-checker\": {\n      \"version\": \"0.1.13\",\n      \"resolved\": \"https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz\",\n      \"integrity\": \"sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==\",\n      \"dev\": true\n    },\n    \"node_modules/type-check\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\",\n      \"integrity\": \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.8.0\"\n      }\n    },\n    \"node_modules/type-detect\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-4.1.0.tgz\",\n      \"integrity\": \"sha512-Acylog8/luQ8L7il+geoSxhEkazvkslg7PSNKOX59mbB9cOveP5aq9h74Y7YU8yDpJwetzQQrfIwtf4Wp4LKcw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=4\"\n      }\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n      \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/typed-array-buffer\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz\",\n      \"integrity\": \"sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-typed-array\": \"^1.1.14\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      }\n    },\n    \"node_modules/typed-array-byte-length\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz\",\n      \"integrity\": \"sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.2.0\",\n        \"has-proto\": \"^1.2.0\",\n        \"is-typed-array\": \"^1.1.14\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-byte-offset\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz\",\n      \"integrity\": \"sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.8\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.2.0\",\n        \"has-proto\": \"^1.2.0\",\n        \"is-typed-array\": \"^1.1.15\",\n        \"reflect.getprototypeof\": \"^1.0.9\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-length\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz\",\n      \"integrity\": \"sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"is-typed-array\": \"^1.1.13\",\n        \"possible-typed-array-names\": \"^1.0.0\",\n        \"reflect.getprototypeof\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz\",\n      \"integrity\": \"sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=14.17\"\n      }\n    },\n    \"node_modules/ufo\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/ufo/-/ufo-1.6.1.tgz\",\n      \"integrity\": \"sha512-9a4/uxlTWJ4+a5i0ooc1rU7C7YOw3wT+UGqdeNNHWnOF9qcMBgLRS+4IYUqbczewFx4mLEig6gawh7X6mFlEkA==\",\n      \"dev\": true\n    },\n    \"node_modules/unbox-primitive\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz\",\n      \"integrity\": \"sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"has-bigints\": \"^1.0.2\",\n        \"has-symbols\": \"^1.1.0\",\n        \"which-boxed-primitive\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"6.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz\",\n      \"integrity\": \"sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\",\n      \"dev\": true\n    },\n    \"node_modules/universalify\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz\",\n      \"integrity\": \"sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e= 4.0.0\"\n      }\n    },\n    \"node_modules/update-browserslist-db\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz\",\n      \"integrity\": \"sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"escalade\": \"^3.2.0\",\n        \"picocolors\": \"^1.1.1\"\n      },\n      \"bin\": {\n        \"update-browserslist-db\": \"cli.js\"\n      },\n      \"peerDependencies\": {\n        \"browserslist\": \"\u003e= 4.21.0\"\n      }\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/url-parse\": {\n      \"version\": \"1.5.10\",\n      \"resolved\": \"https://registry.npmjs.org/url-parse/-/url-parse-1.5.10.tgz\",\n      \"integrity\": \"sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"querystringify\": \"^2.1.1\",\n        \"requires-port\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/util-deprecate\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n      \"integrity\": \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\",\n      \"dev\": true\n    },\n    \"node_modules/vite\": {\n      \"version\": \"5.4.19\",\n      \"resolved\": \"https://registry.npmjs.org/vite/-/vite-5.4.19.tgz\",\n      \"integrity\": \"sha512-qO3aKv3HoQC8QKiNSTuUM1l9o/XX3+c+VTgLHbJWHZGeTPVAg2XwazI9UWzoxjIJCGCV2zU60uqMzjeLZuULqA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esbuild\": \"^0.21.3\",\n        \"postcss\": \"^8.4.43\",\n        \"rollup\": \"^4.20.0\"\n      },\n      \"bin\": {\n        \"vite\": \"bin/vite.js\"\n      },\n      \"engines\": {\n        \"node\": \"^18.0.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/vitejs/vite?sponsor=1\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.3\"\n      },\n      \"peerDependencies\": {\n        \"@types/node\": \"^18.0.0 || \u003e=20.0.0\",\n        \"less\": \"*\",\n        \"lightningcss\": \"^1.21.0\",\n        \"sass\": \"*\",\n        \"sass-embedded\": \"*\",\n        \"stylus\": \"*\",\n        \"sugarss\": \"*\",\n        \"terser\": \"^5.4.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/node\": {\n          \"optional\": true\n        },\n        \"less\": {\n          \"optional\": true\n        },\n        \"lightningcss\": {\n          \"optional\": true\n        },\n        \"sass\": {\n          \"optional\": true\n        },\n        \"sass-embedded\": {\n          \"optional\": true\n        },\n        \"stylus\": {\n          \"optional\": true\n        },\n        \"sugarss\": {\n          \"optional\": true\n        },\n        \"terser\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/vite-node\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/vite-node/-/vite-node-1.6.1.tgz\",\n      \"integrity\": \"sha512-YAXkfvGtuTzwWbDSACdJSg4A4DZiAqckWe90Zapc/sEX3XvHcw1NdurM/6od8J207tSDqNbSsgdCacBgvJKFuA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cac\": \"^6.7.14\",\n        \"debug\": \"^4.3.4\",\n        \"pathe\": \"^1.1.1\",\n        \"picocolors\": \"^1.0.0\",\n        \"vite\": \"^5.0.0\"\n      },\n      \"bin\": {\n        \"vite-node\": \"vite-node.mjs\"\n      },\n      \"engines\": {\n        \"node\": \"^18.0.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      }\n    },\n    \"node_modules/vitest\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/vitest/-/vitest-1.6.1.tgz\",\n      \"integrity\": \"sha512-Ljb1cnSJSivGN0LqXd/zmDbWEM0RNNg2t1QW/XUhYl/qPqyu7CsqeWtqQXHVaJsecLPuDoak2oJcZN2QoRIOag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@vitest/expect\": \"1.6.1\",\n        \"@vitest/runner\": \"1.6.1\",\n        \"@vitest/snapshot\": \"1.6.1\",\n        \"@vitest/spy\": \"1.6.1\",\n        \"@vitest/utils\": \"1.6.1\",\n        \"acorn-walk\": \"^8.3.2\",\n        \"chai\": \"^4.3.10\",\n        \"debug\": \"^4.3.4\",\n        \"execa\": \"^8.0.1\",\n        \"local-pkg\": \"^0.5.0\",\n        \"magic-string\": \"^0.30.5\",\n        \"pathe\": \"^1.1.1\",\n        \"picocolors\": \"^1.0.0\",\n        \"std-env\": \"^3.5.0\",\n        \"strip-literal\": \"^2.0.0\",\n        \"tinybench\": \"^2.5.1\",\n        \"tinypool\": \"^0.8.3\",\n        \"vite\": \"^5.0.0\",\n        \"vite-node\": \"1.6.1\",\n        \"why-is-node-running\": \"^2.2.2\"\n      },\n      \"bin\": {\n        \"vitest\": \"vitest.mjs\"\n      },\n      \"engines\": {\n        \"node\": \"^18.0.0 || \u003e=20.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      },\n      \"peerDependencies\": {\n        \"@edge-runtime/vm\": \"*\",\n        \"@types/node\": \"^18.0.0 || \u003e=20.0.0\",\n        \"@vitest/browser\": \"1.6.1\",\n        \"@vitest/ui\": \"1.6.1\",\n        \"happy-dom\": \"*\",\n        \"jsdom\": \"*\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@edge-runtime/vm\": {\n          \"optional\": true\n        },\n        \"@types/node\": {\n          \"optional\": true\n        },\n        \"@vitest/browser\": {\n          \"optional\": true\n        },\n        \"@vitest/ui\": {\n          \"optional\": true\n        },\n        \"happy-dom\": {\n          \"optional\": true\n        },\n        \"jsdom\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/w3c-xmlserializer\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-5.0.0.tgz\",\n      \"integrity\": \"sha512-o8qghlI8NZHU1lLPrpi2+Uq7abh4GGPpYANlalzWxyWteJOCsr/P+oPBA49TOLu5FTZO4d3F9MnWJfiMo4BkmA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"xml-name-validator\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/webidl-conversions\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz\",\n      \"integrity\": \"sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/whatwg-encoding\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-3.1.1.tgz\",\n      \"integrity\": \"sha512-6qN4hJdMwfYBtE3YBTTHhoeuUrDBPZmbQaxWAqSALV/MeEnR5z1xd8UKud2RAkFoPkmB+hli1TZSnyi84xz1vQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"iconv-lite\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/whatwg-mimetype\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-4.0.0.tgz\",\n      \"integrity\": \"sha512-QaKxh0eNIi2mE9p2vEdzfagOKHCcj1pJ56EEHGQOVxp8r9/iszLUUV7v89x9O1p/T+NlTM5W7jW6+cz4Fq1YVg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/whatwg-url\": {\n      \"version\": \"14.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-14.2.0.tgz\",\n      \"integrity\": \"sha512-De72GdQZzNTUBBChsXueQUnPKDkg/5A5zp7pFDuQAj5UFoENpiACU0wlCvzpAGnTkj++ihpKwKyYewn/XNUbKw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tr46\": \"^5.1.0\",\n        \"webidl-conversions\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 8\"\n      }\n    },\n    \"node_modules/which-boxed-primitive\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz\",\n      \"integrity\": \"sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-bigint\": \"^1.1.0\",\n        \"is-boolean-object\": \"^1.2.1\",\n        \"is-number-object\": \"^1.1.1\",\n        \"is-string\": \"^1.1.1\",\n        \"is-symbol\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-builtin-type\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz\",\n      \"integrity\": \"sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"function.prototype.name\": \"^1.1.6\",\n        \"has-tostringtag\": \"^1.0.2\",\n        \"is-async-function\": \"^2.0.0\",\n        \"is-date-object\": \"^1.1.0\",\n        \"is-finalizationregistry\": \"^1.1.0\",\n        \"is-generator-function\": \"^1.0.10\",\n        \"is-regex\": \"^1.2.1\",\n        \"is-weakref\": \"^1.0.2\",\n        \"isarray\": \"^2.0.5\",\n        \"which-boxed-primitive\": \"^1.1.0\",\n        \"which-collection\": \"^1.0.2\",\n        \"which-typed-array\": \"^1.1.16\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-collection\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz\",\n      \"integrity\": \"sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-map\": \"^2.0.3\",\n        \"is-set\": \"^2.0.3\",\n        \"is-weakmap\": \"^2.0.2\",\n        \"is-weakset\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-typed-array\": {\n      \"version\": \"1.1.19\",\n      \"resolved\": \"https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz\",\n      \"integrity\": \"sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.4\",\n        \"for-each\": \"^0.3.5\",\n        \"get-proto\": \"^1.0.1\",\n        \"gopd\": \"^1.2.0\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/why-is-node-running\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/why-is-node-running/-/why-is-node-running-2.3.0.tgz\",\n      \"integrity\": \"sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"siginfo\": \"^2.0.0\",\n        \"stackback\": \"0.0.2\"\n      },\n      \"bin\": {\n        \"why-is-node-running\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/word-wrap\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz\",\n      \"integrity\": \"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=0.10.0\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n      \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^6.1.0\",\n        \"string-width\": \"^5.0.1\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs\": {\n      \"name\": \"wrap-ansi\",\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-regex\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-styles\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n      \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/ws\": {\n      \"version\": \"8.18.3\",\n      \"resolved\": \"https://registry.npmjs.org/ws/-/ws-8.18.3.tgz\",\n      \"integrity\": \"sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10.0.0\"\n      },\n      \"peerDependencies\": {\n        \"bufferutil\": \"^4.0.1\",\n        \"utf-8-validate\": \"\u003e=5.0.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"bufferutil\": {\n          \"optional\": true\n        },\n        \"utf-8-validate\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/xml-name-validator\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-5.0.0.tgz\",\n      \"integrity\": \"sha512-EvGK8EJ3DhaHfbRlETOWAS5pO9MZITeauHKJyb8wyajUfQUenkIg2MvLDTZ4T/TgIcm3HU0TFBgWWboAZ30UHg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      }\n    },\n    \"node_modules/xmlchars\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/xmlchars/-/xmlchars-2.2.0.tgz\",\n      \"integrity\": \"sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw==\",\n      \"dev\": true\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      }\n    },\n    \"node_modules/yallist\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz\",\n      \"integrity\": \"sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==\",\n      \"dev\": true\n    },\n    \"node_modules/yaml\": {\n      \"version\": \"2.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-2.8.0.tgz\",\n      \"integrity\": \"sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"yaml\": \"bin.mjs\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e= 14.6\"\n      }\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"17.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz\",\n      \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=12\"\n      }\n    },\n    \"node_modules/yargs/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/yargs/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"\u003e=8\"\n      }\n    },\n    \"node_modules/yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/yoctocolors-cjs\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/yoctocolors-cjs/-/yoctocolors-cjs-2.1.2.tgz\",\n      \"integrity\": \"sha512-cYVsTjKl8b+FrnidjibDWskAv7UKOfcwaVZdp/it9n1s9fU3IkgDbhdIRKCW4JDsAlECJY0ytoVPT3sK6kideA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"\u003e=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    }\n  }\n}\n",
      "size": 294905,
      "hash": "8cfd6631a9ddab7d4249250da29c5df89ef941766397e6befd13671b10ed8966"
    },
    {
      "path": "frontend/package.json",
      "template": true,
      "content": "{\n  \"name\": \"fullstack-template-frontend\",\n  \"private\": true,\n  \"version\": \"0.0.0\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"tsc \u0026\u0026 vite build\",\n    \"lint\": \"eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\",\n    \"preview\": \"vite preview\",\n    \"type-check\": \"tsc --noEmit\",\n    \"test\": \"vitest\",\n    \"test:ui\": \"vitest --ui\",\n    \"test:coverage\": \"vitest --coverage\"\n  },\n  \"dependencies\": {\n    \"clsx\": \"^2.1.1\",\n    \"lucide-react\": \"^0.263.1\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\"\n  },\n  \"devDependencies\": {\n    \"@testing-library/jest-dom\": \"^6.1.0\",\n    \"@testing-library/react\": \"^14.3.1\",\n    \"@testing-library/user-event\": \"^14.6.1\",\n    \"@types/node\": \"^20.12.7\",\n    \"@types/react\": \"^18.2.66\",\n    \"@types/react-dom\": \"^18.2.22\",\n    \"@typescript-eslint/eslint-plugin\": \"^7.2.0\",\n    \"@typescript-eslint/parser\": \"^7.2.0\",\n    \"@vitejs/plugin-react\": \"^4.2.1\",\n    \"@vitest/coverage-v8\": \"^1.0.0\",\n    \"@vitest/ui\": \"^1.0.0\",\n    \"autoprefixer\": \"^10.4.19\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-plugin-react\": \"^7.34.1\",\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.6\",\n    \"jsdom\": \"^23.0.0\",\n    \"msw\": \"^2.10.4\",\n    \"postcss\": \"^8.4.38\",\n    \"react-router-dom\": \"^7.7.1\",\n    \"tailwindcss\": \"^3.4.3\",\n    \"typescript\": \"^5.2.2\",\n    \"vite\": \"^5.2.0\",\n    \"vitest\": \"^1.6.1\"\n  }\n}\n",
      "size": 1399,
      "hash": "09706f635a5d101403d7aae678bf9e0cff538aaff4fc112c7630a4b6cb73097d",
      "mappings": [
        {
          "find": "\"name\": \"fullstack-template\"",
          "replace": "\"name\": \"{{.ProjectName | kebab}}\""
        },
        {
          "find": "\"description\": \"Fullstack template\"",
          "replace": "\"description\": \"{{.Description}}\""
        }
      ]
    },
    {
      "path": "frontend/postcss.config.js",
      "template": false,
      "content": "export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}",
      "size": 79,
      "hash": "010e8774c76996e28b1f2290d690b3b64f56f2fbe26c747b4419ee0110d0a002"
    },
    {
      "path": "frontend/public/vite.svg",
      "template": false,
      "content": "\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" class=\"iconify iconify--logos\" width=\"31.88\" height=\"32\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 256 257\"\u003e\u003cdefs\u003e\u003clinearGradient id=\"IconifyId1813088fe1fbc01fb466\" x1=\"-.828%\" x2=\"57.636%\" y1=\"7.652%\" y2=\"78.411%\"\u003e\u003cstop offset=\"0%\" stop-color=\"#41D1FF\"\u003e\u003c/stop\u003e\u003cstop offset=\"100%\" stop-color=\"#BD34FE\"\u003e\u003c/stop\u003e\u003c/linearGradient\u003e\u003clinearGradient id=\"IconifyId1813088fe1fbc01fb467\" x1=\"43.376%\" x2=\"50.316%\" y1=\"2.242%\" y2=\"89.03%\"\u003e\u003cstop offset=\"0%\" stop-color=\"#FFEA83\"\u003e\u003c/stop\u003e\u003cstop offset=\"8.333%\" stop-color=\"#FFDD35\"\u003e\u003c/stop\u003e\u003cstop offset=\"100%\" stop-color=\"#FFA800\"\u003e\u003c/stop\u003e\u003c/linearGradient\u003e\u003c/defs\u003e\u003cpath fill=\"url(#IconifyId1813088fe1fbc01fb466)\" d=\"M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z\"\u003e\u003c/path\u003e\u003cpath fill=\"url(#IconifyId1813088fe1fbc01fb467)\" d=\"M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z\"\u003e\u003c/path\u003e\u003c/svg\u003e",
      "size": 1497,
      "hash": "4a748afd443918bb16591c834c401dae33e87861ab5dbad0811c3a3b4a9214fb"
    },
    {
      "path": "frontend/src/App.tsx",
      "template": false,
      "content": "import React, { Suspense } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { Header, Footer, Sidebar } from '@/components';\nimport { AuthProvider } from './contexts/AuthContext';\nimport { RBACProvider } from './contexts/RBACContext';\nimport { ProtectedRoute, PublicRoute, AdminRoute } from './components/routing';\nimport { LoadingSpinner } from './components/ui/LoadingSpinner';\n\n// Lazy load components for better performance\nconst Landing = React.lazy(() =\u003e import('./pages/Landing'));\nconst Login = React.lazy(() =\u003e import('./pages/Login'));\nconst Register = React.lazy(() =\u003e import('./pages/Register'));\nconst Dashboard = React.lazy(() =\u003e import('./pages/home/Dashboard'));\nconst Settings = React.lazy(() =\u003e import('./pages/settings/Settings'));\nconst AdminPanel = React.lazy(() =\u003e import('./pages/admin/AdminPanel'));\n\n// Loading fallback component\nconst PageLoader: React.FC = () =\u003e (\n  \u003cdiv className=\"min-h-screen flex items-center justify-center bg-secondary-50\"\u003e\n    \u003cdiv className=\"text-center\"\u003e\n      \u003cLoadingSpinner size=\"lg\" /\u003e\n      \u003cp className=\"mt-4 text-secondary-600\"\u003eLoading...\u003c/p\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n);\n\n// Layout components\nconst AuthenticatedLayout: React.FC\u003c{ children: React.ReactNode }\u003e = ({ children }) =\u003e (\n  \u003cdiv className=\"min-h-screen flex flex-col\"\u003e\n    \u003cHeader /\u003e\n    \u003cdiv className=\"flex flex-1\"\u003e\n      \u003cSidebar className=\"w-64 hidden md:block\" /\u003e\n      \u003cmain className=\"flex-1\"\u003e\n        {children}\n      \u003c/main\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n);\n\nconst PublicLayout: React.FC\u003c{ children: React.ReactNode; showFooter?: boolean }\u003e = ({ \n  children, \n  showFooter = true \n}) =\u003e (\n  \u003cdiv className=\"min-h-screen flex flex-col\"\u003e\n    \u003cHeader /\u003e\n    \u003cdiv className=\"flex-grow\"\u003e\n      {children}\n    \u003c/div\u003e\n    {showFooter \u0026\u0026 \u003cFooter /\u003e}\n  \u003c/div\u003e\n);\n\nfunction App() {\n  return (\n    \u003cAuthProvider\u003e\n      \u003cRBACProvider\u003e\n        \u003cSuspense fallback={\u003cPageLoader /\u003e}\u003e\n          \u003cRoutes\u003e\n            {/* Public Routes - Only accessible when not authenticated */}\n            \u003cRoute \n              path=\"/login\" \n              element={\n                \u003cPublicRoute\u003e\n                  \u003cPublicLayout showFooter={false}\u003e\n                    \u003cLogin /\u003e\n                  \u003c/PublicLayout\u003e\n                \u003c/PublicRoute\u003e\n              } \n            /\u003e\n            \u003cRoute \n              path=\"/register\" \n              element={\n                \u003cPublicRoute\u003e\n                  \u003cPublicLayout showFooter={false}\u003e\n                    \u003cRegister /\u003e\n                  \u003c/PublicLayout\u003e\n                \u003c/PublicRoute\u003e\n              } \n            /\u003e\n\n            {/* Protected Routes - Require authentication */}\n            \u003cRoute \n              path=\"/dashboard\" \n              element={\n                \u003cProtectedRoute\u003e\n                  \u003cAuthenticatedLayout\u003e\n                    \u003cDashboard /\u003e\n                  \u003c/AuthenticatedLayout\u003e\n                \u003c/ProtectedRoute\u003e\n              } \n            /\u003e\n            \u003cRoute \n              path=\"/settings\" \n              element={\n                \u003cProtectedRoute\u003e\n                  \u003cAuthenticatedLayout\u003e\n                    \u003cSettings /\u003e\n                  \u003c/AuthenticatedLayout\u003e\n                \u003c/ProtectedRoute\u003e\n              } \n            /\u003e\n\n            {/* Admin Routes - Require admin role */}\n            \u003cRoute \n              path=\"/admin\" \n              element={\n                \u003cAdminRoute\u003e\n                  \u003cAuthenticatedLayout\u003e\n                    \u003cAdminPanel /\u003e\n                  \u003c/AuthenticatedLayout\u003e\n                \u003c/AdminRoute\u003e\n              } \n            /\u003e\n\n            {/* Landing/Home Route - Accessible to everyone */}\n            \u003cRoute \n              path=\"/\" \n              element={\n                \u003cPublicLayout\u003e\n                  \u003cLanding /\u003e\n                \u003c/PublicLayout\u003e\n              } \n            /\u003e\n\n            {/* Catch-all route - Redirect to home */}\n            \u003cRoute path=\"*\" element={\u003cNavigate to=\"/\" replace /\u003e} /\u003e\n          \u003c/Routes\u003e\n        \u003c/Suspense\u003e\n      \u003c/RBACProvider\u003e\n    \u003c/AuthProvider\u003e\n  );\n}\n\nexport default App;",
      "size": 4048,
      "hash": "e38cb9f9d08424282e3e9d2a16f8b723c447587e3f1245748a29079ce8275703"
    },
    {
      "path": "frontend/src/components/admin/RoleManagement.tsx",
      "template": false,
      "content": "import React, { useState } from 'react';\nimport { useRBAC, PERMISSIONS } from '../../contexts/RBACContext';\nimport { api, User, ApiError } from '../../lib/api';\nimport { AdminGuard, PermissionGuard } from '../auth/RoleGuard';\n\ninterface RoleManagementProps {\n  user: User;\n  onRoleChanged: () =\u003e void;\n}\n\ninterface RoleChangeModalProps {\n  user: User;\n  isOpen: boolean;\n  onClose: () =\u003e void;\n  onSuccess: () =\u003e void;\n}\n\n// Role change modal component\nconst RoleChangeModal: React.FC\u003cRoleChangeModalProps\u003e = ({\n  user,\n  isOpen,\n  onClose,\n  onSuccess,\n}) =\u003e {\n  const [selectedRole, setSelectedRole] = useState\u003c'user' | 'admin'\u003e(user.role);\n  const [reason, setReason] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState\u003cstring | null\u003e(null);\n\n  if (!isOpen) return null;\n\n  const handleSubmit = async (e: React.FormEvent) =\u003e {\n    e.preventDefault();\n    \n    if (!reason.trim()) {\n      setError('Please provide a reason for the role change');\n      return;\n    }\n\n    if (selectedRole === user.role) {\n      setError('Please select a different role');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      await api.updateUserRole(user.id, {\n        role: selectedRole,\n        reason: reason.trim(),\n      });\n\n      onSuccess();\n      onClose();\n    } catch (err) {\n      if (err instanceof ApiError) {\n        setError(err.message);\n      } else {\n        setError('Failed to update user role');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetForm = () =\u003e {\n    setSelectedRole(user.role);\n    setReason('');\n    setError(null);\n  };\n\n  const handleClose = () =\u003e {\n    resetForm();\n    onClose();\n  };\n\n  return (\n    \u003cdiv className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\"\u003e\n      \u003cdiv className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\"\u003e\n        \u003cdiv className=\"mt-3\"\u003e\n          \u003ch3 className=\"text-lg font-medium text-gray-900 mb-4\"\u003e\n            Change User Role\n          \u003c/h3\u003e\n          \n          \u003cdiv className=\"mb-4 p-3 bg-gray-50 rounded-md\"\u003e\n            \u003cdiv className=\"text-sm text-gray-600\"\u003eUser:\u003c/div\u003e\n            \u003cdiv className=\"font-medium\"\u003e{user.first_name} {user.last_name}\u003c/div\u003e\n            \u003cdiv className=\"text-sm text-gray-500\"\u003e{user.email}\u003c/div\u003e\n            \u003cdiv className=\"text-sm\"\u003e\n              Current role: \u003cspan className=\"font-medium capitalize\"\u003e{user.role}\u003c/span\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n\n          \u003cform onSubmit={handleSubmit}\u003e\n            \u003cdiv className=\"mb-4\"\u003e\n              \u003clabel className=\"block text-sm font-medium text-gray-700 mb-2\"\u003e\n                New Role\n              \u003c/label\u003e\n              \u003cselect\n                value={selectedRole}\n                onChange={(e) =\u003e setSelectedRole(e.target.value as 'user' | 'admin')}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                disabled={loading}\n              \u003e\n                \u003coption value=\"user\"\u003eUser\u003c/option\u003e\n                \u003coption value=\"admin\"\u003eAdmin\u003c/option\u003e\n              \u003c/select\u003e\n            \u003c/div\u003e\n\n            \u003cdiv className=\"mb-4\"\u003e\n              \u003clabel className=\"block text-sm font-medium text-gray-700 mb-2\"\u003e\n                Reason \u003cspan className=\"text-red-500\"\u003e*\u003c/span\u003e\n              \u003c/label\u003e\n              \u003ctextarea\n                value={reason}\n                onChange={(e) =\u003e setReason(e.target.value)}\n                placeholder=\"Please provide a reason for this role change...\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                disabled={loading}\n                required\n              /\u003e\n            \u003c/div\u003e\n\n            {error \u0026\u0026 (\n              \u003cdiv className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\"\u003e\n                \u003cdiv className=\"text-red-600 text-sm\"\u003e{error}\u003c/div\u003e\n              \u003c/div\u003e\n            )}\n\n            \u003cdiv className=\"flex space-x-3\"\u003e\n              \u003cbutton\n                type=\"submit\"\n                disabled={loading || !reason.trim() || selectedRole === user.role}\n                className=\"flex-1 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              \u003e\n                {loading ? 'Updating...' : 'Update Role'}\n              \u003c/button\u003e\n              \u003cbutton\n                type=\"button\"\n                onClick={handleClose}\n                disabled={loading}\n                className=\"flex-1 bg-gray-300 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-400\"\n              \u003e\n                Cancel\n              \u003c/button\u003e\n            \u003c/div\u003e\n          \u003c/form\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\n// Role badge component\nexport const RoleBadge: React.FC\u003c{ role: 'user' | 'admin'; className?: string }\u003e = ({ \n  role, \n  className = '' \n}) =\u003e {\n  const baseClasses = \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\";\n  const roleClasses = {\n    user: \"bg-green-100 text-green-800\",\n    admin: \"bg-purple-100 text-purple-800\",\n  };\n\n  return (\n    \u003cspan className={`${baseClasses} ${roleClasses[role]} ${className}`}\u003e\n      {role.charAt(0).toUpperCase() + role.slice(1)}\n    \u003c/span\u003e\n  );\n};\n\n// Role management actions component\nexport const RoleManagementActions: React.FC\u003cRoleManagementProps\u003e = ({\n  user,\n  onRoleChanged,\n}) =\u003e {\n  const [showRoleModal, setShowRoleModal] = useState(false);\n  const { canManageUser } = useRBAC();\n\n  if (!canManageUser(user.id)) {\n    return null;\n  }\n\n  return (\n    \u003cPermissionGuard permission={PERMISSIONS.USER_MANAGE}\u003e\n      \u003cdiv className=\"flex items-center space-x-2\"\u003e\n        \u003cRoleBadge role={user.role} /\u003e\n        \u003cbutton\n          onClick={() =\u003e setShowRoleModal(true)}\n          className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n          title=\"Change user role\"\n        \u003e\n          Change Role\n        \u003c/button\u003e\n      \u003c/div\u003e\n\n      \u003cRoleChangeModal\n        user={user}\n        isOpen={showRoleModal}\n        onClose={() =\u003e setShowRoleModal(false)}\n        onSuccess={onRoleChanged}\n      /\u003e\n    \u003c/PermissionGuard\u003e\n  );\n};\n\n// Bulk role management component\ninterface BulkRoleManagementProps {\n  selectedUsers: User[];\n  onRoleChanged: () =\u003e void;\n  onClearSelection: () =\u003e void;\n}\n\nexport const BulkRoleManagement: React.FC\u003cBulkRoleManagementProps\u003e = ({\n  selectedUsers,\n  onRoleChanged,\n  onClearSelection,\n}) =\u003e {\n  const [selectedRole, setSelectedRole] = useState\u003c'user' | 'admin'\u003e('user');\n  const [reason, setReason] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState\u003cstring | null\u003e(null);\n\n  if (selectedUsers.length === 0) {\n    return null;\n  }\n\n  const handleBulkRoleChange = async () =\u003e {\n    if (!reason.trim()) {\n      setError('Please provide a reason for the role change');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      await api.bulkUpdateUsers({\n        user_ids: selectedUsers.map(u =\u003e u.id),\n        action: 'role_change',\n        role: selectedRole,\n        reason: reason.trim(),\n      });\n\n      onRoleChanged();\n      onClearSelection();\n      setReason('');\n    } catch (err) {\n      if (err instanceof ApiError) {\n        setError(err.message);\n      } else {\n        setError('Failed to update user roles');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    \u003cAdminGuard\u003e\n      \u003cdiv className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\"\u003e\n        \u003cdiv className=\"flex items-center justify-between mb-4\"\u003e\n          \u003ch3 className=\"text-lg font-medium text-blue-900\"\u003e\n            Bulk Role Management\n          \u003c/h3\u003e\n          \u003cbutton\n            onClick={onClearSelection}\n            className=\"text-blue-600 hover:text-blue-800 text-sm\"\n          \u003e\n            Clear Selection\n          \u003c/button\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"text-sm text-blue-700 mb-4\"\u003e\n          {selectedUsers.length} user{selectedUsers.length \u003e 1 ? 's' : ''} selected\n        \u003c/div\u003e\n\n        \u003cdiv className=\"grid grid-cols-1 md:grid-cols-3 gap-4\"\u003e\n          \u003cdiv\u003e\n            \u003clabel className=\"block text-sm font-medium text-blue-700 mb-1\"\u003e\n              New Role\n            \u003c/label\u003e\n            \u003cselect\n              value={selectedRole}\n              onChange={(e) =\u003e setSelectedRole(e.target.value as 'user' | 'admin')}\n              className=\"w-full px-3 py-2 border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              disabled={loading}\n            \u003e\n              \u003coption value=\"user\"\u003eUser\u003c/option\u003e\n              \u003coption value=\"admin\"\u003eAdmin\u003c/option\u003e\n            \u003c/select\u003e\n          \u003c/div\u003e\n\n          \u003cdiv\u003e\n            \u003clabel className=\"block text-sm font-medium text-blue-700 mb-1\"\u003e\n              Reason\n            \u003c/label\u003e\n            \u003cinput\n              type=\"text\"\n              value={reason}\n              onChange={(e) =\u003e setReason(e.target.value)}\n              placeholder=\"Reason for role change...\"\n              className=\"w-full px-3 py-2 border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              disabled={loading}\n            /\u003e\n          \u003c/div\u003e\n\n          \u003cdiv className=\"flex items-end\"\u003e\n            \u003cbutton\n              onClick={handleBulkRoleChange}\n              disabled={loading || !reason.trim()}\n              className=\"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            \u003e\n              {loading ? 'Updating...' : 'Update Roles'}\n            \u003c/button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        {error \u0026\u0026 (\n          \u003cdiv className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-md\"\u003e\n            \u003cdiv className=\"text-red-600 text-sm\"\u003e{error}\u003c/div\u003e\n          \u003c/div\u003e\n        )}\n      \u003c/div\u003e\n    \u003c/AdminGuard\u003e\n  );\n};\n\n// Role statistics component\nexport const RoleStatistics: React.FC\u003c{ stats: any }\u003e = ({ stats }) =\u003e {\n  return (\n    \u003cPermissionGuard permission={PERMISSIONS.ADMIN_READ}\u003e\n      \u003cdiv className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\"\u003e\n        \u003cdiv className=\"bg-white p-6 rounded-lg shadow border\"\u003e\n          \u003cdiv className=\"flex items-center\"\u003e\n            \u003cdiv className=\"p-2 bg-green-100 rounded-lg\"\u003e\n              \u003csvg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\u003e\n                \u003cpath strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" /\u003e\n              \u003c/svg\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"ml-4\"\u003e\n              \u003cdiv className=\"text-sm font-medium text-gray-500\"\u003eRegular Users\u003c/div\u003e\n              \u003cdiv className=\"text-2xl font-bold text-gray-900\"\u003e\n                {stats?.total_users - stats?.admin_users || 0}\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"bg-white p-6 rounded-lg shadow border\"\u003e\n          \u003cdiv className=\"flex items-center\"\u003e\n            \u003cdiv className=\"p-2 bg-purple-100 rounded-lg\"\u003e\n              \u003csvg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\u003e\n                \u003cpath strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" /\u003e\n              \u003c/svg\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"ml-4\"\u003e\n              \u003cdiv className=\"text-sm font-medium text-gray-500\"\u003eAdministrators\u003c/div\u003e\n              \u003cdiv className=\"text-2xl font-bold text-gray-900\"\u003e\n                {stats?.admin_users || 0}\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/PermissionGuard\u003e\n  );\n};\n\nexport default RoleManagementActions;",
      "size": 12040,
      "hash": "20af10e491c24c6400f8d25c2f04dce32e8f6385fcb5d4024549bbec4f418f51"
    },
    {
      "path": "frontend/src/components/auth/EmailVerificationForm.tsx",
      "template": false,
      "content": "import React, { useState, useEffect } from 'react';\nimport { api, ApiError } from '../../lib/api';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Button } from '../ui/Button';\n\ninterface EmailVerificationFormProps {\n  token?: string;\n  onSuccess?: () =\u003e void;\n  onBack?: () =\u003e void;\n}\n\nexport const EmailVerificationForm: React.FC\u003cEmailVerificationFormProps\u003e = ({\n  token,\n  onSuccess,\n  onBack,\n}) =\u003e {\n  const { refreshAuth, user } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isResending, setIsResending] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [errors, setErrors] = useState\u003cRecord\u003cstring, string\u003e\u003e({});\n  const [resendMessage, setResendMessage] = useState('');\n\n  useEffect(() =\u003e {\n    // Auto-verify if token is provided\n    if (token) {\n      handleVerify(token);\n    } else {\n      // Try to get token from URL params\n      const urlParams = new URLSearchParams(window.location.search);\n      const urlToken = urlParams.get('token');\n      if (urlToken) {\n        handleVerify(urlToken);\n      }\n    }\n  }, [token]);\n\n  const handleVerify = async (verificationToken: string) =\u003e {\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      await api.verifyEmail({ token: verificationToken });\n      setIsSuccess(true);\n      \n      // Refresh auth state to update email verification status\n      await refreshAuth();\n      \n      onSuccess?.();\n    } catch (error) {\n      if (error instanceof ApiError) {\n        setErrors({ general: error.message });\n      } else {\n        setErrors({ general: 'An unexpected error occurred' });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleResendVerification = async () =\u003e {\n    setIsResending(true);\n    setErrors({});\n    setResendMessage('');\n\n    try {\n      await api.resendEmailVerification();\n      setResendMessage('Verification email sent! Please check your inbox.');\n    } catch (error) {\n      if (error instanceof ApiError) {\n        setErrors({ general: error.message });\n      } else {\n        setErrors({ general: 'Failed to resend verification email' });\n      }\n    } finally {\n      setIsResending(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      \u003cdiv className=\"w-full max-w-md mx-auto\"\u003e\n        \u003cdiv className=\"bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\"\u003e\n          \u003cdiv className=\"text-center\"\u003e\n            \u003cdiv className=\"mb-4\"\u003e\n              \u003cdiv className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n            \u003ch2 className=\"text-xl font-bold text-gray-900 mb-2\"\u003eVerifying Email\u003c/h2\u003e\n            \u003cp className=\"text-gray-600\"\u003ePlease wait while we verify your email address...\u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  if (isSuccess) {\n    return (\n      \u003cdiv className=\"w-full max-w-md mx-auto\"\u003e\n        \u003cdiv className=\"bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\"\u003e\n          \u003cdiv className=\"text-center\"\u003e\n            \u003cdiv className=\"mb-4\"\u003e\n              \u003cdiv className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\"\u003e\n                \u003csvg\n                  className=\"h-6 w-6 text-green-600\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                \u003e\n                  \u003cpath\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M5 13l4 4L19 7\"\n                  /\u003e\n                \u003c/svg\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n            \n            \u003ch2 className=\"text-2xl font-bold text-gray-900 mb-2\"\u003eEmail Verified!\u003c/h2\u003e\n            \u003cp className=\"text-gray-600 mb-6\"\u003e\n              Your email address has been successfully verified. You now have full access to your account.\n            \u003c/p\u003e\n            \n            \u003cButton\n              type=\"button\"\n              className=\"w-full\"\n              onClick={() =\u003e window.location.href = '/'}\n            \u003e\n              Continue to Dashboard\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  return (\n    \u003cdiv className=\"w-full max-w-md mx-auto\"\u003e\n      \u003cdiv className=\"bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\"\u003e\n        \u003cdiv className=\"text-center\"\u003e\n          \u003cdiv className=\"mb-4\"\u003e\n            \u003cdiv className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-yellow-100\"\u003e\n              \u003csvg\n                className=\"h-6 w-6 text-yellow-600\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              \u003e\n                \u003cpath\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.314 16.5c-.77.833.192 2.5 1.732 2.5z\"\n                /\u003e\n              \u003c/svg\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \n          \u003ch2 className=\"text-2xl font-bold text-gray-900 mb-2\"\u003eVerify Your Email\u003c/h2\u003e\n          \n          {user ? (\n            \u003cp className=\"text-gray-600 mb-6\"\u003e\n              We've sent a verification email to \u003cstrong\u003e{user.email}\u003c/strong\u003e. \n              Please check your inbox and click the verification link.\n            \u003c/p\u003e\n          ) : (\n            \u003cp className=\"text-gray-600 mb-6\"\u003e\n              Please check your email for a verification link.\n            \u003c/p\u003e\n          )}\n\n          {errors.general \u0026\u0026 (\n            \u003cdiv className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded text-sm\"\u003e\n              {errors.general}\n            \u003c/div\u003e\n          )}\n\n          {resendMessage \u0026\u0026 (\n            \u003cdiv className=\"mb-4 p-3 bg-green-100 border border-green-400 text-green-700 rounded text-sm\"\u003e\n              {resendMessage}\n            \u003c/div\u003e\n          )}\n\n          \u003cdiv className=\"space-y-3\"\u003e\n            {user \u0026\u0026 (\n              \u003cButton\n                type=\"button\"\n                className=\"w-full\"\n                onClick={handleResendVerification}\n                disabled={isResending}\n              \u003e\n                {isResending ? (\n                  \u003cdiv className=\"flex items-center justify-center\"\u003e\n                    \u003cdiv className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\u003e\u003c/div\u003e\n                    Sending...\n                  \u003c/div\u003e\n                ) : (\n                  'Resend Verification Email'\n                )}\n              \u003c/Button\u003e\n            )}\n\n            {onBack \u0026\u0026 (\n              \u003cbutton\n                type=\"button\"\n                className=\"w-full text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                onClick={onBack}\n              \u003e\n                Back to Sign In\n              \u003c/button\u003e\n            )}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"mt-6 text-xs text-gray-500\"\u003e\n            \u003cp\u003eDidn't receive the email? Check your spam folder or try resending.\u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default EmailVerificationForm;",
      "size": 7116,
      "hash": "fc1560b313012486ece3a81936629fc100cd4f930af3b42a2caeb471b8090fdb"
    },
    {
      "path": "frontend/src/components/auth/ForgotPasswordForm.tsx",
      "template": false,
      "content": "import React, { useState } from 'react';\nimport { api, ApiError } from '../../lib/api';\nimport { Button } from '../ui/Button';\n\ninterface ForgotPasswordFormProps {\n  onBack?: () =\u003e void;\n  onSuccess?: () =\u003e void;\n}\n\nexport const ForgotPasswordForm: React.FC\u003cForgotPasswordFormProps\u003e = ({\n  onBack,\n  onSuccess,\n}) =\u003e {\n  const [email, setEmail] = useState('');\n  const [errors, setErrors] = useState\u003cRecord\u003cstring, string\u003e\u003e({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const handleChange = (e: React.ChangeEvent\u003cHTMLInputElement\u003e) =\u003e {\n    setEmail(e.target.value);\n    \n    // Clear errors when user types\n    if (errors.email) {\n      setErrors(prev =\u003e ({ ...prev, email: '' }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) =\u003e {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      await api.forgotPassword({ email });\n      setIsSuccess(true);\n      onSuccess?.();\n    } catch (error) {\n      if (error instanceof ApiError) {\n        if (error.details) {\n          setErrors(error.details);\n        } else {\n          setErrors({ general: error.message });\n        }\n      } else {\n        setErrors({ general: 'An unexpected error occurred' });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isSuccess) {\n    return (\n      \u003cdiv className=\"w-full max-w-md mx-auto\"\u003e\n        \u003cdiv className=\"bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\"\u003e\n          \u003cdiv className=\"text-center\"\u003e\n            \u003cdiv className=\"mb-4\"\u003e\n              \u003cdiv className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\"\u003e\n                \u003csvg\n                  className=\"h-6 w-6 text-green-600\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                \u003e\n                  \u003cpath\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M5 13l4 4L19 7\"\n                  /\u003e\n                \u003c/svg\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n            \n            \u003ch2 className=\"text-2xl font-bold text-gray-900 mb-2\"\u003eCheck Your Email\u003c/h2\u003e\n            \u003cp className=\"text-gray-600 mb-6\"\u003e\n              If an account with that email exists, we've sent you a password reset link.\n            \u003c/p\u003e\n            \n            \u003cdiv className=\"space-y-3\"\u003e\n              \u003cButton\n                type=\"button\"\n                className=\"w-full\"\n                onClick={onBack}\n              \u003e\n                Back to Sign In\n              \u003c/Button\u003e\n              \n              \u003cbutton\n                type=\"button\"\n                className=\"w-full text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                onClick={() =\u003e {\n                  setIsSuccess(false);\n                  setEmail('');\n                }}\n              \u003e\n                Send another email\n              \u003c/button\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  return (\n    \u003cdiv className=\"w-full max-w-md mx-auto\"\u003e\n      \u003cdiv className=\"bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\"\u003e\n        \u003cdiv className=\"mb-6 text-center\"\u003e\n          \u003ch2 className=\"text-2xl font-bold text-gray-900\"\u003eReset Password\u003c/h2\u003e\n          \u003cp className=\"text-gray-600 mt-2\"\u003e\n            Enter your email address and we'll send you a link to reset your password.\n          \u003c/p\u003e\n        \u003c/div\u003e\n\n        {errors.general \u0026\u0026 (\n          \u003cdiv className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\"\u003e\n            {errors.general}\n          \u003c/div\u003e\n        )}\n\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cdiv className=\"mb-6\"\u003e\n            \u003clabel className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\"\u003e\n              Email Address\n            \u003c/label\u003e\n            \u003cinput\n              className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                errors.email ? 'border-red-500' : 'border-gray-300'\n              }`}\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={handleChange}\n              required\n            /\u003e\n            {errors.email \u0026\u0026 \u003cp className=\"text-red-500 text-xs italic mt-1\"\u003e{errors.email}\u003c/p\u003e}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"flex flex-col space-y-3\"\u003e\n            \u003cButton\n              type=\"submit\"\n              className=\"w-full\"\n              disabled={isLoading}\n            \u003e\n              {isLoading ? (\n                \u003cdiv className=\"flex items-center justify-center\"\u003e\n                  \u003cdiv className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\u003e\u003c/div\u003e\n                  Sending Reset Link...\n                \u003c/div\u003e\n              ) : (\n                'Send Reset Link'\n              )}\n            \u003c/Button\u003e\n\n            {onBack \u0026\u0026 (\n              \u003cbutton\n                type=\"button\"\n                className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                onClick={onBack}\n              \u003e\n                Back to Sign In\n              \u003c/button\u003e\n            )}\n          \u003c/div\u003e\n        \u003c/form\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default ForgotPasswordForm;",
      "size": 5393,
      "hash": "6ec3242aba3a2c888b2093baf95198637bda5c54ddb4dc91ab562a4ac45d466e"
    },
    {
      "path": "frontend/src/components/auth/LoginForm.tsx",
      "template": false,
      "content": "import React, { useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ApiError } from '../../lib/api';\nimport { Button } from '../ui/Button';\n\ninterface LoginFormProps {\n  onSuccess?: () =\u003e void;\n  onSwitchToRegister?: () =\u003e void;\n  onForgotPassword?: () =\u003e void;\n}\n\nexport const LoginForm: React.FC\u003cLoginFormProps\u003e = ({\n  onSuccess,\n  onSwitchToRegister,\n  onForgotPassword,\n}) =\u003e {\n  const { login } = useAuth();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState\u003cRecord\u003cstring, string\u003e\u003e({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleChange = (e: React.ChangeEvent\u003cHTMLInputElement\u003e) =\u003e {\n    const { name, value } = e.target;\n    setFormData(prev =\u003e ({ ...prev, [name]: value }));\n    \n    // Clear errors when user types\n    if (errors[name]) {\n      setErrors(prev =\u003e ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) =\u003e {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      await login(formData);\n      onSuccess?.();\n    } catch (error) {\n      if (error instanceof ApiError) {\n        if (error.details) {\n          setErrors(error.details);\n        } else {\n          setErrors({ general: error.message });\n        }\n      } else {\n        setErrors({ general: 'An unexpected error occurred' });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    \u003cdiv className=\"w-full max-w-md mx-auto\"\u003e\n      \u003cdiv className=\"bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\"\u003e\n        \u003cdiv className=\"mb-6 text-center\"\u003e\n          \u003ch2 className=\"text-2xl font-bold text-gray-900\"\u003eSign In\u003c/h2\u003e\n          \u003cp className=\"text-gray-600 mt-2\"\u003eWelcome back! Please sign in to your account.\u003c/p\u003e\n        \u003c/div\u003e\n\n        {errors.general \u0026\u0026 (\n          \u003cdiv className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\"\u003e\n            {errors.general}\n          \u003c/div\u003e\n        )}\n\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cdiv className=\"mb-4\"\u003e\n            \u003clabel className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\"\u003e\n              Email Address\n            \u003c/label\u003e\n            \u003cinput\n              className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                errors.email ? 'border-red-500' : 'border-gray-300'\n              }`}\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              value={formData.email}\n              onChange={handleChange}\n              required\n            /\u003e\n            {errors.email \u0026\u0026 \u003cp className=\"text-red-500 text-xs italic mt-1\"\u003e{errors.email}\u003c/p\u003e}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"mb-6\"\u003e\n            \u003clabel className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\"\u003e\n              Password\n            \u003c/label\u003e\n            \u003cinput\n              className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                errors.password ? 'border-red-500' : 'border-gray-300'\n              }`}\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter your password\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n            /\u003e\n            {errors.password \u0026\u0026 \u003cp className=\"text-red-500 text-xs italic mt-1\"\u003e{errors.password}\u003c/p\u003e}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"flex items-center justify-between mb-6\"\u003e\n            \u003cButton\n              type=\"submit\"\n              className=\"w-full\"\n              disabled={isLoading}\n            \u003e\n              {isLoading ? (\n                \u003cdiv className=\"flex items-center justify-center\"\u003e\n                  \u003cdiv className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\u003e\u003c/div\u003e\n                  Signing In...\n                \u003c/div\u003e\n              ) : (\n                'Sign In'\n              )}\n            \u003c/Button\u003e\n          \u003c/div\u003e\n\n          \u003cdiv className=\"text-center\"\u003e\n            \u003cbutton\n              type=\"button\"\n              className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n              onClick={onForgotPassword}\n            \u003e\n              Forgot your password?\n            \u003c/button\u003e\n          \u003c/div\u003e\n        \u003c/form\u003e\n\n        {onSwitchToRegister \u0026\u0026 (\n          \u003cdiv className=\"mt-6 text-center\"\u003e\n            \u003cp className=\"text-gray-600\"\u003e\n              Don't have an account?{' '}\n              \u003cbutton\n                type=\"button\"\n                className=\"text-blue-600 hover:text-blue-800 font-medium\"\n                onClick={onSwitchToRegister}\n              \u003e\n                Sign up\n              \u003c/button\u003e\n            \u003c/p\u003e\n          \u003c/div\u003e\n        )}\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default LoginForm;",
      "size": 5003,
      "hash": "c0a5168c458faf65ec79352594666596269535d94cb7c6e6621d11e6ac866ecf"
    },
    {
      "path": "frontend/src/components/auth/ProtectedRoute.tsx",
      "template": false,
      "content": "import React, { ReactNode } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useRBAC, UserRole, Permission, Resource, Action } from '../../contexts/RBACContext';\n\ninterface ProtectedRouteProps {\n  children: ReactNode;\n  requireEmailVerification?: boolean;\n  fallback?: ReactNode;\n  redirectTo?: string;\n  // RBAC props\n  requiredRole?: UserRole;\n  requiredRoles?: UserRole[];\n  requiredPermission?: Permission;\n  requiredPermissions?: Permission[];\n  requireAllPermissions?: boolean;\n  requiredResource?: Resource;\n  requiredAction?: Action;\n  adminOnly?: boolean;\n}\n\nexport const ProtectedRoute: React.FC\u003cProtectedRouteProps\u003e = ({\n  children,\n  requireEmailVerification = false,\n  fallback,\n  redirectTo = '/login',\n  // RBAC props\n  requiredRole,\n  requiredRoles,\n  requiredPermission,\n  requiredPermissions,\n  requireAllPermissions = false,\n  requiredResource,\n  requiredAction,\n  adminOnly = false,\n}) =\u003e {\n  const { isAuthenticated, isLoading, isEmailVerified } = useAuth();\n  const { \n    hasRole, \n    hasAnyRole, \n    hasPermission, \n    hasAnyPermission, \n    hasAllPermissions, \n    canAccessResource,\n    isAdmin \n  } = useRBAC();\n\n  // Show loading state while checking authentication\n  if (isLoading) {\n    return (\n      \u003cdiv className=\"flex items-center justify-center min-h-screen\"\u003e\n        \u003cdiv className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\u003e\u003c/div\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  // Check authentication\n  if (!isAuthenticated) {\n    if (fallback) {\n      return \u003c\u003e{fallback}\u003c/\u003e;\n    }\n    \n    // Redirect to login\n    window.location.href = redirectTo;\n    return null;\n  }\n\n  // Check email verification if required\n  if (requireEmailVerification \u0026\u0026 !isEmailVerified) {\n    if (fallback) {\n      return \u003c\u003e{fallback}\u003c/\u003e;\n    }\n    \n    // Redirect to email verification\n    window.location.href = '/verify-email';\n    return null;\n  }\n\n  // Check RBAC authorization\n  let hasAuthorization = true;\n\n  // Check admin requirement\n  if (adminOnly \u0026\u0026 !isAdmin()) {\n    hasAuthorization = false;\n  }\n\n  // Check role requirements\n  if (hasAuthorization \u0026\u0026 requiredRole \u0026\u0026 !hasRole(requiredRole)) {\n    hasAuthorization = false;\n  }\n\n  if (hasAuthorization \u0026\u0026 requiredRoles \u0026\u0026 !hasAnyRole(requiredRoles)) {\n    hasAuthorization = false;\n  }\n\n  // Check permission requirements\n  if (hasAuthorization \u0026\u0026 requiredPermission \u0026\u0026 !hasPermission(requiredPermission)) {\n    hasAuthorization = false;\n  }\n\n  if (hasAuthorization \u0026\u0026 requiredPermissions) {\n    if (requireAllPermissions) {\n      if (!hasAllPermissions(requiredPermissions)) {\n        hasAuthorization = false;\n      }\n    } else {\n      if (!hasAnyPermission(requiredPermissions)) {\n        hasAuthorization = false;\n      }\n    }\n  }\n\n  // Check resource access requirements\n  if (hasAuthorization \u0026\u0026 requiredResource \u0026\u0026 requiredAction) {\n    if (!canAccessResource(requiredResource, requiredAction)) {\n      hasAuthorization = false;\n    }\n  }\n\n  // If not authorized, handle accordingly\n  if (!hasAuthorization) {\n    if (fallback) {\n      return \u003c\u003e{fallback}\u003c/\u003e;\n    }\n    \n    // Redirect to unauthorized page\n    window.location.href = '/unauthorized';\n    return null;\n  }\n\n  // Render children if all checks pass\n  return \u003c\u003e{children}\u003c/\u003e;\n};\n\n// Convenience components for common use cases\n\n// Admin-only protected route\nexport const AdminRoute: React.FC\u003cOmit\u003cProtectedRouteProps, 'adminOnly'\u003e\u003e = (props) =\u003e (\n  \u003cProtectedRoute {...props} adminOnly={true} /\u003e\n);\n\n// Role-based protected route\nexport const RoleRoute: React.FC\u003cProtectedRouteProps \u0026 { role: UserRole }\u003e = ({ role, ...props }) =\u003e (\n  \u003cProtectedRoute {...props} requiredRole={role} /\u003e\n);\n\n// Permission-based protected route\nexport const PermissionRoute: React.FC\u003cProtectedRouteProps \u0026 { permission: Permission }\u003e = ({ permission, ...props }) =\u003e (\n  \u003cProtectedRoute {...props} requiredPermission={permission} /\u003e\n);\n\n// Resource access protected route\nexport const ResourceRoute: React.FC\u003cProtectedRouteProps \u0026 { resource: Resource; action: Action }\u003e = ({ resource, action, ...props }) =\u003e (\n  \u003cProtectedRoute {...props} requiredResource={resource} requiredAction={action} /\u003e\n);\n\nexport default ProtectedRoute;",
      "size": 4198,
      "hash": "47088358a441f3395811a3a4e09ccaeea9e735b0a562fa2c2e5061560f17fe76"
    },
    {
      "path": "frontend/src/components/auth/RegisterForm.tsx",
      "template": false,
      "content": "import React, { useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ApiError } from '../../lib/api';\nimport { Button } from '../ui/Button';\n\ninterface RegisterFormProps {\n  onSuccess?: () =\u003e void;\n  onSwitchToLogin?: () =\u003e void;\n}\n\nexport const RegisterForm: React.FC\u003cRegisterFormProps\u003e = ({\n  onSuccess,\n  onSwitchToLogin,\n}) =\u003e {\n  const { register } = useAuth();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    first_name: '',\n    last_name: '',\n  });\n  const [errors, setErrors] = useState\u003cRecord\u003cstring, string\u003e\u003e({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleChange = (e: React.ChangeEvent\u003cHTMLInputElement\u003e) =\u003e {\n    const { name, value } = e.target;\n    setFormData(prev =\u003e ({ ...prev, [name]: value }));\n    \n    // Clear errors when user types\n    if (errors[name]) {\n      setErrors(prev =\u003e ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const validateForm = (): boolean =\u003e {\n    const newErrors: Record\u003cstring, string\u003e = {};\n\n    // Email validation\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // First name validation\n    if (!formData.first_name.trim()) {\n      newErrors.first_name = 'First name is required';\n    }\n\n    // Last name validation\n    if (!formData.last_name.trim()) {\n      newErrors.last_name = 'Last name is required';\n    }\n\n    // Password validation\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length \u003c 8) {\n      newErrors.password = 'Password must be at least 8 characters long';\n    }\n\n    // Confirm password validation\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) =\u003e {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      const { confirmPassword, ...registerData } = formData;\n      await register(registerData);\n      onSuccess?.();\n    } catch (error) {\n      if (error instanceof ApiError) {\n        if (error.details) {\n          setErrors(error.details);\n        } else {\n          setErrors({ general: error.message });\n        }\n      } else {\n        setErrors({ general: 'An unexpected error occurred' });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    \u003cdiv className=\"w-full max-w-md mx-auto\"\u003e\n      \u003cdiv className=\"bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\"\u003e\n        \u003cdiv className=\"mb-6 text-center\"\u003e\n          \u003ch2 className=\"text-2xl font-bold text-gray-900\"\u003eCreate Account\u003c/h2\u003e\n          \u003cp className=\"text-gray-600 mt-2\"\u003eSign up to get started with your account.\u003c/p\u003e\n        \u003c/div\u003e\n\n        {errors.general \u0026\u0026 (\n          \u003cdiv className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\"\u003e\n            {errors.general}\n          \u003c/div\u003e\n        )}\n\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cdiv className=\"flex gap-4 mb-4\"\u003e\n            \u003cdiv className=\"flex-1\"\u003e\n              \u003clabel className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"first_name\"\u003e\n                First Name\n              \u003c/label\u003e\n              \u003cinput\n                className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                  errors.first_name ? 'border-red-500' : 'border-gray-300'\n                }`}\n                id=\"first_name\"\n                name=\"first_name\"\n                type=\"text\"\n                placeholder=\"First name\"\n                value={formData.first_name}\n                onChange={handleChange}\n                required\n              /\u003e\n              {errors.first_name \u0026\u0026 \u003cp className=\"text-red-500 text-xs italic mt-1\"\u003e{errors.first_name}\u003c/p\u003e}\n            \u003c/div\u003e\n\n            \u003cdiv className=\"flex-1\"\u003e\n              \u003clabel className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"last_name\"\u003e\n                Last Name\n              \u003c/label\u003e\n              \u003cinput\n                className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                  errors.last_name ? 'border-red-500' : 'border-gray-300'\n                }`}\n                id=\"last_name\"\n                name=\"last_name\"\n                type=\"text\"\n                placeholder=\"Last name\"\n                value={formData.last_name}\n                onChange={handleChange}\n                required\n              /\u003e\n              {errors.last_name \u0026\u0026 \u003cp className=\"text-red-500 text-xs italic mt-1\"\u003e{errors.last_name}\u003c/p\u003e}\n            \u003c/div\u003e\n          \u003c/div\u003e\n\n          \u003cdiv className=\"mb-4\"\u003e\n            \u003clabel className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\"\u003e\n              Email Address\n            \u003c/label\u003e\n            \u003cinput\n              className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                errors.email ? 'border-red-500' : 'border-gray-300'\n              }`}\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              value={formData.email}\n              onChange={handleChange}\n              required\n            /\u003e\n            {errors.email \u0026\u0026 \u003cp className=\"text-red-500 text-xs italic mt-1\"\u003e{errors.email}\u003c/p\u003e}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"mb-4\"\u003e\n            \u003clabel className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\"\u003e\n              Password\n            \u003c/label\u003e\n            \u003cinput\n              className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                errors.password ? 'border-red-500' : 'border-gray-300'\n              }`}\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter your password\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n            /\u003e\n            {errors.password \u0026\u0026 \u003cp className=\"text-red-500 text-xs italic mt-1\"\u003e{errors.password}\u003c/p\u003e}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"mb-6\"\u003e\n            \u003clabel className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"confirmPassword\"\u003e\n              Confirm Password\n            \u003c/label\u003e\n            \u003cinput\n              className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                errors.confirmPassword ? 'border-red-500' : 'border-gray-300'\n              }`}\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              type=\"password\"\n              placeholder=\"Confirm your password\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              required\n            /\u003e\n            {errors.confirmPassword \u0026\u0026 \u003cp className=\"text-red-500 text-xs italic mt-1\"\u003e{errors.confirmPassword}\u003c/p\u003e}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"flex items-center justify-between mb-6\"\u003e\n            \u003cButton\n              type=\"submit\"\n              className=\"w-full\"\n              disabled={isLoading}\n            \u003e\n              {isLoading ? (\n                \u003cdiv className=\"flex items-center justify-center\"\u003e\n                  \u003cdiv className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\u003e\u003c/div\u003e\n                  Creating Account...\n                \u003c/div\u003e\n              ) : (\n                'Create Account'\n              )}\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/form\u003e\n\n        {onSwitchToLogin \u0026\u0026 (\n          \u003cdiv className=\"mt-6 text-center\"\u003e\n            \u003cp className=\"text-gray-600\"\u003e\n              Already have an account?{' '}\n              \u003cbutton\n                type=\"button\"\n                className=\"text-blue-600 hover:text-blue-800 font-medium\"\n                onClick={onSwitchToLogin}\n              \u003e\n                Sign in\n              \u003c/button\u003e\n            \u003c/p\u003e\n          \u003c/div\u003e\n        )}\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default RegisterForm;",
      "size": 8629,
      "hash": "34d98d2f32f684a0cf25a245af491b3d20c5e5781b9a6197f0adcd968209e07d"
    },
    {
      "path": "frontend/src/components/auth/ResetPasswordForm.tsx",
      "template": false,
      "content": "import React, { useState, useEffect } from 'react';\nimport { api, ApiError } from '../../lib/api';\nimport { Button } from '../ui/Button';\n\ninterface ResetPasswordFormProps {\n  token?: string;\n  onSuccess?: () =\u003e void;\n  onBack?: () =\u003e void;\n}\n\nexport const ResetPasswordForm: React.FC\u003cResetPasswordFormProps\u003e = ({\n  token,\n  onSuccess,\n  onBack,\n}) =\u003e {\n  const [formData, setFormData] = useState({\n    password: '',\n    confirm_password: '',\n  });\n  const [errors, setErrors] = useState\u003cRecord\u003cstring, string\u003e\u003e({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  useEffect(() =\u003e {\n    // If no token is provided, try to get it from URL params\n    if (!token) {\n      const urlParams = new URLSearchParams(window.location.search);\n      const urlToken = urlParams.get('token');\n      if (!urlToken) {\n        setErrors({ general: 'Invalid or missing reset token' });\n      }\n    }\n  }, [token]);\n\n  const handleChange = (e: React.ChangeEvent\u003cHTMLInputElement\u003e) =\u003e {\n    const { name, value } = e.target;\n    setFormData(prev =\u003e ({ ...prev, [name]: value }));\n    \n    // Clear errors when user types\n    if (errors[name]) {\n      setErrors(prev =\u003e ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const validateForm = (): boolean =\u003e {\n    const newErrors: Record\u003cstring, string\u003e = {};\n\n    // Password validation\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length \u003c 8) {\n      newErrors.password = 'Password must be at least 8 characters long';\n    }\n\n    // Confirm password validation\n    if (!formData.confirm_password) {\n      newErrors.confirm_password = 'Please confirm your password';\n    } else if (formData.password !== formData.confirm_password) {\n      newErrors.confirm_password = 'Passwords do not match';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) =\u003e {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    const resetToken = token || new URLSearchParams(window.location.search).get('token');\n    if (!resetToken) {\n      setErrors({ general: 'Invalid or missing reset token' });\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      await api.resetPassword({\n        token: resetToken,\n        password: formData.password,\n        confirm_password: formData.confirm_password,\n      });\n      setIsSuccess(true);\n      onSuccess?.();\n    } catch (error) {\n      if (error instanceof ApiError) {\n        if (error.details) {\n          setErrors(error.details);\n        } else {\n          setErrors({ general: error.message });\n        }\n      } else {\n        setErrors({ general: 'An unexpected error occurred' });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isSuccess) {\n    return (\n      \u003cdiv className=\"w-full max-w-md mx-auto\"\u003e\n        \u003cdiv className=\"bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\"\u003e\n          \u003cdiv className=\"text-center\"\u003e\n            \u003cdiv className=\"mb-4\"\u003e\n              \u003cdiv className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\"\u003e\n                \u003csvg\n                  className=\"h-6 w-6 text-green-600\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                \u003e\n                  \u003cpath\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M5 13l4 4L19 7\"\n                  /\u003e\n                \u003c/svg\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n            \n            \u003ch2 className=\"text-2xl font-bold text-gray-900 mb-2\"\u003ePassword Reset Successful\u003c/h2\u003e\n            \u003cp className=\"text-gray-600 mb-6\"\u003e\n              Your password has been successfully reset. You can now sign in with your new password.\n            \u003c/p\u003e\n            \n            \u003cButton\n              type=\"button\"\n              className=\"w-full\"\n              onClick={() =\u003e window.location.href = '/login'}\n            \u003e\n              Go to Sign In\n            \u003c/Button\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  return (\n    \u003cdiv className=\"w-full max-w-md mx-auto\"\u003e\n      \u003cdiv className=\"bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\"\u003e\n        \u003cdiv className=\"mb-6 text-center\"\u003e\n          \u003ch2 className=\"text-2xl font-bold text-gray-900\"\u003eSet New Password\u003c/h2\u003e\n          \u003cp className=\"text-gray-600 mt-2\"\u003e\n            Enter your new password below.\n          \u003c/p\u003e\n        \u003c/div\u003e\n\n        {errors.general \u0026\u0026 (\n          \u003cdiv className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\"\u003e\n            {errors.general}\n          \u003c/div\u003e\n        )}\n\n        \u003cform onSubmit={handleSubmit}\u003e\n          \u003cdiv className=\"mb-4\"\u003e\n            \u003clabel className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\"\u003e\n              New Password\n            \u003c/label\u003e\n            \u003cinput\n              className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                errors.password ? 'border-red-500' : 'border-gray-300'\n              }`}\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter your new password\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n            /\u003e\n            {errors.password \u0026\u0026 \u003cp className=\"text-red-500 text-xs italic mt-1\"\u003e{errors.password}\u003c/p\u003e}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"mb-6\"\u003e\n            \u003clabel className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"confirm_password\"\u003e\n              Confirm New Password\n            \u003c/label\u003e\n            \u003cinput\n              className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${\n                errors.confirm_password ? 'border-red-500' : 'border-gray-300'\n              }`}\n              id=\"confirm_password\"\n              name=\"confirm_password\"\n              type=\"password\"\n              placeholder=\"Confirm your new password\"\n              value={formData.confirm_password}\n              onChange={handleChange}\n              required\n            /\u003e\n            {errors.confirm_password \u0026\u0026 \u003cp className=\"text-red-500 text-xs italic mt-1\"\u003e{errors.confirm_password}\u003c/p\u003e}\n          \u003c/div\u003e\n\n          \u003cdiv className=\"flex flex-col space-y-3\"\u003e\n            \u003cButton\n              type=\"submit\"\n              className=\"w-full\"\n              disabled={isLoading}\n            \u003e\n              {isLoading ? (\n                \u003cdiv className=\"flex items-center justify-center\"\u003e\n                  \u003cdiv className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\u003e\u003c/div\u003e\n                  Resetting Password...\n                \u003c/div\u003e\n              ) : (\n                'Reset Password'\n              )}\n            \u003c/Button\u003e\n\n            {onBack \u0026\u0026 (\n              \u003cbutton\n                type=\"button\"\n                className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                onClick={onBack}\n              \u003e\n                Back to Sign In\n              \u003c/button\u003e\n            )}\n          \u003c/div\u003e\n        \u003c/form\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default ResetPasswordForm;",
      "size": 7423,
      "hash": "f78a883cc22b85af25126ca327ad04b79a1a2b8e0bfbc82b664c145b4f2a5c7c"
    },
    {
      "path": "frontend/src/components/auth/RoleGuard.tsx",
      "template": false,
      "content": "import React, { ReactNode } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useRBAC, UserRole, Permission, Resource, Action } from '../../contexts/RBACContext';\n\n// Base guard props\ninterface BaseGuardProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n  redirectTo?: string;\n  showError?: boolean;\n  errorMessage?: string;\n}\n\n// Role-based guard props\ninterface RoleGuardProps extends BaseGuardProps {\n  role?: UserRole;\n  roles?: UserRole[];\n  requireAll?: boolean;\n}\n\n// Permission-based guard props\ninterface PermissionGuardProps extends BaseGuardProps {\n  permission?: Permission;\n  permissions?: Permission[];\n  requireAll?: boolean;\n}\n\n// Resource access guard props\ninterface ResourceGuardProps extends BaseGuardProps {\n  resource: Resource;\n  action: Action;\n}\n\n// Admin guard props\ninterface AdminGuardProps extends BaseGuardProps {}\n\n// User management guard props\ninterface UserManagementGuardProps extends BaseGuardProps {\n  targetUserId?: number;\n}\n\n// Own resource guard props\ninterface OwnResourceGuardProps extends BaseGuardProps {\n  resourceOwnerId: number;\n}\n\n// Default error component\nconst DefaultError: React.FC\u003c{ message?: string }\u003e = ({ message }) =\u003e (\n  \u003cdiv className=\"bg-red-50 border border-red-200 rounded-lg p-4 text-center\"\u003e\n    \u003cdiv className=\"text-red-600 font-medium mb-2\"\u003eAccess Denied\u003c/div\u003e\n    \u003cdiv className=\"text-red-500 text-sm\"\u003e\n      {message || 'You don\\'t have permission to access this content.'}\n    \u003c/div\u003e\n  \u003c/div\u003e\n);\n\n// Default loading component\nconst DefaultLoading: React.FC = () =\u003e (\n  \u003cdiv className=\"flex items-center justify-center p-4\"\u003e\n    \u003cdiv className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"\u003e\u003c/div\u003e\n    \u003cspan className=\"ml-2 text-gray-600\"\u003eChecking permissions...\u003c/span\u003e\n  \u003c/div\u003e\n);\n\n// Base guard component\nconst BaseGuard: React.FC\u003c{\n  condition: boolean;\n  loading?: boolean;\n  fallback?: ReactNode;\n  redirectTo?: string;\n  showError?: boolean;\n  errorMessage?: string;\n  children: ReactNode;\n}\u003e = ({ \n  condition, \n  loading = false, \n  fallback, \n  redirectTo, \n  showError = true, \n  errorMessage,\n  children \n}) =\u003e {\n  const { isLoading } = useAuth();\n\n  // Show loading state\n  if (isLoading || loading) {\n    return \u003cDefaultLoading /\u003e;\n  }\n\n  // Handle redirect\n  if (!condition \u0026\u0026 redirectTo) {\n    window.location.href = redirectTo;\n    return \u003cDefaultLoading /\u003e;\n  }\n\n  // Show content if condition is met\n  if (condition) {\n    return \u003c\u003e{children}\u003c/\u003e;\n  }\n\n  // Show fallback or error\n  if (fallback) {\n    return \u003c\u003e{fallback}\u003c/\u003e;\n  }\n\n  if (showError) {\n    return \u003cDefaultError message={errorMessage} /\u003e;\n  }\n\n  return null;\n};\n\n// Role Guard - Protects content based on user roles\nexport const RoleGuard: React.FC\u003cRoleGuardProps\u003e = ({\n  role,\n  roles,\n  requireAll = false,\n  children,\n  ...baseProps\n}) =\u003e {\n  const { hasRole, hasAnyRole } = useRBAC();\n  const { isAuthenticated } = useAuth();\n\n  if (!isAuthenticated) {\n    return (\n      \u003cBaseGuard\n        condition={false}\n        errorMessage=\"Please log in to access this content.\"\n        {...baseProps}\n      \u003e\n        {children}\n      \u003c/BaseGuard\u003e\n    );\n  }\n\n  let condition = false;\n\n  if (role) {\n    condition = hasRole(role);\n  } else if (roles) {\n    if (requireAll) {\n      // Check if user has all specified roles (not practical with current role system)\n      condition = roles.every(r =\u003e hasRole(r));\n    } else {\n      // Check if user has any of the specified roles\n      condition = hasAnyRole(roles);\n    }\n  }\n\n  return (\n    \u003cBaseGuard condition={condition} {...baseProps}\u003e\n      {children}\n    \u003c/BaseGuard\u003e\n  );\n};\n\n// Permission Guard - Protects content based on permissions\nexport const PermissionGuard: React.FC\u003cPermissionGuardProps\u003e = ({\n  permission,\n  permissions,\n  requireAll = false,\n  children,\n  ...baseProps\n}) =\u003e {\n  const { hasPermission, hasAnyPermission, hasAllPermissions } = useRBAC();\n  const { isAuthenticated } = useAuth();\n\n  if (!isAuthenticated) {\n    return (\n      \u003cBaseGuard\n        condition={false}\n        errorMessage=\"Please log in to access this content.\"\n        {...baseProps}\n      \u003e\n        {children}\n      \u003c/BaseGuard\u003e\n    );\n  }\n\n  let condition = false;\n\n  if (permission) {\n    condition = hasPermission(permission);\n  } else if (permissions) {\n    if (requireAll) {\n      condition = hasAllPermissions(permissions);\n    } else {\n      condition = hasAnyPermission(permissions);\n    }\n  }\n\n  return (\n    \u003cBaseGuard condition={condition} {...baseProps}\u003e\n      {children}\n    \u003c/BaseGuard\u003e\n  );\n};\n\n// Resource Guard - Protects content based on resource access\nexport const ResourceGuard: React.FC\u003cResourceGuardProps\u003e = ({\n  resource,\n  action,\n  children,\n  ...baseProps\n}) =\u003e {\n  const { canAccessResource } = useRBAC();\n  const { isAuthenticated } = useAuth();\n\n  if (!isAuthenticated) {\n    return (\n      \u003cBaseGuard\n        condition={false}\n        errorMessage=\"Please log in to access this content.\"\n        {...baseProps}\n      \u003e\n        {children}\n      \u003c/BaseGuard\u003e\n    );\n  }\n\n  const condition = canAccessResource(resource, action);\n\n  return (\n    \u003cBaseGuard condition={condition} {...baseProps}\u003e\n      {children}\n    \u003c/BaseGuard\u003e\n  );\n};\n\n// Admin Guard - Protects admin-only content\nexport const AdminGuard: React.FC\u003cAdminGuardProps\u003e = ({\n  children,\n  ...baseProps\n}) =\u003e {\n  return (\n    \u003cRoleGuard\n      role=\"admin\"\n      errorMessage=\"Administrator access required.\"\n      {...baseProps}\n    \u003e\n      {children}\n    \u003c/RoleGuard\u003e\n  );\n};\n\n// User Management Guard - Protects user management content\nexport const UserManagementGuard: React.FC\u003cUserManagementGuardProps\u003e = ({\n  targetUserId,\n  children,\n  ...baseProps\n}) =\u003e {\n  const { canManageUser } = useRBAC();\n  const { isAuthenticated } = useAuth();\n\n  if (!isAuthenticated) {\n    return (\n      \u003cBaseGuard\n        condition={false}\n        errorMessage=\"Please log in to access this content.\"\n        {...baseProps}\n      \u003e\n        {children}\n      \u003c/BaseGuard\u003e\n    );\n  }\n\n  const condition = canManageUser(targetUserId);\n\n  return (\n    \u003cBaseGuard \n      condition={condition}\n      errorMessage=\"You don't have permission to manage users.\"\n      {...baseProps}\n    \u003e\n      {children}\n    \u003c/BaseGuard\u003e\n  );\n};\n\n// Own Resource Guard - Protects content that user owns or has permission to access\nexport const OwnResourceGuard: React.FC\u003cOwnResourceGuardProps\u003e = ({\n  resourceOwnerId,\n  children,\n  ...baseProps\n}) =\u003e {\n  const { canAccessOwnResource } = useRBAC();\n  const { isAuthenticated } = useAuth();\n\n  if (!isAuthenticated) {\n    return (\n      \u003cBaseGuard\n        condition={false}\n        errorMessage=\"Please log in to access this content.\"\n        {...baseProps}\n      \u003e\n        {children}\n      \u003c/BaseGuard\u003e\n    );\n  }\n\n  const condition = canAccessOwnResource(resourceOwnerId);\n\n  return (\n    \u003cBaseGuard \n      condition={condition}\n      errorMessage=\"You don't have permission to access this resource.\"\n      {...baseProps}\n    \u003e\n      {children}\n    \u003c/BaseGuard\u003e\n  );\n};\n\n// Conditional render based on permissions\ninterface ConditionalRenderProps {\n  condition: boolean;\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\nexport const ConditionalRender: React.FC\u003cConditionalRenderProps\u003e = ({\n  condition,\n  children,\n  fallback = null,\n}) =\u003e {\n  return condition ? \u003c\u003e{children}\u003c/\u003e : \u003c\u003e{fallback}\u003c/\u003e;\n};\n\n// Higher-order component for route protection\nexport const withRoleGuard = \u003cP extends object\u003e(\n  Component: React.ComponentType\u003cP\u003e,\n  guardProps: Omit\u003cRoleGuardProps, 'children'\u003e\n) =\u003e {\n  return (props: P) =\u003e (\n    \u003cRoleGuard {...guardProps}\u003e\n      \u003cComponent {...props} /\u003e\n    \u003c/RoleGuard\u003e\n  );\n};\n\nexport const withPermissionGuard = \u003cP extends object\u003e(\n  Component: React.ComponentType\u003cP\u003e,\n  guardProps: Omit\u003cPermissionGuardProps, 'children'\u003e\n) =\u003e {\n  return (props: P) =\u003e (\n    \u003cPermissionGuard {...guardProps}\u003e\n      \u003cComponent {...props} /\u003e\n    \u003c/PermissionGuard\u003e\n  );\n};\n\nexport const withAdminGuard = \u003cP extends object\u003e(\n  Component: React.ComponentType\u003cP\u003e,\n  guardProps?: Omit\u003cAdminGuardProps, 'children'\u003e\n) =\u003e {\n  return (props: P) =\u003e (\n    \u003cAdminGuard {...guardProps}\u003e\n      \u003cComponent {...props} /\u003e\n    \u003c/AdminGuard\u003e\n  );\n};\n\n// Navigation guard hook for programmatic route protection\nexport const useNavigationGuard = () =\u003e {\n  const { hasPermission, isAdmin } = useRBAC();\n  const { isAuthenticated } = useAuth();\n\n  const canNavigateTo = (route: string): boolean =\u003e {\n    if (!isAuthenticated) {\n      return false;\n    }\n\n    // Define route protection rules\n    const protectedRoutes: Record\u003cstring, () =\u003e boolean\u003e = {\n      '/admin': () =\u003e isAdmin(),\n      '/admin/*': () =\u003e isAdmin(),\n      '/profile/edit': () =\u003e isAuthenticated,\n      '/users': () =\u003e hasPermission('user:read'),\n      '/users/*': () =\u003e hasPermission('user:read'),\n    };\n\n    // Check if route is protected\n    for (const [pattern, checkFn] of Object.entries(protectedRoutes)) {\n      if (route.match(pattern.replace('*', '.*'))) {\n        return checkFn();\n      }\n    }\n\n    // Allow access to non-protected routes\n    return true;\n  };\n\n  const redirectIfUnauthorized = (route: string, fallbackRoute: string = '/') =\u003e {\n    if (!canNavigateTo(route)) {\n      window.location.href = fallbackRoute;\n      return false;\n    }\n    return true;\n  };\n\n  return {\n    canNavigateTo,\n    redirectIfUnauthorized,\n  };\n};\n\nexport default RoleGuard;",
      "size": 9372,
      "hash": "295735e94421d838139eec2b362681af631ea3734e0c1f5fb939e099bfb5460b"
    },
    {
      "path": "frontend/src/components/auth/index.ts",
      "template": false,
      "content": "export { default as LoginForm } from './LoginForm';\nexport { default as RegisterForm } from './RegisterForm';\nexport { default as ForgotPasswordForm } from './ForgotPasswordForm';\nexport { default as ResetPasswordForm } from './ResetPasswordForm';\nexport { default as EmailVerificationForm } from './EmailVerificationForm';\nexport { default as ProtectedRoute } from './ProtectedRoute';",
      "size": 385,
      "hash": "650ece66853f8e88be784c96bad590dcc47931ebaa83f0bec6caf7a106cfecd8"
    },
    {
      "path": "frontend/src/components/index.ts",
      "template": false,
      "content": "export * from './layout';\nexport * from './sections';\nexport * from './ui';\nexport * from './routing';",
      "size": 102,
      "hash": "a43c06c40b12022c1a4de9a06dfcd139ac3d37be4cc87e2fee8911ffa33cb84c"
    },
    {
      "path": "frontend/src/components/layout/Footer.tsx",
      "template": false,
      "content": "import { Container } from '@/components/ui';\n\nexport default function Footer() {\n  return (\n    \u003cfooter className=\"bg-gray-800 text-white\"\u003e\n      \u003cContainer\u003e\n        \u003cdiv className=\"py-8\"\u003e\n          \u003cdiv className=\"text-center\"\u003e\n            \u003cp className=\"text-gray-400\"\u003e\n              © 2025 Fullstack Template. Built with React and Go.\n            \u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/Container\u003e\n    \u003c/footer\u003e\n  );\n}",
      "size": 426,
      "hash": "80e9e819d155184640a97895ef881f9ea692c50ca7e742c6f33ff1117843d0de"
    },
    {
      "path": "frontend/src/components/layout/Header.tsx",
      "template": false,
      "content": "import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Container, Button } from '@/components/ui';\nimport { Github, Settings, LogOut, Shield, Bell } from 'lucide-react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useRBAC } from '../../contexts/RBACContext';\n\nexport default function Header() {\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const { isAuthenticated, isLoading, user, logout } = useAuth();\n  const { isAdmin } = useRBAC();\n  const navigate = useNavigate();\n\n  const handleLogout = async () =\u003e {\n    try {\n      await logout();\n      navigate('/');\n      setIsUserMenuOpen(false);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  const handleGetStarted = () =\u003e {\n    if (isAuthenticated) {\n      navigate('/dashboard');\n    } else {\n      navigate('/login');\n    }\n  };\n\n  // Show loading skeleton while authentication is being checked\n  const AuthSection = () =\u003e {\n    if (isLoading) {\n      return (\n        \u003cdiv className=\"flex items-center space-x-3\"\u003e\n          \u003cdiv className=\"w-8 h-8 bg-secondary-200 rounded-full animate-pulse\"\u003e\u003c/div\u003e\n        \u003c/div\u003e\n      );\n    }\n\n    if (isAuthenticated \u0026\u0026 user) {\n      return (\n        \u003cdiv className=\"flex items-center space-x-3\"\u003e\n          {/* Notifications */}\n          \u003cbutton className=\"p-2 text-secondary-500 hover:text-secondary-700 hover:bg-secondary-100 rounded-lg\"\u003e\n            \u003cBell className=\"w-5 h-5\" /\u003e\n          \u003c/button\u003e\n\n          {/* User Menu */}\n          \u003cdiv className=\"relative\"\u003e\n            \u003cbutton\n              onClick={() =\u003e setIsUserMenuOpen(!isUserMenuOpen)}\n              className=\"flex items-center space-x-2 p-1 rounded-lg hover:bg-secondary-100\"\n            \u003e\n              \u003cdiv className=\"w-8 h-8 bg-gradient-to-r from-primary-600 to-accent-600 rounded-full flex items-center justify-center\"\u003e\n                \u003cspan className=\"text-white font-semibold text-sm\"\u003e\n                  {user.first_name?.charAt(0)?.toUpperCase() || 'U'}\n                \u003c/span\u003e\n              \u003c/div\u003e\n            \u003c/button\u003e\n\n            {/* User Menu Dropdown */}\n            {isUserMenuOpen \u0026\u0026 (\n              \u003cdiv className=\"absolute right-0 mt-2 w-56 bg-white rounded-lg shadow-lg border border-secondary-200 py-1 z-50\"\u003e\n                \u003cdiv className=\"px-4 py-3 border-b border-secondary-200\"\u003e\n                  \u003cdiv className=\"text-sm font-medium text-secondary-900\"\u003e\n                    {user.first_name} {user.last_name}\n                  \u003c/div\u003e\n                  \u003cdiv className=\"text-xs text-secondary-500\"\u003e\n                    {user.email}\n                  \u003c/div\u003e\n                \u003c/div\u003e\n                \n                \u003cLink\n                  to=\"/settings\"\n                  className=\"flex items-center px-4 py-2 text-sm text-secondary-700 hover:bg-secondary-50\"\n                  onClick={() =\u003e setIsUserMenuOpen(false)}\n                \u003e\n                  \u003cSettings className=\"w-4 h-4 mr-3\" /\u003e\n                  Settings\n                \u003c/Link\u003e\n                \n                {isAdmin() \u0026\u0026 (\n                  \u003cLink\n                    to=\"/admin\"\n                    className=\"flex items-center px-4 py-2 text-sm text-secondary-700 hover:bg-secondary-50\"\n                    onClick={() =\u003e setIsUserMenuOpen(false)}\n                  \u003e\n                    \u003cShield className=\"w-4 h-4 mr-3\" /\u003e\n                    Admin Panel\n                  \u003c/Link\u003e\n                )}\n                \n                \u003cdiv className=\"border-t border-secondary-200 my-1\"\u003e\u003c/div\u003e\n                \u003cbutton\n                  onClick={handleLogout}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-red-50\"\n                \u003e\n                  \u003cLogOut className=\"w-4 h-4 mr-3\" /\u003e\n                  Sign out\n                \u003c/button\u003e\n              \u003c/div\u003e\n            )}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      );\n    }\n\n    return (\n      \u003cdiv className=\"flex items-center space-x-4\"\u003e\n        \u003cButton variant=\"ghost\" size=\"sm\" icon={Github}\u003e\n          \u003ca href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"flex items-center\"\u003e\n            GitHub\n          \u003c/a\u003e\n        \u003c/Button\u003e\n        \u003cButton size=\"sm\" onClick={handleGetStarted}\u003e\n          Get Started\n        \u003c/Button\u003e\n      \u003c/div\u003e\n    );\n  };\n\n  return (\n    \u003cheader className=\"bg-white border-b border-secondary-200 sticky top-0 z-50\"\u003e\n      \u003cContainer\u003e\n        \u003cdiv className=\"flex items-center justify-between h-16\"\u003e\n          {/* Logo */}\n          \u003cLink \n            to={isAuthenticated ? \"/dashboard\" : \"/\"} \n            className=\"flex items-center gap-3 hover:opacity-80\"\n          \u003e\n            \u003cdiv className=\"w-8 h-8 bg-gradient-to-r from-primary-600 to-accent-600 rounded-lg flex items-center justify-center\"\u003e\n              \u003cspan className=\"text-white font-bold text-sm\"\u003eFT\u003c/span\u003e\n            \u003c/div\u003e\n            \u003ch1 className=\"text-xl font-bold text-secondary-900\"\u003e\n              Fullstack Template\n            \u003c/h1\u003e\n          \u003c/Link\u003e\n          \n          {/* Right Side - Auth Section */}\n          \u003cAuthSection /\u003e\n        \u003c/div\u003e\n      \u003c/Container\u003e\n      \n      {/* Backdrop for user menu */}\n      {isUserMenuOpen \u0026\u0026 (\n        \u003cdiv \n          className=\"fixed inset-0 z-40\"\n          onClick={() =\u003e setIsUserMenuOpen(false)}\n        /\u003e\n      )}\n    \u003c/header\u003e\n  );\n}",
      "size": 5378,
      "hash": "0bf1cccb90d1ea06c4ce4ed21a26cfb8cee231ca6bc12afa7b66987474712ade"
    },
    {
      "path": "frontend/src/components/layout/Sidebar.tsx",
      "template": false,
      "content": "import { Link, useLocation } from 'react-router-dom';\nimport { Home, Settings, Shield } from 'lucide-react';\nimport { useRBAC } from '../../contexts/RBACContext';\n\ninterface SidebarItemProps {\n  to: string;\n  icon: React.ElementType;\n  label: string;\n  isActive?: boolean;\n}\n\nconst SidebarItem: React.FC\u003cSidebarItemProps\u003e = ({ to, icon: Icon, label, isActive }) =\u003e (\n  \u003cLink\n    to={to}\n    className={`flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors ${\n      isActive \n        ? 'bg-primary-100 text-primary-700' \n        : 'text-secondary-600 hover:text-secondary-900 hover:bg-secondary-100'\n    }`}\n  \u003e\n    \u003cIcon className=\"w-5 h-5 mr-3\" /\u003e\n    {label}\n  \u003c/Link\u003e\n);\n\ninterface SidebarProps {\n  className?: string;\n}\n\nexport default function Sidebar({ className = '' }: SidebarProps) {\n  const location = useLocation();\n  const { isAdmin } = useRBAC();\n\n  const isActive = (path: string) =\u003e location.pathname === path;\n\n  return (\n    \u003cdiv className={`bg-white border-r border-secondary-200 ${className}`}\u003e\n      \u003cnav className=\"p-4 space-y-1\"\u003e\n        {/* Main Navigation */}\n        \u003cSidebarItem\n          to=\"/dashboard\"\n          icon={Home}\n          label=\"Dashboard\"\n          isActive={isActive('/dashboard')}\n        /\u003e\n        \n        \u003cSidebarItem\n          to=\"/settings\"\n          icon={Settings}\n          label=\"Settings\"\n          isActive={isActive('/settings')}\n        /\u003e\n\n        {/* Admin Section - At Bottom */}\n        {isAdmin() \u0026\u0026 (\n          \u003cdiv className=\"pt-4 mt-4 border-t border-secondary-200\"\u003e\n            \u003cSidebarItem\n              to=\"/admin\"\n              icon={Shield}\n              label=\"Admin\"\n              isActive={isActive('/admin')}\n            /\u003e\n          \u003c/div\u003e\n        )}\n      \u003c/nav\u003e\n    \u003c/div\u003e\n  );\n}",
      "size": 1781,
      "hash": "cdd24b920d82d0b9a0514d337a0aaa928fdf3854776986e8f171ffda11a725df"
    },
    {
      "path": "frontend/src/components/layout/index.ts",
      "template": false,
      "content": "export { default as Header } from './Header';\nexport { default as Footer } from './Footer';\nexport { default as Sidebar } from './Sidebar';",
      "size": 139,
      "hash": "743766ca3045bf1988c9fd798ce98999700a8ca06516f5f72f71a575aabc6b19"
    },
    {
      "path": "frontend/src/components/routing/AdminRoute.tsx",
      "template": false,
      "content": "import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useRBAC } from '../../contexts/RBACContext';\nimport { LoadingSpinner } from '../ui/LoadingSpinner';\nimport { UnauthorizedError } from '../ui/UnauthorizedError';\n\ninterface AdminRouteProps {\n  children: React.ReactNode;\n  fallbackPath?: string;\n  showErrorPage?: boolean;\n}\n\n/**\n * AdminRoute component that ensures user has admin role before rendering children\n * Redirects to login if not authenticated\n * Shows unauthorized error or redirects if user doesn't have admin role\n */\nexport const AdminRoute: React.FC\u003cAdminRouteProps\u003e = ({ \n  children, \n  fallbackPath = '/dashboard',\n  showErrorPage = true\n}) =\u003e {\n  const { isAuthenticated, isLoading } = useAuth();\n  const { isAdmin } = useRBAC();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (isLoading) {\n    return (\n      \u003cdiv className=\"min-h-screen flex items-center justify-center bg-secondary-50\"\u003e\n        \u003cLoadingSpinner size=\"lg\" /\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  // Redirect to login if not authenticated, preserving the intended location\n  if (!isAuthenticated) {\n    return (\n      \u003cNavigate \n        to=\"/login\" \n        state={{ returnTo: location.pathname + location.search }} \n        replace \n      /\u003e\n    );\n  }\n\n  // Check if user has admin role\n  if (!isAdmin()) {\n    if (showErrorPage) {\n      return (\n        \u003cUnauthorizedError\n          title=\"Admin Access Required\"\n          message=\"You need administrator privileges to access this page.\"\n          actionText=\"Go to Dashboard\"\n          actionPath={fallbackPath}\n        /\u003e\n      );\n    } else {\n      return \u003cNavigate to={fallbackPath} replace /\u003e;\n    }\n  }\n\n  // User is authenticated and has admin role, render children\n  return \u003c\u003e{children}\u003c/\u003e;\n};\n\nexport default AdminRoute;",
      "size": 1904,
      "hash": "7f516a0d9ac5e4f5361e12f771a5f2a29b9d80e280cc1a7ee5abe1b21f0b0d19"
    },
    {
      "path": "frontend/src/components/routing/ProtectedRoute.tsx",
      "template": false,
      "content": "import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { LoadingSpinner } from '../ui/LoadingSpinner';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  requireEmailVerification?: boolean;\n}\n\n/**\n * ProtectedRoute component that ensures user is authenticated before rendering children\n * Redirects to login with return path if not authenticated\n * Shows loading spinner while authentication status is being checked\n */\nexport const ProtectedRoute: React.FC\u003cProtectedRouteProps\u003e = ({ \n  children, \n  requireEmailVerification = false \n}) =\u003e {\n  const { isAuthenticated, isLoading, isEmailVerified } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (isLoading) {\n    return (\n      \u003cdiv className=\"min-h-screen flex items-center justify-center bg-secondary-50\"\u003e\n        \u003cLoadingSpinner size=\"lg\" /\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  // Redirect to login if not authenticated, preserving the intended location\n  if (!isAuthenticated) {\n    return (\n      \u003cNavigate \n        to=\"/login\" \n        state={{ returnTo: location.pathname + location.search }} \n        replace \n      /\u003e\n    );\n  }\n\n  // Redirect to email verification if required and not verified\n  if (requireEmailVerification \u0026\u0026 !isEmailVerified) {\n    return (\n      \u003cNavigate \n        to=\"/verify-email\" \n        state={{ returnTo: location.pathname + location.search }} \n        replace \n      /\u003e\n    );\n  }\n\n  // User is authenticated and verified (if required), render children\n  return \u003c\u003e{children}\u003c/\u003e;\n};\n\nexport default ProtectedRoute;",
      "size": 1659,
      "hash": "797c996bf3bb0e387495a592e3ea8f9ef56b1376a94357b6cca77030db4c99ef"
    },
    {
      "path": "frontend/src/components/routing/PublicRoute.tsx",
      "template": false,
      "content": "import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { LoadingSpinner } from '../ui/LoadingSpinner';\n\ninterface PublicRouteProps {\n  children: React.ReactNode;\n  redirectPath?: string;\n}\n\n/**\n * PublicRoute component for routes that should only be accessible to unauthenticated users\n * Redirects authenticated users to dashboard or specified path\n * Used for login, register, forgot-password pages\n */\nexport const PublicRoute: React.FC\u003cPublicRouteProps\u003e = ({ \n  children, \n  redirectPath = '/dashboard' \n}) =\u003e {\n  const { isAuthenticated, isLoading } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (isLoading) {\n    return (\n      \u003cdiv className=\"min-h-screen flex items-center justify-center bg-secondary-50\"\u003e\n        \u003cLoadingSpinner size=\"lg\" /\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  // If user is authenticated, redirect to intended destination or dashboard\n  if (isAuthenticated) {\n    // Check if there's a return path from login flow\n    const returnTo = location.state?.returnTo || redirectPath;\n    return \u003cNavigate to={returnTo} replace /\u003e;\n  }\n\n  // User is not authenticated, render the public route\n  return \u003c\u003e{children}\u003c/\u003e;\n};\n\nexport default PublicRoute;",
      "size": 1314,
      "hash": "aa96edfbfbf63f83ac8f557f7a0ae8cb943cc6a48bc756d3d1e9475973508a75"
    },
    {
      "path": "frontend/src/components/routing/index.ts",
      "template": false,
      "content": "export { default as ProtectedRoute } from './ProtectedRoute';\nexport { default as PublicRoute } from './PublicRoute';\nexport { default as AdminRoute } from './AdminRoute';\n\n// Re-export types for convenience\nexport type { default as ProtectedRouteProps } from './ProtectedRoute';\nexport type { default as PublicRouteProps } from './PublicRoute';\nexport type { default as AdminRouteProps } from './AdminRoute';",
      "size": 409,
      "hash": "a58f541eb0448640e3b17f385f6a256cb5eea3d5eddcf44128e77ce2aef31670"
    },
    {
      "path": "frontend/src/components/sections/CTA.tsx",
      "template": false,
      "content": "import { Container, Button } from '@/components/ui';\nimport { ArrowRight, Download, Github } from 'lucide-react';\n\nexport default function CTA() {\n  return (\n    \u003csection className=\"py-24 bg-gradient-to-r from-secondary-900 via-secondary-800 to-secondary-900 text-white relative overflow-hidden\"\u003e\n      {/* Background decoration */}\n      \u003cdiv className=\"absolute inset-0 bg-gradient-to-r from-primary-600/20 to-accent-600/20\"\u003e\u003c/div\u003e\n      \u003cdiv className=\"absolute top-0 left-0 w-72 h-72 bg-primary-500 rounded-full blur-3xl opacity-10 -translate-x-36 -translate-y-36\"\u003e\u003c/div\u003e\n      \u003cdiv className=\"absolute bottom-0 right-0 w-72 h-72 bg-accent-500 rounded-full blur-3xl opacity-10 translate-x-36 translate-y-36\"\u003e\u003c/div\u003e\n      \n      \u003cContainer\u003e\n        \u003cdiv className=\"relative text-center\"\u003e\n          \u003cdiv className=\"inline-flex items-center gap-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full px-4 py-2 mb-8\"\u003e\n            \u003cspan className=\"w-2 h-2 bg-success-400 rounded-full animate-pulse\"\u003e\u003c/span\u003e\n            \u003cspan className=\"text-sm font-medium text-white/90\"\u003eTemplate Ready\u003c/span\u003e\n          \u003c/div\u003e\n          \n          \u003ch2 className=\"text-4xl md:text-5xl font-bold mb-6 leading-tight\"\u003e\n            Ready to build something\n            \u003cbr /\u003e\n            \u003cspan className=\"bg-gradient-to-r from-primary-400 to-accent-400 bg-clip-text text-transparent\"\u003e\n              extraordinary?\n            \u003c/span\u003e\n          \u003c/h2\u003e\n          \n          \u003cp className=\"text-xl mb-12 max-w-3xl mx-auto text-white/80 leading-relaxed\"\u003e\n            Get your fullstack application up and running in minutes. No complex setup, \n            no configuration headaches—just pure development productivity.\n          \u003c/p\u003e\n          \n          \u003cdiv className=\"flex flex-col sm:flex-row gap-6 justify-center items-center mb-16\"\u003e\n            \u003cButton \n              size=\"xl\" \n              variant=\"secondary\"\n              icon={ArrowRight}\n              iconPosition=\"right\"\n              className=\"shadow-xl hover:shadow-2xl transform hover:-translate-y-0.5 transition-all\"\n            \u003e\n              Get Started Now\n            \u003c/Button\u003e\n            \n            \u003cButton \n              size=\"xl\" \n              variant=\"ghost\"\n              icon={Github}\n              className=\"backdrop-blur-sm bg-white/5 hover:bg-white/10 border border-white/20 text-white shadow-lg\"\n            \u003e\n              Clone Repository\n            \u003c/Button\u003e\n            \n            \u003cButton \n              size=\"xl\" \n              variant=\"ghost\"\n              icon={Download}\n              className=\"backdrop-blur-sm bg-white/5 hover:bg-white/10 border border-white/20 text-white shadow-lg\"\n            \u003e\n              Download ZIP\n            \u003c/Button\u003e\n          \u003c/div\u003e\n          \n          {/* Quick stats */}\n          \u003cdiv className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto\"\u003e\n            \u003cdiv className=\"text-center\"\u003e\n              \u003cdiv className=\"text-3xl font-bold text-primary-400 mb-2\"\u003e5 min\u003c/div\u003e\n              \u003cdiv className=\"text-white/70\"\u003eSetup Time\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"text-center\"\u003e\n              \u003cdiv className=\"text-3xl font-bold text-accent-400 mb-2\"\u003eProduction\u003c/div\u003e\n              \u003cdiv className=\"text-white/70\"\u003eReady Code\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv className=\"text-center\"\u003e\n              \u003cdiv className=\"text-3xl font-bold text-success-400 mb-2\"\u003eBest\u003c/div\u003e\n              \u003cdiv className=\"text-white/70\"\u003ePractices\u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/Container\u003e\n    \u003c/section\u003e\n  );\n}",
      "size": 3573,
      "hash": "1603012b96e9d5ecf17cf48d1d9b66ea5d334c05fae40204895781a9cc46771e"
    },
    {
      "path": "frontend/src/components/sections/Features.tsx",
      "template": false,
      "content": "import { Container } from '@/components/ui';\nimport { Code2, Server, Rocket, Database, Shield, Zap } from 'lucide-react';\n\nconst features = [\n  {\n    title: 'React Frontend',\n    description: 'Modern React 18 with TypeScript, Tailwind CSS, and Vite for lightning-fast development and builds.',\n    icon: Code2,\n    color: 'from-blue-500 to-cyan-500',\n  },\n  {\n    title: 'Go API Backend',\n    description: 'Robust Go API with Gin framework, clean architecture, and production-grade patterns.',\n    icon: Server,\n    color: 'from-emerald-500 to-teal-500',\n  },\n  {\n    title: 'Production Ready',\n    description: 'Docker support, PostgreSQL integration, health checks, and structured logging out of the box.',\n    icon: Rocket,\n    color: 'from-purple-500 to-pink-500',\n  },\n  {\n    title: 'Database Integration',\n    description: 'PostgreSQL with GORM, connection pooling, and migration support for scalable data management.',\n    icon: Database,\n    color: 'from-orange-500 to-red-500',\n  },\n  {\n    title: 'Security First',\n    description: 'JWT authentication, CORS middleware, and security best practices built into the foundation.',\n    icon: Shield,\n    color: 'from-indigo-500 to-purple-500',\n  },\n  {\n    title: 'Developer Experience',\n    description: 'Hot reload, TypeScript support, linting, and comprehensive tooling for productive development.',\n    icon: Zap,\n    color: 'from-yellow-500 to-orange-500',\n  },\n];\n\nexport default function Features() {\n  return (\n    \u003csection id=\"features\" className=\"py-24 bg-gradient-to-b from-secondary-50 to-white\"\u003e\n      \u003cContainer\u003e\n        \u003cdiv className=\"text-center mb-20\"\u003e\n          \u003cdiv className=\"inline-flex items-center gap-2 bg-primary-100 text-primary-700 rounded-full px-4 py-2 mb-6\"\u003e\n            \u003cZap className=\"h-4 w-4\" /\u003e\n            \u003cspan className=\"text-sm font-medium\"\u003ePowerful Features\u003c/span\u003e\n          \u003c/div\u003e\n          \u003ch2 className=\"text-4xl md:text-5xl font-bold text-secondary-900 mb-6\"\u003e\n            Everything you need to build\n            \u003cbr /\u003e\n            \u003cspan className=\"bg-gradient-to-r from-primary-600 to-accent-600 bg-clip-text text-transparent\"\u003e\n              amazing applications\n            \u003c/span\u003e\n          \u003c/h2\u003e\n          \u003cp className=\"text-xl text-secondary-600 max-w-3xl mx-auto leading-relaxed\"\u003e\n            A comprehensive fullstack template with modern tools, best practices, \n            and production-ready features to accelerate your development.\n          \u003c/p\u003e\n        \u003c/div\u003e\n        \n        \u003cdiv className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\u003e\n          {features.map((feature, index) =\u003e (\n            \u003cdiv key={index} className=\"group relative\"\u003e\n              \u003cdiv className=\"bg-white rounded-2xl p-8 shadow-soft hover:shadow-medium transition-all duration-300 border border-secondary-100 hover:border-secondary-200 h-full\"\u003e\n                {/* Icon with gradient background */}\n                \u003cdiv className={`inline-flex items-center justify-center w-12 h-12 rounded-xl bg-gradient-to-r ${feature.color} mb-6 group-hover:scale-110 transition-transform duration-300`}\u003e\n                  \u003cfeature.icon className=\"h-6 w-6 text-white\" /\u003e\n                \u003c/div\u003e\n                \n                {/* Content */}\n                \u003ch3 className=\"text-xl font-bold text-secondary-900 mb-4 group-hover:text-primary-600 transition-colors\"\u003e\n                  {feature.title}\n                \u003c/h3\u003e\n                \u003cp className=\"text-secondary-600 leading-relaxed\"\u003e\n                  {feature.description}\n                \u003c/p\u003e\n                \n                {/* Hover effect border */}\n                \u003cdiv className=\"absolute inset-0 rounded-2xl border-2 border-transparent group-hover:border-primary-200 transition-colors duration-300 pointer-events-none\" /\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          ))}\n        \u003c/div\u003e\n        \n        {/* Bottom section */}\n        \u003cdiv className=\"text-center mt-20\"\u003e\n          \u003cdiv className=\"bg-gradient-to-r from-primary-600 to-accent-600 rounded-2xl p-8 md:p-12 text-white\"\u003e\n            \u003ch3 className=\"text-2xl md:text-3xl font-bold mb-4\"\u003e\n              Ready to start building?\n            \u003c/h3\u003e\n            \u003cp className=\"text-xl mb-8 text-white/90 max-w-2xl mx-auto\"\u003e\n              Get up and running in minutes with our comprehensive template\n            \u003c/p\u003e\n            \u003cdiv className=\"flex flex-col sm:flex-row gap-4 justify-center\"\u003e\n              \u003cbutton className=\"bg-white text-primary-600 hover:bg-secondary-50 px-8 py-3 rounded-lg font-semibold transition-colors shadow-lg\"\u003e\n                Quick Start Guide\n              \u003c/button\u003e\n              \u003cbutton className=\"border-2 border-white/30 hover:bg-white/10 px-8 py-3 rounded-lg font-semibold transition-colors backdrop-blur-sm\"\u003e\n                Documentation\n              \u003c/button\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/Container\u003e\n    \u003c/section\u003e\n  );\n}",
      "size": 4884,
      "hash": "7a1cccba15e692bffa393c2540545bfbe258c466b062c0908cef406574c19316"
    },
    {
      "path": "frontend/src/components/sections/Hero.tsx",
      "template": false,
      "content": "import { Container, Button } from '@/components/ui';\nimport { ArrowRight, Github, Zap } from 'lucide-react';\n\nexport default function Hero() {\n  return (\n    \u003csection className=\"relative bg-gradient-to-br from-primary-600 via-primary-700 to-accent-600 text-white overflow-hidden\"\u003e\n      {/* Background decorations */}\n      \u003cdiv className=\"absolute inset-0 opacity-40\" style={{\n        backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Ccircle cx='30' cy='30' r='1'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`\n      }}\u003e\u003c/div\u003e\n      \u003cdiv className=\"absolute top-0 right-0 w-96 h-96 bg-accent-500 rounded-full blur-3xl opacity-20 -translate-y-32 translate-x-32\"\u003e\u003c/div\u003e\n      \u003cdiv className=\"absolute bottom-0 left-0 w-96 h-96 bg-primary-400 rounded-full blur-3xl opacity-20 translate-y-32 -translate-x-32\"\u003e\u003c/div\u003e\n      \n      \u003cContainer\u003e\n        \u003cdiv className=\"relative py-24 lg:py-32 text-center animate-fade-in-up\"\u003e\n          {/* Badge */}\n          \u003cdiv className=\"inline-flex items-center gap-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full px-4 py-2.5 mb-8 hover:bg-white/15 transition-all duration-300 animate-bounce-gentle\"\u003e\n            \u003cZap className=\"h-4 w-4 text-accent-300 animate-pulse\" /\u003e\n            \u003cspan className=\"text-sm font-medium text-white/95\"\u003eModern Fullstack Template\u003c/span\u003e\n          \u003c/div\u003e\n          \n          {/* Main headline */}\n          \u003ch1 className=\"text-4xl md:text-6xl lg:text-7xl font-bold mb-6 bg-gradient-to-r from-white to-white/80 bg-clip-text text-transparent leading-tight\"\u003e\n            Build Amazing Apps\n            \u003cbr /\u003e\n            \u003cspan className=\"bg-gradient-to-r from-accent-300 to-accent-100 bg-clip-text text-transparent\"\u003e\n              Lightning Fast\n            \u003c/span\u003e\n          \u003c/h1\u003e\n          \n          {/* Subtitle */}\n          \u003cp className=\"text-xl md:text-2xl mb-12 max-w-4xl mx-auto text-white/90 leading-relaxed\"\u003e\n            A production-ready fullstack template with React frontend and Go backend.\n            \u003cbr className=\"hidden md:block\" /\u003e\n            Get started in minutes with modern best practices built-in.\n          \u003c/p\u003e\n          \n          {/* CTA Buttons */}\n          \u003cdiv className=\"flex flex-col sm:flex-row gap-4 justify-center items-center mb-16\"\u003e\n            \u003cButton \n              size=\"xl\" \n              variant=\"secondary\"\n              icon={ArrowRight}\n              iconPosition=\"right\"\n              className=\"shadow-xl hover:shadow-2xl transform hover:-translate-y-1 hover:scale-105 transition-all duration-300 animate-bounce-gentle\"\n            \u003e\n              Get Started\n            \u003c/Button\u003e\n            \u003cButton \n              size=\"xl\" \n              variant=\"ghost\"\n              icon={Github}\n              className=\"backdrop-blur-sm bg-white/10 hover:bg-white/20 border border-white/30 text-white shadow-lg hover:shadow-xl transform hover:-translate-y-1 hover:scale-105 transition-all duration-300\"\n            \u003e\n              View on GitHub\n            \u003c/Button\u003e\n          \u003c/div\u003e\n          \n          {/* Feature highlights */}\n          \u003cdiv className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto\"\u003e\n            {[\n              { label: 'React 18 + TypeScript', value: 'Modern Frontend' },\n              { label: 'Go + Gin Framework', value: 'Robust Backend' },\n              { label: 'Docker + PostgreSQL', value: 'Production Ready' },\n            ].map((item, index) =\u003e (\n              \u003cdiv \n                key={index} \n                className=\"bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20 hover:bg-white/15 hover:border-white/30 transform hover:-translate-y-1 hover:scale-105 transition-all duration-300 shadow-soft hover:shadow-medium\"\n                style={{ animationDelay: `${index * 0.1}s` }}\n              \u003e\n                \u003cdiv className=\"text-sm text-white/80 mb-2 font-medium\"\u003e{item.label}\u003c/div\u003e\n                \u003cdiv className=\"font-bold text-white text-lg\"\u003e{item.value}\u003c/div\u003e\n              \u003c/div\u003e\n            ))}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/Container\u003e\n    \u003c/section\u003e\n  );\n}",
      "size": 4215,
      "hash": "b6eae94f56ed33bcdeaed02dd874b7eed4d2c65a7eb81b8c688335f23b06a31c"
    },
    {
      "path": "frontend/src/components/sections/index.ts",
      "template": false,
      "content": "export { default as Hero } from './Hero';\nexport { default as Features } from './Features';\nexport { default as CTA } from './CTA';",
      "size": 131,
      "hash": "a037f13c573fb9d17a57f0955ec75af5479b8fed5a81c16f25cc3442262b34b5"
    },
    {
      "path": "frontend/src/components/ui/Button.tsx",
      "template": false,
      "content": "import { ButtonHTMLAttributes, forwardRef } from 'react';\nimport { cn } from '@/utils/cn';\nimport { LucideIcon } from 'lucide-react';\n\ninterface ButtonProps extends ButtonHTMLAttributes\u003cHTMLButtonElement\u003e {\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'destructive' | 'success' | 'warning' | 'gradient';\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  icon?: LucideIcon;\n  iconPosition?: 'left' | 'right';\n  loading?: boolean;\n  loadingText?: string;\n  fullWidth?: boolean;\n}\n\nconst variants = {\n  primary: 'bg-primary-600 text-white hover:bg-primary-700 active:bg-primary-800 focus:ring-primary-500 shadow-sm hover:shadow-md active:shadow-sm transform hover:-translate-y-0.5 active:translate-y-0 transition-all duration-200',\n  secondary: 'bg-secondary-100 text-secondary-900 hover:bg-secondary-200 active:bg-secondary-300 focus:ring-secondary-500 shadow-xs hover:shadow-sm transform hover:-translate-y-0.5 active:translate-y-0 transition-all duration-200',\n  outline: 'border-2 border-primary-600 text-primary-600 hover:bg-primary-50 active:bg-primary-100 focus:ring-primary-500 hover:border-primary-700 transform hover:-translate-y-0.5 active:translate-y-0 transition-all duration-200',\n  ghost: 'text-secondary-700 hover:bg-secondary-100 active:bg-secondary-200 focus:ring-secondary-500 hover:text-secondary-900 transform hover:-translate-y-0.5 active:translate-y-0 transition-all duration-200',\n  destructive: 'bg-error-600 text-white hover:bg-error-700 active:bg-error-800 focus:ring-error-500 shadow-sm hover:shadow-md active:shadow-sm transform hover:-translate-y-0.5 active:translate-y-0 transition-all duration-200',\n  success: 'bg-success-600 text-white hover:bg-success-700 active:bg-success-800 focus:ring-success-500 shadow-sm hover:shadow-md active:shadow-sm transform hover:-translate-y-0.5 active:translate-y-0 transition-all duration-200',\n  warning: 'bg-warning-600 text-white hover:bg-warning-700 active:bg-warning-800 focus:ring-warning-500 shadow-sm hover:shadow-md active:shadow-sm transform hover:-translate-y-0.5 active:translate-y-0 transition-all duration-200',\n  gradient: 'bg-gradient-to-r from-primary-600 to-accent-600 text-white hover:from-primary-700 hover:to-accent-700 active:from-primary-800 active:to-accent-800 focus:ring-primary-500 shadow-md hover:shadow-lg active:shadow-md transform hover:-translate-y-0.5 active:translate-y-0 transition-all duration-200',\n};\n\nconst sizes = {\n  xs: 'px-2.5 py-1.5 text-xs gap-1 min-h-[2rem]',\n  sm: 'px-3 py-2 text-sm gap-1.5 min-h-[2.25rem]',\n  md: 'px-4 py-2.5 text-base gap-2 min-h-[2.75rem]',\n  lg: 'px-6 py-3 text-lg gap-2 min-h-[3rem]',\n  xl: 'px-8 py-4 text-xl gap-3 min-h-[3.5rem]',\n};\n\nconst Button = forwardRef\u003cHTMLButtonElement, ButtonProps\u003e(({\n  variant = 'primary',\n  size = 'md',\n  icon: Icon,\n  iconPosition = 'left',\n  loading = false,\n  loadingText,\n  fullWidth = false,\n  className,\n  children,\n  disabled,\n  ...props\n}, ref) =\u003e {\n  const isDisabled = disabled || loading;\n\n  return (\n    \u003cbutton\n      ref={ref}\n      className={cn(\n        'inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200',\n        'focus:outline-none focus:ring-2 focus:ring-offset-2',\n        'disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none disabled:hover:translate-y-0',\n        'active:scale-[0.98]',\n        variants[variant],\n        sizes[size],\n        fullWidth \u0026\u0026 'w-full',\n        className\n      )}\n      disabled={isDisabled}\n      aria-label={loading ? `Loading... ${loadingText || ''}` : undefined}\n      {...props}\n    \u003e\n      {loading \u0026\u0026 (\n        \u003csvg\n          className={cn(\n            \"animate-spin\",\n            size === 'xs' \u0026\u0026 \"h-3 w-3\",\n            size === 'sm' \u0026\u0026 \"h-3.5 w-3.5\", \n            size === 'md' \u0026\u0026 \"h-4 w-4\",\n            size === 'lg' \u0026\u0026 \"h-4 w-4\",\n            size === 'xl' \u0026\u0026 \"h-5 w-5\"\n          )}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        \u003e\n          \u003ccircle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          /\u003e\n          \u003cpath\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          /\u003e\n        \u003c/svg\u003e\n      )}\n      \n      {Icon \u0026\u0026 iconPosition === 'left' \u0026\u0026 !loading \u0026\u0026 (\n        \u003cIcon \n          className={cn(\n            size === 'xs' \u0026\u0026 \"h-3 w-3\",\n            size === 'sm' \u0026\u0026 \"h-3.5 w-3.5\", \n            size === 'md' \u0026\u0026 \"h-4 w-4\",\n            size === 'lg' \u0026\u0026 \"h-4 w-4\",\n            size === 'xl' \u0026\u0026 \"h-5 w-5\"\n          )}\n          aria-hidden=\"true\"\n        /\u003e\n      )}\n      \n      \u003cspan className={loading ? 'animate-pulse' : ''}\u003e\n        {loading \u0026\u0026 loadingText ? loadingText : children}\n      \u003c/span\u003e\n      \n      {Icon \u0026\u0026 iconPosition === 'right' \u0026\u0026 !loading \u0026\u0026 (\n        \u003cIcon \n          className={cn(\n            size === 'xs' \u0026\u0026 \"h-3 w-3\",\n            size === 'sm' \u0026\u0026 \"h-3.5 w-3.5\", \n            size === 'md' \u0026\u0026 \"h-4 w-4\",\n            size === 'lg' \u0026\u0026 \"h-4 w-4\",\n            size === 'xl' \u0026\u0026 \"h-5 w-5\"\n          )}\n          aria-hidden=\"true\"\n        /\u003e\n      )}\n    \u003c/button\u003e\n  );\n});\n\nButton.displayName = 'Button';\n\nexport default Button;\nexport { Button };",
      "size": 5425,
      "hash": "7f7f0e35dd54eb0c9800ec36ead4f51d044929c2834f1dc0c2671e34b1c51318"
    },
    {
      "path": "frontend/src/components/ui/Card.tsx",
      "template": false,
      "content": "import { HTMLAttributes, forwardRef, ReactNode } from 'react';\nimport { cn } from '@/utils/cn';\n\ninterface CardProps extends HTMLAttributes\u003cHTMLDivElement\u003e {\n  variant?: 'default' | 'elevated' | 'outlined' | 'glass';\n  padding?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  hover?: boolean;\n  interactive?: boolean;\n}\n\ninterface CardHeaderProps extends HTMLAttributes\u003cHTMLDivElement\u003e {\n  children: ReactNode;\n}\n\ninterface CardContentProps extends HTMLAttributes\u003cHTMLDivElement\u003e {\n  children: ReactNode;\n}\n\ninterface CardFooterProps extends HTMLAttributes\u003cHTMLDivElement\u003e {\n  children: ReactNode;\n}\n\nconst cardVariants = {\n  default: 'bg-white border border-secondary-200 shadow-soft',\n  elevated: 'bg-white shadow-medium border border-secondary-100',\n  outlined: 'bg-white border-2 border-secondary-300 shadow-xs',\n  glass: 'bg-white/70 backdrop-blur-md border border-white/20 shadow-soft',\n};\n\nconst cardPadding = {\n  none: '',\n  sm: 'p-4',\n  md: 'p-6',\n  lg: 'p-8',\n  xl: 'p-10',\n};\n\nconst Card = forwardRef\u003cHTMLDivElement, CardProps\u003e(({\n  variant = 'default',\n  padding = 'md',\n  hover = false,\n  interactive = false,\n  className,\n  children,\n  ...props\n}, ref) =\u003e {\n  return (\n    \u003cdiv\n      ref={ref}\n      className={cn(\n        'rounded-xl transition-all duration-300',\n        cardVariants[variant],\n        cardPadding[padding],\n        hover \u0026\u0026 'hover:shadow-large hover:-translate-y-1',\n        interactive \u0026\u0026 'cursor-pointer hover:shadow-large hover:-translate-y-1 active:translate-y-0 active:shadow-medium',\n        className\n      )}\n      {...props}\n    \u003e\n      {children}\n    \u003c/div\u003e\n  );\n});\n\nconst CardHeader = forwardRef\u003cHTMLDivElement, CardHeaderProps\u003e(({\n  className,\n  children,\n  ...props\n}, ref) =\u003e {\n  return (\n    \u003cdiv\n      ref={ref}\n      className={cn('flex flex-col space-y-1.5 pb-6', className)}\n      {...props}\n    \u003e\n      {children}\n    \u003c/div\u003e\n  );\n});\n\nconst CardContent = forwardRef\u003cHTMLDivElement, CardContentProps\u003e(({\n  className,\n  children,\n  ...props\n}, ref) =\u003e {\n  return (\n    \u003cdiv\n      ref={ref}\n      className={cn('pt-0', className)}\n      {...props}\n    \u003e\n      {children}\n    \u003c/div\u003e\n  );\n});\n\nconst CardFooter = forwardRef\u003cHTMLDivElement, CardFooterProps\u003e(({\n  className,\n  children,\n  ...props\n}, ref) =\u003e {\n  return (\n    \u003cdiv\n      ref={ref}\n      className={cn('flex items-center pt-6', className)}\n      {...props}\n    \u003e\n      {children}\n    \u003c/div\u003e\n  );\n});\n\nCard.displayName = 'Card';\nCardHeader.displayName = 'CardHeader';\nCardContent.displayName = 'CardContent';\nCardFooter.displayName = 'CardFooter';\n\nexport { Card, CardHeader, CardContent, CardFooter };",
      "size": 2604,
      "hash": "561ca6a7cdbe6dcbdb974a8741944d7043ecd4e1a48a704d10d807063a4d643d"
    },
    {
      "path": "frontend/src/components/ui/Container.tsx",
      "template": false,
      "content": "import { ReactNode } from 'react';\nimport { cn } from '@/utils/cn';\n\ninterface ContainerProps {\n  children: ReactNode;\n  className?: string;\n}\n\nfunction Container({ children, className }: ContainerProps) {\n  return (\n    \u003cdiv className={cn('max-w-7xl mx-auto px-4 sm:px-6 lg:px-8', className)}\u003e\n      {children}\n    \u003c/div\u003e\n  );\n}\n\nexport default Container;\nexport { Container };",
      "size": 378,
      "hash": "4c482f32ee96fa3be8d3eddd67af7280cafebcbdfd275ab8e7d19a29e3372c8a"
    },
    {
      "path": "frontend/src/components/ui/LoadingSpinner.tsx",
      "template": false,
      "content": "import React from 'react';\nimport { clsx } from 'clsx';\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  color?: 'primary' | 'secondary' | 'white';\n  className?: string;\n}\n\nconst sizeClasses = {\n  sm: 'h-4 w-4',\n  md: 'h-6 w-6',\n  lg: 'h-8 w-8',\n  xl: 'h-12 w-12',\n};\n\nconst colorClasses = {\n  primary: 'border-primary-600',\n  secondary: 'border-secondary-600',\n  white: 'border-white',\n};\n\n/**\n * LoadingSpinner component for showing loading states\n * Used in route protection and async operations\n */\nexport const LoadingSpinner: React.FC\u003cLoadingSpinnerProps\u003e = ({\n  size = 'md',\n  color = 'primary',\n  className,\n}) =\u003e {\n  return (\n    \u003cdiv\n      className={clsx(\n        'animate-spin rounded-full border-2 border-t-transparent',\n        sizeClasses[size],\n        colorClasses[color],\n        className\n      )}\n      role=\"status\"\n      aria-label=\"Loading\"\n    \u003e\n      \u003cspan className=\"sr-only\"\u003eLoading...\u003c/span\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default LoadingSpinner;",
      "size": 992,
      "hash": "04e2b580eeda45fe41d625ec47923412bf0351a41dcafec56837851c23b00072"
    },
    {
      "path": "frontend/src/components/ui/Skeleton.tsx",
      "template": false,
      "content": "import { HTMLAttributes, forwardRef } from 'react';\nimport { cn } from '@/utils/cn';\n\ninterface SkeletonProps extends HTMLAttributes\u003cHTMLDivElement\u003e {\n  variant?: 'text' | 'circular' | 'rectangular' | 'rounded';\n  animation?: 'pulse' | 'wave' | 'none';\n  width?: string | number;\n  height?: string | number;\n}\n\nconst Skeleton = forwardRef\u003cHTMLDivElement, SkeletonProps\u003e(({\n  variant = 'text',\n  animation = 'pulse',\n  width,\n  height,\n  className,\n  style,\n  ...props\n}, ref) =\u003e {\n  const baseClasses = 'bg-gradient-to-r from-secondary-200 via-secondary-100 to-secondary-200 bg-[length:200%_100%]';\n  \n  const variantClasses = {\n    text: 'rounded h-4',\n    circular: 'rounded-full',\n    rectangular: 'rounded-none',\n    rounded: 'rounded-lg',\n  };\n\n  const animationClasses = {\n    pulse: 'animate-pulse',\n    wave: 'animate-shimmer',\n    none: '',\n  };\n\n  const inlineStyles = {\n    ...style,\n    ...(width \u0026\u0026 { width: typeof width === 'number' ? `${width}px` : width }),\n    ...(height \u0026\u0026 { height: typeof height === 'number' ? `${height}px` : height }),\n  };\n\n  return (\n    \u003cdiv\n      ref={ref}\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        animationClasses[animation],\n        className\n      )}\n      style={inlineStyles}\n      {...props}\n    /\u003e\n  );\n});\n\n// Preset skeleton components for common patterns\nconst SkeletonText = forwardRef\u003cHTMLDivElement, Omit\u003cSkeletonProps, 'variant'\u003e\u003e(({ \n  className, \n  ...props \n}, ref) =\u003e (\n  \u003cSkeleton ref={ref} variant=\"text\" className={cn('h-4', className)} {...props} /\u003e\n));\n\nconst SkeletonCard = forwardRef\u003cHTMLDivElement, HTMLAttributes\u003cHTMLDivElement\u003e\u003e(({ \n  className, \n  ...props \n}, ref) =\u003e (\n  \u003cdiv ref={ref} className={cn('space-y-4 p-6', className)} {...props}\u003e\n    \u003cdiv className=\"flex items-center space-x-4\"\u003e\n      \u003cSkeleton variant=\"circular\" width={40} height={40} /\u003e\n      \u003cdiv className=\"space-y-2 flex-1\"\u003e\n        \u003cSkeletonText className=\"w-3/4\" /\u003e\n        \u003cSkeletonText className=\"w-1/2 h-3\" /\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv className=\"space-y-2\"\u003e\n      \u003cSkeletonText /\u003e\n      \u003cSkeletonText /\u003e\n      \u003cSkeletonText className=\"w-5/6\" /\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n));\n\nconst SkeletonTable = forwardRef\u003cHTMLDivElement, { rows?: number } \u0026 HTMLAttributes\u003cHTMLDivElement\u003e\u003e(({ \n  rows = 5,\n  className, \n  ...props \n}, ref) =\u003e (\n  \u003cdiv ref={ref} className={cn('space-y-4', className)} {...props}\u003e\n    {/* Header */}\n    \u003cdiv className=\"flex space-x-4 pb-4 border-b border-secondary-200\"\u003e\n      \u003cSkeletonText className=\"w-1/4 h-3\" /\u003e\n      \u003cSkeletonText className=\"w-1/4 h-3\" /\u003e\n      \u003cSkeletonText className=\"w-1/4 h-3\" /\u003e\n      \u003cSkeletonText className=\"w-1/4 h-3\" /\u003e\n    \u003c/div\u003e\n    \n    {/* Rows */}\n    {Array.from({ length: rows }).map((_, index) =\u003e (\n      \u003cdiv key={index} className=\"flex space-x-4 py-2\"\u003e\n        \u003cSkeletonText className=\"w-1/4\" /\u003e\n        \u003cSkeletonText className=\"w-1/4\" /\u003e\n        \u003cSkeletonText className=\"w-1/4\" /\u003e\n        \u003cSkeletonText className=\"w-1/4\" /\u003e\n      \u003c/div\u003e\n    ))}\n  \u003c/div\u003e\n));\n\nconst SkeletonStats = forwardRef\u003cHTMLDivElement, HTMLAttributes\u003cHTMLDivElement\u003e\u003e(({ \n  className, \n  ...props \n}, ref) =\u003e (\n  \u003cdiv ref={ref} className={cn('grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6', className)} {...props}\u003e\n    {Array.from({ length: 4 }).map((_, index) =\u003e (\n      \u003cdiv key={index} className=\"p-6 border border-secondary-200 rounded-xl\"\u003e\n        \u003cdiv className=\"flex items-center\"\u003e\n          \u003cSkeleton variant=\"circular\" width={40} height={40} className=\"mr-4\" /\u003e\n          \u003cdiv className=\"space-y-2\"\u003e\n            \u003cSkeletonText className=\"w-20 h-3\" /\u003e\n            \u003cSkeletonText className=\"w-16 h-6\" /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    ))}\n  \u003c/div\u003e\n));\n\nSkeleton.displayName = 'Skeleton';\nSkeletonText.displayName = 'SkeletonText';\nSkeletonCard.displayName = 'SkeletonCard';\nSkeletonTable.displayName = 'SkeletonTable';\nSkeletonStats.displayName = 'SkeletonStats';\n\nexport { \n  Skeleton, \n  SkeletonText, \n  SkeletonCard, \n  SkeletonTable, \n  SkeletonStats \n};",
      "size": 4014,
      "hash": "27a649d31c048006b5ffc8ee5262c7963f0e1a67d65d99e275adb49d97b8c53c"
    },
    {
      "path": "frontend/src/components/ui/UnauthorizedError.tsx",
      "template": false,
      "content": "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Shield, ArrowLeft } from 'lucide-react';\nimport { Container } from './Container';\nimport { Button } from './Button';\n\ninterface UnauthorizedErrorProps {\n  title?: string;\n  message?: string;\n  actionText?: string;\n  actionPath?: string;\n  showBackButton?: boolean;\n}\n\n/**\n * UnauthorizedError component for displaying access denied messages\n * Used when users don't have sufficient permissions\n */\nexport const UnauthorizedError: React.FC\u003cUnauthorizedErrorProps\u003e = ({\n  title = 'Access Denied',\n  message = 'You do not have permission to access this resource.',\n  actionText = 'Go Back',\n  actionPath = '/dashboard',\n  showBackButton = true,\n}) =\u003e {\n  return (\n    \u003cdiv className=\"min-h-screen bg-gradient-to-br from-red-50 via-white to-orange-50\"\u003e\n      \u003cContainer\u003e\n        \u003cdiv className=\"flex items-center justify-center min-h-screen py-12\"\u003e\n          \u003cdiv className=\"text-center max-w-md\"\u003e\n            \u003cdiv className=\"mx-auto w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mb-6\"\u003e\n              \u003cShield className=\"w-8 h-8 text-red-600\" /\u003e\n            \u003c/div\u003e\n            \n            \u003ch1 className=\"text-3xl font-bold text-secondary-900 mb-4\"\u003e\n              {title}\n            \u003c/h1\u003e\n            \n            \u003cp className=\"text-lg text-secondary-600 mb-8\"\u003e\n              {message}\n            \u003c/p\u003e\n            \n            \u003cdiv className=\"space-y-4\"\u003e\n              {showBackButton \u0026\u0026 (\n                \u003cLink to={actionPath}\u003e\n                  \u003cButton className=\"w-full sm:w-auto\"\u003e\n                    \u003cArrowLeft className=\"w-4 h-4 mr-2\" /\u003e\n                    {actionText}\n                  \u003c/Button\u003e\n                \u003c/Link\u003e\n              )}\n              \n              \u003cdiv className=\"text-sm text-secondary-500\"\u003e\n                If you believe this is an error, please contact your administrator.\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/Container\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default UnauthorizedError;",
      "size": 2043,
      "hash": "38f12cc4537c0955ea820658abae16e3253958cf272c0d42141915f6992bda47"
    },
    {
      "path": "frontend/src/components/ui/index.ts",
      "template": false,
      "content": "export { default as Button } from './Button';\nexport { Card, CardHeader, CardContent, CardFooter } from './Card';\nexport { default as Container } from './Container';\nexport { default as LoadingSpinner } from './LoadingSpinner';\nexport { Skeleton, SkeletonText, SkeletonCard, SkeletonTable, SkeletonStats } from './Skeleton';\nexport { default as UnauthorizedError } from './UnauthorizedError';",
      "size": 392,
      "hash": "92b3032c0dba2609e3ba29a222a34bbc49efe0116798c99a949df77f8205a519"
    },
    {
      "path": "frontend/src/config/app.ts",
      "template": true,
      "content": "export const config = {\n  app: {\n    name: 'Fullstack Template',\n    version: '1.0.0',\n  },\n  api: {\n    baseUrl: process.env.VITE_API_BASE_URL || '/api',\n  },\n  apiUrl: process.env.VITE_API_BASE_URL || '/api',\n};",
      "size": 213,
      "hash": "d67e625e57804d4cd4a99964df9abe30d68679485a7f5249132387ae62f89496",
      "mappings": [
        {
          "find": "APP_NAME: 'Fullstack Template'",
          "replace": "APP_NAME: '{{.ProjectName}}'"
        }
      ]
    },
    {
      "path": "frontend/src/contexts/AuthContext.tsx",
      "template": false,
      "content": "import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { api, User, LoginRequest, RegisterRequest, ApiError } from '../lib/api';\n\n// Types\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  isEmailVerified: boolean;\n}\n\ninterface AuthContextType extends AuthState {\n  login: (data: LoginRequest) =\u003e Promise\u003cvoid\u003e;\n  register: (data: RegisterRequest) =\u003e Promise\u003cvoid\u003e;\n  logout: () =\u003e Promise\u003cvoid\u003e;\n  logoutAll: () =\u003e Promise\u003cvoid\u003e;\n  checkAuth: () =\u003e Promise\u003cvoid\u003e;\n  refreshAuth: () =\u003e Promise\u003cvoid\u003e;\n}\n\n// Create context\nconst AuthContext = createContext\u003cAuthContextType | undefined\u003e(undefined);\n\n// Provider props\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\n// Initial state\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  isEmailVerified: false,\n};\n\n// AuthProvider component\nexport const AuthProvider: React.FC\u003cAuthProviderProps\u003e = ({ children }) =\u003e {\n  const [state, setState] = useState\u003cAuthState\u003e(initialState);\n\n  // Login function\n  const login = async (data: LoginRequest): Promise\u003cvoid\u003e =\u003e {\n    try {\n      setState(prev =\u003e ({ ...prev, isLoading: true }));\n      \n      const response = await api.login(data);\n      \n      setState({\n        user: response.user,\n        isAuthenticated: true,\n        isLoading: false,\n        isEmailVerified: response.user.email_verified,\n      });\n    } catch (error) {\n      setState(prev =\u003e ({ ...prev, isLoading: false }));\n      throw error;\n    }\n  };\n\n  // Register function\n  const register = async (data: RegisterRequest): Promise\u003cvoid\u003e =\u003e {\n    try {\n      setState(prev =\u003e ({ ...prev, isLoading: true }));\n      \n      const response = await api.register(data);\n      \n      setState({\n        user: response.user,\n        isAuthenticated: true,\n        isLoading: false,\n        isEmailVerified: response.user.email_verified,\n      });\n    } catch (error) {\n      setState(prev =\u003e ({ ...prev, isLoading: false }));\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = async (): Promise\u003cvoid\u003e =\u003e {\n    try {\n      await api.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Continue with local logout even if API call fails\n    } finally {\n      setState({\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        isEmailVerified: false,\n      });\n      \n      // Clear any stored tokens or user data\n      localStorage.removeItem('user');\n    }\n  };\n\n  // Logout from all devices\n  const logoutAll = async (): Promise\u003cvoid\u003e =\u003e {\n    try {\n      await api.logoutAll();\n    } catch (error) {\n      console.error('Logout all error:', error);\n      // Continue with local logout even if API call fails\n    } finally {\n      setState({\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        isEmailVerified: false,\n      });\n      \n      // Clear any stored tokens or user data\n      localStorage.removeItem('user');\n    }\n  };\n\n  // Check authentication status\n  const checkAuth = async (): Promise\u003cvoid\u003e =\u003e {\n    try {\n      setState(prev =\u003e ({ ...prev, isLoading: true }));\n      \n      const response = await api.checkAuth();\n      \n      if (response.authenticated \u0026\u0026 response.user) {\n        setState({\n          user: response.user,\n          isAuthenticated: true,\n          isLoading: false,\n          isEmailVerified: response.user.email_verified,\n        });\n      } else {\n        setState({\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n          isEmailVerified: false,\n        });\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      setState({\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        isEmailVerified: false,\n      });\n    }\n  };\n\n  // Refresh user data\n  const refreshAuth = async (): Promise\u003cvoid\u003e =\u003e {\n    if (!state.isAuthenticated) {\n      return;\n    }\n\n    try {\n      const user = await api.getProfile();\n      setState(prev =\u003e ({\n        ...prev,\n        user,\n        isEmailVerified: user.email_verified,\n      }));\n    } catch (error) {\n      console.error('Refresh auth error:', error);\n      // If we can't get the profile, the user might be logged out\n      if (error instanceof ApiError \u0026\u0026 error.status === 401) {\n        setState({\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n          isEmailVerified: false,\n        });\n      }\n    }\n  };\n\n  // Check authentication on mount\n  useEffect(() =\u003e {\n    checkAuth();\n  }, []);\n\n  // Provide context value\n  const contextValue: AuthContextType = {\n    ...state,\n    login,\n    register,\n    logout,\n    logoutAll,\n    checkAuth,\n    refreshAuth,\n  };\n\n  return (\n    \u003cAuthContext.Provider value={contextValue}\u003e\n      {children}\n    \u003c/AuthContext.Provider\u003e\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = (): AuthContextType =\u003e {\n  const context = useContext(AuthContext);\n  \n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  \n  return context;\n};\n\n// Hook to check if user is authenticated\n// Note: This hook is kept for backward compatibility, but ProtectedRoute should be used instead\nexport const useRequireAuth = (): AuthContextType =\u003e {\n  const auth = useAuth();\n  \n  useEffect(() =\u003e {\n    if (!auth.isLoading \u0026\u0026 !auth.isAuthenticated) {\n      // This is now handled by ProtectedRoute component\n      console.warn('useRequireAuth: User is not authenticated. Consider using ProtectedRoute component instead.');\n    }\n  }, [auth.isLoading, auth.isAuthenticated]);\n  \n  return auth;\n};\n\n// Hook to check if email is verified\n// Note: This hook is kept for backward compatibility, but route-level verification should be used instead\nexport const useRequireEmailVerification = (): AuthContextType =\u003e {\n  const auth = useAuth();\n  \n  useEffect(() =\u003e {\n    if (!auth.isLoading \u0026\u0026 auth.isAuthenticated \u0026\u0026 !auth.isEmailVerified) {\n      // This is now handled by ProtectedRoute component with requireEmailVerification prop\n      console.warn('useRequireEmailVerification: Email not verified. Consider using ProtectedRoute with requireEmailVerification prop.');\n    }\n  }, [auth.isLoading, auth.isAuthenticated, auth.isEmailVerified]);\n  \n  return auth;\n};\n\nexport default AuthContext;",
      "size": 6401,
      "hash": "fdbd1e73479faf312997c7aa4572d1f8f59056caedbe4dac0c59897a57b5c4d2"
    },
    {
      "path": "frontend/src/contexts/RBACContext.tsx",
      "template": false,
      "content": "import React, { createContext, useContext, ReactNode } from 'react';\nimport { useAuth } from './AuthContext';\n\n// Types\nexport type Permission = string;\nexport type Resource = string;\nexport type Action = string;\nexport type UserRole = 'user' | 'admin';\n\n// System resources\nexport const RESOURCES = {\n  USER: 'user',\n  ADMIN: 'admin', \n  PROFILE: 'profile',\n  AUTH: 'auth',\n  AUDIT: 'audit',\n  SYSTEM: 'system',\n} as const;\n\n// Actions\nexport const ACTIONS = {\n  READ: 'read',\n  WRITE: 'write',\n  CREATE: 'create',\n  UPDATE: 'update',\n  DELETE: 'delete',\n  MANAGE: 'manage',\n} as const;\n\n// Permissions\nexport const PERMISSIONS = {\n  // User permissions\n  USER_READ: 'user:read',\n  USER_WRITE: 'user:write',\n  USER_CREATE: 'user:create',\n  USER_UPDATE: 'user:update',\n  USER_DELETE: 'user:delete',\n  USER_MANAGE: 'user:manage',\n\n  // Profile permissions (own profile)\n  PROFILE_READ: 'profile:read',\n  PROFILE_UPDATE: 'profile:update',\n\n  // Admin permissions\n  ADMIN_READ: 'admin:read',\n  ADMIN_WRITE: 'admin:write',\n  ADMIN_MANAGE: 'admin:manage',\n\n  // Auth permissions\n  AUTH_READ: 'auth:read',\n  AUTH_WRITE: 'auth:write',\n  AUTH_MANAGE: 'auth:manage',\n\n  // Audit permissions\n  AUDIT_READ: 'audit:read',\n  AUDIT_WRITE: 'audit:write',\n  AUDIT_MANAGE: 'audit:manage',\n\n  // System permissions\n  SYSTEM_READ: 'system:read',\n  SYSTEM_WRITE: 'system:write',\n  SYSTEM_MANAGE: 'system:manage',\n} as const;\n\n// Role permissions mapping\nconst ROLE_PERMISSIONS: Record\u003cUserRole, Permission[]\u003e = {\n  user: [\n    PERMISSIONS.PROFILE_READ,\n    PERMISSIONS.PROFILE_UPDATE,\n    PERMISSIONS.AUTH_READ,\n    PERMISSIONS.AUTH_WRITE,\n  ],\n  admin: [\n    // All user permissions\n    PERMISSIONS.PROFILE_READ,\n    PERMISSIONS.PROFILE_UPDATE,\n    PERMISSIONS.AUTH_READ,\n    PERMISSIONS.AUTH_WRITE,\n    // Plus admin-specific permissions\n    PERMISSIONS.USER_READ,\n    PERMISSIONS.USER_WRITE,\n    PERMISSIONS.USER_CREATE,\n    PERMISSIONS.USER_UPDATE,\n    PERMISSIONS.USER_DELETE,\n    PERMISSIONS.USER_MANAGE,\n    PERMISSIONS.ADMIN_READ,\n    PERMISSIONS.ADMIN_WRITE,\n    PERMISSIONS.ADMIN_MANAGE,\n    PERMISSIONS.AUDIT_READ,\n    PERMISSIONS.AUDIT_WRITE,\n    PERMISSIONS.SYSTEM_READ,\n  ],\n};\n\n// RBAC Context Interface\ninterface RBACContextType {\n  // Permission checking\n  hasPermission: (permission: Permission) =\u003e boolean;\n  hasAnyPermission: (permissions: Permission[]) =\u003e boolean;\n  hasAllPermissions: (permissions: Permission[]) =\u003e boolean;\n  canAccessResource: (resource: Resource, action: Action) =\u003e boolean;\n\n  // Role checking\n  hasRole: (role: UserRole) =\u003e boolean;\n  hasAnyRole: (roles: UserRole[]) =\u003e boolean;\n  isAdmin: () =\u003e boolean;\n  isUser: () =\u003e boolean;\n\n  // User management\n  canManageUser: (targetUserId?: number) =\u003e boolean;\n  canAccessOwnResource: (resourceOwnerId: number) =\u003e boolean;\n\n  // Utility functions\n  getUserRole: () =\u003e UserRole | null;\n  getUserPermissions: () =\u003e Permission[];\n  buildPermission: (resource: Resource, action: Action) =\u003e Permission;\n}\n\n// Create context\nconst RBACContext = createContext\u003cRBACContextType | undefined\u003e(undefined);\n\n// Provider props\ninterface RBACProviderProps {\n  children: ReactNode;\n}\n\n// RBAC Provider component\nexport const RBACProvider: React.FC\u003cRBACProviderProps\u003e = ({ children }) =\u003e {\n  const { user, isAuthenticated } = useAuth();\n\n  // Get current user role\n  const getUserRole = (): UserRole | null =\u003e {\n    if (!isAuthenticated || !user) {\n      return null;\n    }\n    return user.role;\n  };\n\n  // Get user permissions based on role\n  const getUserPermissions = (): Permission[] =\u003e {\n    const role = getUserRole();\n    if (!role) {\n      return [];\n    }\n    return ROLE_PERMISSIONS[role] || [];\n  };\n\n  // Build permission string from resource and action\n  const buildPermission = (resource: Resource, action: Action): Permission =\u003e {\n    return `${resource}:${action}`;\n  };\n\n  // Check if user has a specific permission\n  const hasPermission = (permission: Permission): boolean =\u003e {\n    const permissions = getUserPermissions();\n    return permissions.includes(permission);\n  };\n\n  // Check if user has any of the specified permissions\n  const hasAnyPermission = (permissions: Permission[]): boolean =\u003e {\n    const userPermissions = getUserPermissions();\n    return permissions.some(permission =\u003e userPermissions.includes(permission));\n  };\n\n  // Check if user has all of the specified permissions\n  const hasAllPermissions = (permissions: Permission[]): boolean =\u003e {\n    const userPermissions = getUserPermissions();\n    return permissions.every(permission =\u003e userPermissions.includes(permission));\n  };\n\n  // Check if user can access a resource with a specific action\n  const canAccessResource = (resource: Resource, action: Action): boolean =\u003e {\n    const permission = buildPermission(resource, action);\n    return hasPermission(permission);\n  };\n\n  // Check if user has a specific role\n  const hasRole = (role: UserRole): boolean =\u003e {\n    const userRole = getUserRole();\n    return userRole === role;\n  };\n\n  // Check if user has any of the specified roles\n  const hasAnyRole = (roles: UserRole[]): boolean =\u003e {\n    const userRole = getUserRole();\n    return userRole ? roles.includes(userRole) : false;\n  };\n\n  // Check if user is admin\n  const isAdmin = (): boolean =\u003e {\n    return hasRole('admin');\n  };\n\n  // Check if user is regular user\n  const isUser = (): boolean =\u003e {\n    return hasRole('user');\n  };\n\n  // Check if user can manage another user\n  const canManageUser = (targetUserId?: number): boolean =\u003e {\n    // Must have user management permission\n    if (!hasPermission(PERMISSIONS.USER_MANAGE)) {\n      return false;\n    }\n\n    // Cannot manage yourself through admin interface\n    if (targetUserId \u0026\u0026 user \u0026\u0026 user.id === targetUserId) {\n      return false;\n    }\n\n    return true;\n  };\n\n  // Check if user can access their own resource or has permission\n  const canAccessOwnResource = (resourceOwnerId: number): boolean =\u003e {\n    // Allow if accessing own resource\n    if (user \u0026\u0026 user.id === resourceOwnerId) {\n      return true;\n    }\n\n    // Otherwise, need appropriate admin permissions\n    return hasPermission(PERMISSIONS.USER_READ);\n  };\n\n  // Context value\n  const contextValue: RBACContextType = {\n    hasPermission,\n    hasAnyPermission,\n    hasAllPermissions,\n    canAccessResource,\n    hasRole,\n    hasAnyRole,\n    isAdmin,\n    isUser,\n    canManageUser,\n    canAccessOwnResource,\n    getUserRole,\n    getUserPermissions,\n    buildPermission,\n  };\n\n  return (\n    \u003cRBACContext.Provider value={contextValue}\u003e\n      {children}\n    \u003c/RBACContext.Provider\u003e\n  );\n};\n\n// Custom hook to use RBAC context\nexport const useRBAC = (): RBACContextType =\u003e {\n  const context = useContext(RBACContext);\n  \n  if (context === undefined) {\n    throw new Error('useRBAC must be used within an RBACProvider');\n  }\n  \n  return context;\n};\n\n// Custom hooks for common checks\n\n// Hook to check if user has a specific permission\nexport const usePermission = (permission: Permission): boolean =\u003e {\n  const { hasPermission } = useRBAC();\n  return hasPermission(permission);\n};\n\n// Hook to check if user has any of the specified permissions\nexport const useAnyPermission = (permissions: Permission[]): boolean =\u003e {\n  const { hasAnyPermission } = useRBAC();\n  return hasAnyPermission(permissions);\n};\n\n// Hook to check if user has all of the specified permissions\nexport const useAllPermissions = (permissions: Permission[]): boolean =\u003e {\n  const { hasAllPermissions } = useRBAC();\n  return hasAllPermissions(permissions);\n};\n\n// Hook to check if user can access a resource\nexport const useResourceAccess = (resource: Resource, action: Action): boolean =\u003e {\n  const { canAccessResource } = useRBAC();\n  return canAccessResource(resource, action);\n};\n\n// Hook to check if user has a specific role\nexport const useRole = (role: UserRole): boolean =\u003e {\n  const { hasRole } = useRBAC();\n  return hasRole(role);\n};\n\n// Hook to check if user is admin\nexport const useIsAdmin = (): boolean =\u003e {\n  const { isAdmin } = useRBAC();\n  return isAdmin();\n};\n\n// Hook to check if user is regular user\nexport const useIsUser = (): boolean =\u003e {\n  const { isUser } = useRBAC();\n  return isUser();\n};\n\n// Hook to require specific permission (throws error if not authorized)\nexport const useRequirePermission = (permission: Permission): void =\u003e {\n  const { hasPermission } = useRBAC();\n  const { isAuthenticated } = useAuth();\n  \n  React.useEffect(() =\u003e {\n    if (!isAuthenticated) {\n      throw new Error('Authentication required');\n    }\n    \n    if (!hasPermission(permission)) {\n      throw new Error(`Permission required: ${permission}`);\n    }\n  }, [isAuthenticated, hasPermission, permission]);\n};\n\n// Hook to require admin role\nexport const useRequireAdmin = (): void =\u003e {\n  const { isAdmin } = useRBAC();\n  const { isAuthenticated } = useAuth();\n  \n  React.useEffect(() =\u003e {\n    if (!isAuthenticated) {\n      throw new Error('Authentication required');\n    }\n    \n    if (!isAdmin()) {\n      throw new Error('Admin role required');\n    }\n  }, [isAuthenticated, isAdmin]);\n};\n\nexport default RBACContext;",
      "size": 9058,
      "hash": "f3051eb6c83080ab8b11c94fc69c6834723dd2a607f1968973f6db1fc7b52678"
    },
    {
      "path": "frontend/src/index.css",
      "template": false,
      "content": "@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900\u0026display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  body {\n    @apply font-sans antialiased;\n  }\n  \n  h1, h2, h3, h4, h5, h6 {\n    @apply font-heading;\n  }\n}\n\n@layer components {\n  .text-gradient {\n    @apply bg-gradient-to-r from-primary-600 to-accent-600 bg-clip-text text-transparent;\n  }\n  \n  .glass {\n    @apply backdrop-blur-sm bg-white/10 border border-white/20;\n  }\n  \n  .animate-fade-in {\n    animation: fadeIn 0.6s ease-out forwards;\n  }\n  \n  .animate-slide-up {\n    animation: slideUp 0.6s ease-out forwards;\n  }\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}",
      "size": 727,
      "hash": "1b590e2bf69e15e88177bfd9670b63753941aaa66a9f41da9b160c5cb94eed29"
    },
    {
      "path": "frontend/src/lib/api.ts",
      "template": false,
      "content": "import { config } from '../config/app';\n\n// Types for API responses\nexport interface User {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  email_verified: boolean;\n  role: 'user' | 'admin';\n  status: 'active' | 'inactive' | 'suspended';\n  preferences: UserPreferences;\n  avatar?: string;\n  last_login_at: string | null;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface UserPreferences {\n  theme?: string;\n  language?: string;\n  timezone?: string;\n  notifications?: NotificationPrefs;\n  privacy?: PrivacyPrefs;\n  custom?: Record\u003cstring, any\u003e;\n}\n\nexport interface NotificationPrefs {\n  email: boolean;\n  sms: boolean;\n  push: boolean;\n}\n\nexport interface PrivacyPrefs {\n  profile_visible: boolean;\n  show_email: boolean;\n}\n\nexport interface AuthResponse {\n  user: User;\n  access_token: string;\n  refresh_token: string;\n  expires_in: number;\n}\n\nexport interface ApiError {\n  error: string;\n  details?: Record\u003cstring, string\u003e;\n}\n\nexport interface MessageResponse {\n  message: string;\n}\n\n// Request types\nexport interface RegisterRequest {\n  email: string;\n  password: string;\n  first_name: string;\n  last_name: string;\n}\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface ForgotPasswordRequest {\n  email: string;\n}\n\nexport interface ResetPasswordRequest {\n  token: string;\n  password: string;\n  confirm_password: string;\n}\n\nexport interface ChangePasswordRequest {\n  current_password: string;\n  new_password: string;\n  confirm_password: string;\n}\n\nexport interface EmailVerificationRequest {\n  token: string;\n}\n\n// User Management Types\nexport interface UpdateProfileRequest {\n  first_name: string;\n  last_name: string;\n  avatar?: string;\n}\n\nexport interface UpdatePreferencesRequest {\n  theme?: string;\n  language?: string;\n  timezone?: string;\n  notifications: NotificationPrefs;\n  privacy: PrivacyPrefs;\n  custom?: Record\u003cstring, any\u003e;\n}\n\nexport interface ChangeEmailRequest {\n  new_email: string;\n  password: string;\n}\n\nexport interface UserSummary {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  role: 'user' | 'admin';\n  status: 'active' | 'inactive' | 'suspended';\n  email_verified: boolean;\n  avatar?: string;\n  last_login_at: string | null;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface UserListRequest {\n  page?: number;\n  page_size?: number;\n  search?: string;\n  role?: 'user' | 'admin';\n  status?: 'active' | 'inactive' | 'suspended';\n  sort_by?: string;\n  sort_order?: 'asc' | 'desc';\n}\n\nexport interface UserListResponse {\n  users: UserSummary[];\n  pagination: Pagination;\n}\n\nexport interface Pagination {\n  page: number;\n  page_size: number;\n  total: number;\n  total_pages: number;\n  has_next: boolean;\n  has_prev: boolean;\n}\n\nexport interface DashboardResponse {\n  user: User;\n  stats: UserStats;\n  recent_logins: LoginHistoryEntry[];\n  notifications: NotificationItem[];\n}\n\nexport interface UserStats {\n  total_logins: number;\n  last_login_at: string | null;\n  account_age_days: number;\n  profile_complete: boolean;\n}\n\nexport interface LoginHistoryEntry {\n  id: number;\n  ip_address: string;\n  user_agent: string;\n  success: boolean;\n  created_at: string;\n}\n\nexport interface NotificationItem {\n  id: number;\n  type: 'info' | 'warning' | 'error' | 'success';\n  title: string;\n  message: string;\n  read: boolean;\n  priority: 'low' | 'medium' | 'high';\n  created_at: string;\n}\n\n// Admin Types\nexport interface UpdateUserRoleRequest {\n  role: 'user' | 'admin';\n  reason: string;\n}\n\nexport interface UpdateUserStatusRequest {\n  status: 'active' | 'inactive' | 'suspended';\n  reason: string;\n}\n\nexport interface AdminUpdateUserRequest {\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n  email_verified?: boolean;\n  role?: 'user' | 'admin';\n  status?: 'active' | 'inactive' | 'suspended';\n  avatar?: string;\n  reason: string;\n}\n\nexport interface DeleteUserRequest {\n  reason: string;\n  force?: boolean;\n}\n\nexport interface BulkUserActionRequest {\n  user_ids: number[];\n  action: 'activate' | 'deactivate' | 'suspend' | 'delete' | 'role_change';\n  role?: 'user' | 'admin';\n  reason: string;\n}\n\nexport interface BulkActionResult {\n  total_requested: number;\n  successful: number;\n  failed: number;\n  results: BulkActionItemResult[];\n}\n\nexport interface BulkActionItemResult {\n  user_id: number;\n  success: boolean;\n  error?: string;\n}\n\nexport interface AdminStatsResponse {\n  total_users: number;\n  active_users: number;\n  inactive_users: number;\n  suspended_users: number;\n  admin_users: number;\n  new_users_today: number;\n  new_users_this_week: number;\n  user_growth: UserGrowthData[];\n  top_countries?: CountryData[];\n}\n\nexport interface UserGrowthData {\n  date: string;\n  count: number;\n}\n\nexport interface CountryData {\n  country: string;\n  count: number;\n}\n\nexport interface AdminAuditLogRequest {\n  page?: number;\n  page_size?: number;\n  user_id?: number;\n  target_id?: number;\n  action?: string;\n  level?: 'info' | 'warning' | 'error';\n  resource?: string;\n  date_from?: string;\n  date_to?: string;\n  ip_address?: string;\n}\n\nexport interface AdminAuditLogResponse {\n  logs: EnhancedAuditLogEntry[];\n  pagination: Pagination;\n}\n\nexport interface EnhancedAuditLogEntry {\n  id: number;\n  action: string;\n  level: 'info' | 'warning' | 'error';\n  resource: string;\n  description: string;\n  ip_address: string;\n  user_agent: string;\n  metadata?: Record\u003cstring, any\u003e;\n  created_at: string;\n  user?: UserSummary;\n  target?: UserSummary;\n}\n\nexport interface UserDetailResponse extends User {\n  login_history?: LoginHistoryEntry[];\n  audit_trail?: AuditLogEntry[];\n}\n\nexport interface AuditLogEntry {\n  id: number;\n  action: string;\n  level: 'info' | 'warning' | 'error';\n  resource: string;\n  description: string;\n  ip_address: string;\n  user_agent: string;\n  metadata?: Record\u003cstring, any\u003e;\n  created_at: string;\n}\n\n// API Client class\nclass ApiClient {\n  private baseURL: string;\n  private refreshPromise: Promise\u003cvoid\u003e | null = null;\n\n  constructor() {\n    this.baseURL = config.apiUrl;\n  }\n\n  // Generic request method\n  private async request\u003cT\u003e(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise\u003cT\u003e {\n    const url = `${this.baseURL}${endpoint}`;\n    \n    const defaultHeaders: HeadersInit = {\n      'Content-Type': 'application/json',\n    };\n\n    const config: RequestInit = {\n      credentials: 'include', // Include cookies for authentication\n      ...options,\n      headers: {\n        ...defaultHeaders,\n        ...options.headers,\n      },\n    };\n\n    let response = await fetch(url, config);\n\n    // Handle token refresh on 401 errors\n    if (response.status === 401 \u0026\u0026 endpoint !== '/auth/refresh' \u0026\u0026 endpoint !== '/auth/login') {\n      const refreshed = await this.refreshToken();\n      if (refreshed) {\n        // Retry the request after successful refresh\n        response = await fetch(url, config);\n      }\n    }\n\n    const contentType = response.headers.get('content-type');\n    const isJson = contentType?.includes('application/json');\n\n    if (!response.ok) {\n      let errorData: ApiError;\n      \n      if (isJson) {\n        errorData = await response.json();\n      } else {\n        errorData = {\n          error: `HTTP ${response.status}: ${response.statusText}`,\n          name: 'HTTPError',\n          message: `HTTP ${response.status}: ${response.statusText}`,\n        };\n      }\n\n      throw new ApiError(errorData.error, response.status, errorData.details);\n    }\n\n    if (isJson) {\n      return response.json();\n    }\n    \n    return response.text() as unknown as T;\n  }\n\n  // Authentication methods\n  async register(data: RegisterRequest): Promise\u003cAuthResponse\u003e {\n    return this.request\u003cAuthResponse\u003e('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async login(data: LoginRequest): Promise\u003cAuthResponse\u003e {\n    return this.request\u003cAuthResponse\u003e('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async logout(): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e('/auth/logout', {\n      method: 'POST',\n    });\n  }\n\n  async logoutAll(): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e('/auth/logout-all', {\n      method: 'POST',\n    });\n  }\n\n  async refreshToken(): Promise\u003cboolean\u003e {\n    // Prevent multiple refresh attempts\n    if (this.refreshPromise) {\n      await this.refreshPromise;\n      return true;\n    }\n\n    this.refreshPromise = this.performRefresh();\n    \n    try {\n      await this.refreshPromise;\n      return true;\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      return false;\n    } finally {\n      this.refreshPromise = null;\n    }\n  }\n\n  private async performRefresh(): Promise\u003cvoid\u003e {\n    await this.request\u003cAuthResponse\u003e('/auth/refresh', {\n      method: 'POST',\n    });\n  }\n\n  async checkAuth(): Promise\u003c{ authenticated: boolean; user?: User }\u003e {\n    return this.request\u003c{ authenticated: boolean; user?: User }\u003e('/auth/check');\n  }\n\n  async getProfile(): Promise\u003cUser\u003e {\n    return this.request\u003cUser\u003e('/auth/profile');\n  }\n\n  async verifyEmail(data: EmailVerificationRequest): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e('/auth/verify-email', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async resendEmailVerification(): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e('/auth/resend-verification', {\n      method: 'POST',\n    });\n  }\n\n  async forgotPassword(data: ForgotPasswordRequest): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e('/auth/forgot-password', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async resetPassword(data: ResetPasswordRequest): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e('/auth/reset-password', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async changePassword(data: ChangePasswordRequest): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e('/auth/change-password', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  // User Management methods\n  async getUserProfile(): Promise\u003cUser\u003e {\n    return this.request\u003cUser\u003e('/user/profile');\n  }\n\n  async updateProfile(data: UpdateProfileRequest): Promise\u003cUser\u003e {\n    return this.request\u003cUser\u003e('/user/profile', {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async getPreferences(): Promise\u003cUserPreferences\u003e {\n    return this.request\u003cUserPreferences\u003e('/user/preferences');\n  }\n\n  async updatePreferences(data: UpdatePreferencesRequest): Promise\u003cUserPreferences\u003e {\n    return this.request\u003cUserPreferences\u003e('/user/preferences', {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async changeEmail(data: ChangeEmailRequest): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e('/user/change-email', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async getDashboard(): Promise\u003cDashboardResponse\u003e {\n    return this.request\u003cDashboardResponse\u003e('/user/dashboard');\n  }\n\n  // Admin methods\n  async getUsers(params?: UserListRequest): Promise\u003cUserListResponse\u003e {\n    const searchParams = new URLSearchParams();\n    if (params?.page) searchParams.append('page', params.page.toString());\n    if (params?.page_size) searchParams.append('page_size', params.page_size.toString());\n    if (params?.search) searchParams.append('search', params.search);\n    if (params?.role) searchParams.append('role', params.role);\n    if (params?.status) searchParams.append('status', params.status);\n    if (params?.sort_by) searchParams.append('sort_by', params.sort_by);\n    if (params?.sort_order) searchParams.append('sort_order', params.sort_order);\n\n    const queryString = searchParams.toString();\n    const endpoint = queryString ? `/admin/users?${queryString}` : '/admin/users';\n    \n    return this.request\u003cUserListResponse\u003e(endpoint);\n  }\n\n  async getUserDetails(userId: number): Promise\u003cUserDetailResponse\u003e {\n    return this.request\u003cUserDetailResponse\u003e(`/admin/users/${userId}`);\n  }\n\n  async updateUser(userId: number, data: AdminUpdateUserRequest): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e(`/admin/users/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async updateUserRole(userId: number, data: UpdateUserRoleRequest): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e(`/admin/users/${userId}/role`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async updateUserStatus(userId: number, data: UpdateUserStatusRequest): Promise\u003cMessageResponse\u003e {\n    return this.request\u003cMessageResponse\u003e(`/admin/users/${userId}/status`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async deleteUsers(userIds: number[], data: DeleteUserRequest): Promise\u003cMessageResponse\u003e {\n    const idsParam = userIds.join(',');\n    return this.request\u003cMessageResponse\u003e(`/admin/users?ids=${idsParam}`, {\n      method: 'DELETE',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async bulkUpdateUsers(data: BulkUserActionRequest): Promise\u003cBulkActionResult\u003e {\n    return this.request\u003cBulkActionResult\u003e('/admin/users/bulk', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async getAdminStats(): Promise\u003cAdminStatsResponse\u003e {\n    return this.request\u003cAdminStatsResponse\u003e('/admin/stats');\n  }\n\n  async getAuditLogs(params?: AdminAuditLogRequest): Promise\u003cAdminAuditLogResponse\u003e {\n    const searchParams = new URLSearchParams();\n    if (params?.page) searchParams.append('page', params.page.toString());\n    if (params?.page_size) searchParams.append('page_size', params.page_size.toString());\n    if (params?.user_id) searchParams.append('user_id', params.user_id.toString());\n    if (params?.target_id) searchParams.append('target_id', params.target_id.toString());\n    if (params?.action) searchParams.append('action', params.action);\n    if (params?.level) searchParams.append('level', params.level);\n    if (params?.resource) searchParams.append('resource', params.resource);\n    if (params?.date_from) searchParams.append('date_from', params.date_from);\n    if (params?.date_to) searchParams.append('date_to', params.date_to);\n    if (params?.ip_address) searchParams.append('ip_address', params.ip_address);\n\n    const queryString = searchParams.toString();\n    const endpoint = queryString ? `/admin/audit-logs?${queryString}` : '/admin/audit-logs';\n    \n    return this.request\u003cAdminAuditLogResponse\u003e(endpoint);\n  }\n\n  // Health check\n  async healthCheck(): Promise\u003c{ status: string; timestamp: string }\u003e {\n    return this.request\u003c{ status: string; timestamp: string }\u003e('/health');\n  }\n}\n\n// Custom error class\nexport class ApiError extends Error {\n  constructor(\n    message: string,\n    public status?: number,\n    public details?: Record\u003cstring, string\u003e\n  ) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\n// Export singleton instance\nexport const api = new ApiClient();",
      "size": 15023,
      "hash": "cf401b0860280474a68d5ca2a69e96e78ec10a7918aa169422b3c0045924e315"
    },
    {
      "path": "frontend/src/main.tsx",
      "template": false,
      "content": "import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App.tsx'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  \u003cReact.StrictMode\u003e\n    \u003cBrowserRouter\u003e\n      \u003cApp /\u003e\n    \u003c/BrowserRouter\u003e\n  \u003c/React.StrictMode\u003e,\n)",
      "size": 327,
      "hash": "13bcde51fa5aad7d8f9d435785f5ac4a29670af0b600c777ae119faf464506d3"
    },
    {
      "path": "frontend/src/pages/Landing.tsx",
      "template": false,
      "content": "import React from 'react';\nimport { Hero, Features, CTA } from '../components';\n\n/**\n * Landing page component that shows the marketing/landing content\n * This will be displayed when users visit the root \"/\" path\n */\nconst Landing: React.FC = () =\u003e {\n  return (\n    \u003cmain className=\"flex-grow\"\u003e\n      \u003cHero /\u003e\n      \u003cFeatures /\u003e\n      \u003cCTA /\u003e\n    \u003c/main\u003e\n  );\n};\n\nexport default Landing;",
      "size": 387,
      "hash": "9827caa17cf3e38a56cd1c4529752be511da83860b5b9d64c79139c8dfd1b5ba"
    },
    {
      "path": "frontend/src/pages/Login.tsx",
      "template": false,
      "content": "import React, { useState } from 'react';\nimport { Navigate, Link, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { ApiError } from '../lib/api';\nimport { Button } from '../components/ui/Button';\nimport { Container } from '../components/ui/Container';\nimport { Card } from '../components/ui/Card';\nimport { Eye, EyeOff, ArrowLeft } from 'lucide-react';\n\nconst Login: React.FC = () =\u003e {\n  const { login, isAuthenticated, isLoading: authLoading } = useAuth();\n  const location = useLocation();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState\u003cRecord\u003cstring, string\u003e\u003e({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  // Get the return URL from location state (passed by ProtectedRoute)\n  const returnTo = location.state?.returnTo || '/dashboard';\n\n  // Redirect if already authenticated\n  if (isAuthenticated \u0026\u0026 !authLoading) {\n    return \u003cNavigate to={returnTo} replace /\u003e;\n  }\n\n  const handleChange = (e: React.ChangeEvent\u003cHTMLInputElement\u003e) =\u003e {\n    const { name, value } = e.target;\n    setFormData(prev =\u003e ({ ...prev, [name]: value }));\n    \n    // Clear errors when user types\n    if (errors[name]) {\n      setErrors(prev =\u003e ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) =\u003e {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      await login(formData);\n      // Navigation will be handled by the Navigate component above\n    } catch (error) {\n      if (error instanceof ApiError) {\n        if (error.details) {\n          setErrors(error.details);\n        } else {\n          setErrors({ general: error.message });\n        }\n      } else {\n        setErrors({ general: 'An unexpected error occurred' });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDemoLogin = async (role: 'admin' | 'user') =\u003e {\n    const demoCredentials = {\n      admin: { email: 'admin@example.com', password: 'admin123' },\n      user: { email: 'user@example.com', password: 'user1234' }\n    };\n\n    const credentials = demoCredentials[role];\n    setFormData(credentials);\n    \n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      await login(credentials);\n      // Navigation will be handled by the Navigate component above\n    } catch (error) {\n      if (error instanceof ApiError) {\n        setErrors({ general: error.message });\n      } else {\n        setErrors({ general: 'Demo login failed. You may need to register first.' });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    \u003cdiv className=\"min-h-screen bg-gradient-to-br from-primary-50 via-white to-accent-50\"\u003e\n      \u003cContainer\u003e\n        \u003cdiv className=\"flex min-h-screen\"\u003e\n          {/* Left Panel - Branding */}\n          \u003cdiv className=\"hidden lg:flex lg:w-1/2 flex-col justify-center px-12\"\u003e\n            \u003cdiv className=\"max-w-md\"\u003e\n              \u003cLink \n                to=\"/\" \n                className=\"inline-flex items-center text-primary-600 hover:text-primary-700 font-medium mb-8 transition-colors\"\n              \u003e\n                \u003cArrowLeft className=\"h-4 w-4 mr-2\" /\u003e\n                Back to home\n              \u003c/Link\u003e\n              \n              \u003cdiv className=\"flex items-center gap-3 mb-8\"\u003e\n                \u003cdiv className=\"w-12 h-12 bg-gradient-to-r from-primary-600 to-accent-600 rounded-xl flex items-center justify-center\"\u003e\n                  \u003cspan className=\"text-white font-bold text-lg\"\u003eFT\u003c/span\u003e\n                \u003c/div\u003e\n                \u003ch1 className=\"text-2xl font-bold text-secondary-900\"\u003e\n                  Fullstack Template\n                \u003c/h1\u003e\n              \u003c/div\u003e\n              \n              \u003ch2 className=\"text-4xl font-bold text-secondary-900 mb-6\"\u003e\n                Welcome back\n              \u003c/h2\u003e\n              \n              \u003cp className=\"text-lg text-secondary-600 mb-8\"\u003e\n                Sign in to access your dashboard and manage your account. \n                Experience the power of our full-stack authentication system.\n              \u003c/p\u003e\n\n              \u003cdiv className=\"space-y-4\"\u003e\n                \u003cdiv className=\"flex items-center text-secondary-600\"\u003e\n                  \u003cdiv className=\"w-2 h-2 bg-primary-500 rounded-full mr-3\"\u003e\u003c/div\u003e\n                  \u003cspan\u003eSecure JWT-based authentication\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center text-secondary-600\"\u003e\n                  \u003cdiv className=\"w-2 h-2 bg-primary-500 rounded-full mr-3\"\u003e\u003c/div\u003e\n                  \u003cspan\u003eRole-based access control (RBAC)\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center text-secondary-600\"\u003e\n                  \u003cdiv className=\"w-2 h-2 bg-primary-500 rounded-full mr-3\"\u003e\u003c/div\u003e\n                  \u003cspan\u003eModern React + TypeScript frontend\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center text-secondary-600\"\u003e\n                  \u003cdiv className=\"w-2 h-2 bg-primary-500 rounded-full mr-3\"\u003e\u003c/div\u003e\n                  \u003cspan\u003eGo backend with clean architecture\u003c/span\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n\n          {/* Right Panel - Login Form */}\n          \u003cdiv className=\"w-full lg:w-1/2 flex items-center justify-center px-6 py-12\"\u003e\n            \u003cdiv className=\"w-full max-w-md\"\u003e\n              {/* Mobile back button */}\n              \u003cdiv className=\"lg:hidden mb-8\"\u003e\n                \u003cLink \n                  to=\"/\" \n                  className=\"inline-flex items-center text-primary-600 hover:text-primary-700 font-medium transition-colors\"\n                \u003e\n                  \u003cArrowLeft className=\"h-4 w-4 mr-2\" /\u003e\n                  Back to home\n                \u003c/Link\u003e\n              \u003c/div\u003e\n\n              \u003cCard variant=\"elevated\" className=\"rounded-2xl shadow-xl animate-fade-in-up\"\u003e\n                \u003cdiv className=\"text-center mb-8\"\u003e\n                  \u003ch3 className=\"text-2xl font-bold text-secondary-900 mb-2\"\u003e\n                    Sign in to your account\n                  \u003c/h3\u003e\n                  \u003cp className=\"text-secondary-600\"\u003e\n                    Enter your credentials to access the dashboard\n                  \u003c/p\u003e\n                \u003c/div\u003e\n\n                {/* Demo Login Buttons */}\n                \u003cdiv className=\"mb-6\"\u003e\n                  \u003cp className=\"text-sm text-secondary-500 text-center mb-3\"\u003eQuick demo access:\u003c/p\u003e\n                  \u003cdiv className=\"grid grid-cols-2 gap-3\"\u003e\n                    \u003cButton\n                      variant=\"secondary\"\n                      onClick={() =\u003e handleDemoLogin('admin')}\n                      disabled={isLoading}\n                      className=\"text-sm\"\n                    \u003e\n                      Demo Admin\n                    \u003c/Button\u003e\n                    \u003cButton\n                      variant=\"secondary\"\n                      onClick={() =\u003e handleDemoLogin('user')}\n                      disabled={isLoading}\n                      className=\"text-sm\"\n                    \u003e\n                      Demo User\n                    \u003c/Button\u003e\n                  \u003c/div\u003e\n                  \n                  \u003cdiv className=\"relative my-6\"\u003e\n                    \u003cdiv className=\"absolute inset-0 flex items-center\"\u003e\n                      \u003cdiv className=\"w-full border-t border-secondary-200\" /\u003e\n                    \u003c/div\u003e\n                    \u003cdiv className=\"relative flex justify-center text-sm\"\u003e\n                      \u003cspan className=\"px-2 bg-white text-secondary-500\"\u003eOr continue with email\u003c/span\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n\n                {errors.general \u0026\u0026 (\n                  \u003cdiv className=\"mb-6 p-4 bg-error-50 border border-error-200 text-error-700 rounded-lg text-sm animate-slide-down\"\u003e\n                    {errors.general}\n                  \u003c/div\u003e\n                )}\n\n                \u003cform onSubmit={handleSubmit} className=\"space-y-6\"\u003e\n                  \u003cdiv\u003e\n                    \u003clabel className=\"block text-sm font-semibold text-secondary-900 mb-2\" htmlFor=\"email\"\u003e\n                      Email address\n                    \u003c/label\u003e\n                    \u003cinput\n                      className={`w-full px-4 py-3 rounded-lg border text-secondary-900 placeholder-secondary-400 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent ${\n                        errors.email ? 'border-error-300 bg-error-50 animate-bounce-gentle' : 'border-secondary-200 bg-white hover:border-secondary-300 focus:shadow-glow'\n                      }`}\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter your email address\"\n                      value={formData.email}\n                      onChange={handleChange}\n                      required\n                    /\u003e\n                    {errors.email \u0026\u0026 \u003cp className=\"text-error-600 text-sm mt-1 animate-slide-down\"\u003e{errors.email}\u003c/p\u003e}\n                  \u003c/div\u003e\n\n                  \u003cdiv\u003e\n                    \u003clabel className=\"block text-sm font-semibold text-secondary-900 mb-2\" htmlFor=\"password\"\u003e\n                      Password\n                    \u003c/label\u003e\n                    \u003cdiv className=\"relative\"\u003e\n                      \u003cinput\n                        className={`w-full px-4 py-3 pr-12 rounded-lg border text-secondary-900 placeholder-secondary-400 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent ${\n                          errors.password ? 'border-error-300 bg-error-50 animate-bounce-gentle' : 'border-secondary-200 bg-white hover:border-secondary-300 focus:shadow-glow'\n                        }`}\n                        id=\"password\"\n                        name=\"password\"\n                        type={showPassword ? 'text' : 'password'}\n                        placeholder=\"Enter your password\"\n                        value={formData.password}\n                        onChange={handleChange}\n                        required\n                      /\u003e\n                      \u003cbutton\n                        type=\"button\"\n                        className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-secondary-400 hover:text-secondary-600 transition-colors duration-200 hover:scale-110\"\n                        onClick={() =\u003e setShowPassword(!showPassword)}\n                      \u003e\n                        {showPassword ? \u003cEyeOff className=\"h-5 w-5\" /\u003e : \u003cEye className=\"h-5 w-5\" /\u003e}\n                      \u003c/button\u003e\n                    \u003c/div\u003e\n                    {errors.password \u0026\u0026 \u003cp className=\"text-error-600 text-sm mt-1 animate-slide-down\"\u003e{errors.password}\u003c/p\u003e}\n                  \u003c/div\u003e\n\n                  \u003cdiv className=\"flex items-center justify-between\"\u003e\n                    \u003clabel className=\"flex items-center\"\u003e\n                      \u003cinput\n                        type=\"checkbox\"\n                        className=\"rounded border-secondary-300 text-primary-600 focus:ring-primary-500\"\n                      /\u003e\n                      \u003cspan className=\"ml-2 text-sm text-secondary-600\"\u003eRemember me\u003c/span\u003e\n                    \u003c/label\u003e\n                    \u003cLink\n                      to=\"/forgot-password\"\n                      className=\"text-sm text-primary-600 hover:text-primary-700 font-medium\"\n                    \u003e\n                      Forgot password?\n                    \u003c/Link\u003e\n                  \u003c/div\u003e\n\n                  \u003cButton\n                    type=\"submit\"\n                    size=\"lg\"\n                    fullWidth\n                    loading={isLoading}\n                    loadingText=\"Signing in...\"\n                    disabled={isLoading}\n                  \u003e\n                    Sign in\n                  \u003c/Button\u003e\n                \u003c/form\u003e\n\n                \u003cdiv className=\"mt-8 text-center\"\u003e\n                  \u003cp className=\"text-secondary-600\"\u003e\n                    Don't have an account?{' '}\n                    \u003cLink\n                      to=\"/register\"\n                      className=\"text-primary-600 hover:text-primary-700 font-semibold\"\n                    \u003e\n                      Sign up for free\n                    \u003c/Link\u003e\n                  \u003c/p\u003e\n                \u003c/div\u003e\n\n                \u003cdiv className=\"mt-6 text-center\"\u003e\n                  \u003cp className=\"text-xs text-secondary-500\"\u003e\n                    By signing in, you agree to our{' '}\n                    \u003cLink to=\"/terms\" className=\"text-primary-600 hover:text-primary-700\"\u003e\n                      Terms of Service\n                    \u003c/Link\u003e{' '}\n                    and{' '}\n                    \u003cLink to=\"/privacy\" className=\"text-primary-600 hover:text-primary-700\"\u003e\n                      Privacy Policy\n                    \u003c/Link\u003e\n                  \u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/Card\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/Container\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default Login;",
      "size": 12985,
      "hash": "6a61b7318892722ceb47677d314d012a4cf32edf4dbd157cf7c0e398e5fa8664"
    },
    {
      "path": "frontend/src/pages/Register.tsx",
      "template": false,
      "content": "import React, { useState } from 'react';\nimport { Navigate, Link } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { ApiError } from '../lib/api';\nimport { Button } from '../components/ui/Button';\nimport { Container } from '../components/ui/Container';\nimport { Eye, EyeOff, ArrowLeft } from 'lucide-react';\n\nconst Register: React.FC = () =\u003e {\n  const { register, isAuthenticated, isLoading: authLoading } = useAuth();\n  const [formData, setFormData] = useState({\n    first_name: '',\n    last_name: '',\n    email: '',\n    password: '',\n    confirm_password: '',\n  });\n  const [errors, setErrors] = useState\u003cRecord\u003cstring, string\u003e\u003e({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  // Redirect if already authenticated\n  if (isAuthenticated \u0026\u0026 !authLoading) {\n    return \u003cNavigate to=\"/dashboard\" replace /\u003e;\n  }\n\n  const handleChange = (e: React.ChangeEvent\u003cHTMLInputElement\u003e) =\u003e {\n    const { name, value } = e.target;\n    setFormData(prev =\u003e ({ ...prev, [name]: value }));\n    \n    // Clear errors when user types\n    if (errors[name]) {\n      setErrors(prev =\u003e ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const validateForm = (): boolean =\u003e {\n    const newErrors: Record\u003cstring, string\u003e = {};\n\n    if (!formData.first_name.trim()) {\n      newErrors.first_name = 'First name is required';\n    }\n\n    if (!formData.last_name.trim()) {\n      newErrors.last_name = 'Last name is required';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length \u003c 8) {\n      newErrors.password = 'Password must be at least 8 characters long';\n    }\n\n    if (!formData.confirm_password) {\n      newErrors.confirm_password = 'Please confirm your password';\n    } else if (formData.password !== formData.confirm_password) {\n      newErrors.confirm_password = 'Passwords do not match';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) =\u003e {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      const { confirm_password, ...registerData } = formData;\n      await register(registerData);\n      // Navigation will be handled by the Navigate component above\n    } catch (error) {\n      if (error instanceof ApiError) {\n        if (error.details) {\n          setErrors(error.details);\n        } else {\n          setErrors({ general: error.message });\n        }\n      } else {\n        setErrors({ general: 'An unexpected error occurred' });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    \u003cdiv className=\"min-h-screen bg-gradient-to-br from-primary-50 via-white to-accent-50\"\u003e\n      \u003cContainer\u003e\n        \u003cdiv className=\"flex min-h-screen\"\u003e\n          {/* Left Panel - Branding */}\n          \u003cdiv className=\"hidden lg:flex lg:w-1/2 flex-col justify-center px-12\"\u003e\n            \u003cdiv className=\"max-w-md\"\u003e\n              \u003cLink \n                to=\"/\" \n                className=\"inline-flex items-center text-primary-600 hover:text-primary-700 font-medium mb-8 transition-colors\"\n              \u003e\n                \u003cArrowLeft className=\"h-4 w-4 mr-2\" /\u003e\n                Back to home\n              \u003c/Link\u003e\n              \n              \u003cdiv className=\"flex items-center gap-3 mb-8\"\u003e\n                \u003cdiv className=\"w-12 h-12 bg-gradient-to-r from-primary-600 to-accent-600 rounded-xl flex items-center justify-center\"\u003e\n                  \u003cspan className=\"text-white font-bold text-lg\"\u003eFT\u003c/span\u003e\n                \u003c/div\u003e\n                \u003ch1 className=\"text-2xl font-bold text-secondary-900\"\u003e\n                  Fullstack Template\n                \u003c/h1\u003e\n              \u003c/div\u003e\n              \n              \u003ch2 className=\"text-4xl font-bold text-secondary-900 mb-6\"\u003e\n                Join our platform\n              \u003c/h2\u003e\n              \n              \u003cp className=\"text-lg text-secondary-600 mb-8\"\u003e\n                Create your account to access powerful features and start building\n                amazing applications with our full-stack template.\n              \u003c/p\u003e\n\n              \u003cdiv className=\"space-y-4\"\u003e\n                \u003cdiv className=\"flex items-center text-secondary-600\"\u003e\n                  \u003cdiv className=\"w-2 h-2 bg-primary-500 rounded-full mr-3\"\u003e\u003c/div\u003e\n                  \u003cspan\u003eComplete authentication system\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center text-secondary-600\"\u003e\n                  \u003cdiv className=\"w-2 h-2 bg-primary-500 rounded-full mr-3\"\u003e\u003c/div\u003e\n                  \u003cspan\u003eRole-based permissions\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center text-secondary-600\"\u003e\n                  \u003cdiv className=\"w-2 h-2 bg-primary-500 rounded-full mr-3\"\u003e\u003c/div\u003e\n                  \u003cspan\u003eModern React + TypeScript\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"flex items-center text-secondary-600\"\u003e\n                  \u003cdiv className=\"w-2 h-2 bg-primary-500 rounded-full mr-3\"\u003e\u003c/div\u003e\n                  \u003cspan\u003eProduction-ready architecture\u003c/span\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n\n          {/* Right Panel - Register Form */}\n          \u003cdiv className=\"w-full lg:w-1/2 flex items-center justify-center px-6 py-12\"\u003e\n            \u003cdiv className=\"w-full max-w-md\"\u003e\n              {/* Mobile back button */}\n              \u003cdiv className=\"lg:hidden mb-8\"\u003e\n                \u003cLink \n                  to=\"/\" \n                  className=\"inline-flex items-center text-primary-600 hover:text-primary-700 font-medium transition-colors\"\n                \u003e\n                  \u003cArrowLeft className=\"h-4 w-4 mr-2\" /\u003e\n                  Back to home\n                \u003c/Link\u003e\n              \u003c/div\u003e\n\n              \u003cdiv className=\"bg-white rounded-2xl shadow-xl p-8\"\u003e\n                \u003cdiv className=\"text-center mb-8\"\u003e\n                  \u003ch3 className=\"text-2xl font-bold text-secondary-900 mb-2\"\u003e\n                    Create your account\n                  \u003c/h3\u003e\n                  \u003cp className=\"text-secondary-600\"\u003e\n                    Get started with your free account today\n                  \u003c/p\u003e\n                \u003c/div\u003e\n\n                {errors.general \u0026\u0026 (\n                  \u003cdiv className=\"mb-6 p-4 bg-red-50 border border-red-200 text-red-700 rounded-lg text-sm\"\u003e\n                    {errors.general}\n                  \u003c/div\u003e\n                )}\n\n                \u003cform onSubmit={handleSubmit} className=\"space-y-6\"\u003e\n                  \u003cdiv className=\"grid grid-cols-2 gap-4\"\u003e\n                    \u003cdiv\u003e\n                      \u003clabel className=\"block text-sm font-semibold text-secondary-900 mb-2\" htmlFor=\"first_name\"\u003e\n                        First Name\n                      \u003c/label\u003e\n                      \u003cinput\n                        className={`w-full px-4 py-3 rounded-lg border text-secondary-900 placeholder-secondary-400 transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent ${\n                          errors.first_name ? 'border-red-300 bg-red-50' : 'border-secondary-200 bg-white hover:border-secondary-300'\n                        }`}\n                        id=\"first_name\"\n                        name=\"first_name\"\n                        type=\"text\"\n                        placeholder=\"John\"\n                        value={formData.first_name}\n                        onChange={handleChange}\n                        required\n                      /\u003e\n                      {errors.first_name \u0026\u0026 \u003cp className=\"text-red-600 text-sm mt-1\"\u003e{errors.first_name}\u003c/p\u003e}\n                    \u003c/div\u003e\n\n                    \u003cdiv\u003e\n                      \u003clabel className=\"block text-sm font-semibold text-secondary-900 mb-2\" htmlFor=\"last_name\"\u003e\n                        Last Name\n                      \u003c/label\u003e\n                      \u003cinput\n                        className={`w-full px-4 py-3 rounded-lg border text-secondary-900 placeholder-secondary-400 transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent ${\n                          errors.last_name ? 'border-red-300 bg-red-50' : 'border-secondary-200 bg-white hover:border-secondary-300'\n                        }`}\n                        id=\"last_name\"\n                        name=\"last_name\"\n                        type=\"text\"\n                        placeholder=\"Doe\"\n                        value={formData.last_name}\n                        onChange={handleChange}\n                        required\n                      /\u003e\n                      {errors.last_name \u0026\u0026 \u003cp className=\"text-red-600 text-sm mt-1\"\u003e{errors.last_name}\u003c/p\u003e}\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n\n                  \u003cdiv\u003e\n                    \u003clabel className=\"block text-sm font-semibold text-secondary-900 mb-2\" htmlFor=\"email\"\u003e\n                      Email address\n                    \u003c/label\u003e\n                    \u003cinput\n                      className={`w-full px-4 py-3 rounded-lg border text-secondary-900 placeholder-secondary-400 transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent ${\n                        errors.email ? 'border-red-300 bg-red-50' : 'border-secondary-200 bg-white hover:border-secondary-300'\n                      }`}\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"john@example.com\"\n                      value={formData.email}\n                      onChange={handleChange}\n                      required\n                    /\u003e\n                    {errors.email \u0026\u0026 \u003cp className=\"text-red-600 text-sm mt-1\"\u003e{errors.email}\u003c/p\u003e}\n                  \u003c/div\u003e\n\n                  \u003cdiv\u003e\n                    \u003clabel className=\"block text-sm font-semibold text-secondary-900 mb-2\" htmlFor=\"password\"\u003e\n                      Password\n                    \u003c/label\u003e\n                    \u003cdiv className=\"relative\"\u003e\n                      \u003cinput\n                        className={`w-full px-4 py-3 pr-12 rounded-lg border text-secondary-900 placeholder-secondary-400 transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent ${\n                          errors.password ? 'border-red-300 bg-red-50' : 'border-secondary-200 bg-white hover:border-secondary-300'\n                        }`}\n                        id=\"password\"\n                        name=\"password\"\n                        type={showPassword ? 'text' : 'password'}\n                        placeholder=\"Enter your password\"\n                        value={formData.password}\n                        onChange={handleChange}\n                        required\n                      /\u003e\n                      \u003cbutton\n                        type=\"button\"\n                        className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-secondary-400 hover:text-secondary-600\"\n                        onClick={() =\u003e setShowPassword(!showPassword)}\n                      \u003e\n                        {showPassword ? \u003cEyeOff className=\"h-5 w-5\" /\u003e : \u003cEye className=\"h-5 w-5\" /\u003e}\n                      \u003c/button\u003e\n                    \u003c/div\u003e\n                    {errors.password \u0026\u0026 \u003cp className=\"text-red-600 text-sm mt-1\"\u003e{errors.password}\u003c/p\u003e}\n                  \u003c/div\u003e\n\n                  \u003cdiv\u003e\n                    \u003clabel className=\"block text-sm font-semibold text-secondary-900 mb-2\" htmlFor=\"confirm_password\"\u003e\n                      Confirm Password\n                    \u003c/label\u003e\n                    \u003cdiv className=\"relative\"\u003e\n                      \u003cinput\n                        className={`w-full px-4 py-3 pr-12 rounded-lg border text-secondary-900 placeholder-secondary-400 transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent ${\n                          errors.confirm_password ? 'border-red-300 bg-red-50' : 'border-secondary-200 bg-white hover:border-secondary-300'\n                        }`}\n                        id=\"confirm_password\"\n                        name=\"confirm_password\"\n                        type={showConfirmPassword ? 'text' : 'password'}\n                        placeholder=\"Confirm your password\"\n                        value={formData.confirm_password}\n                        onChange={handleChange}\n                        required\n                      /\u003e\n                      \u003cbutton\n                        type=\"button\"\n                        className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-secondary-400 hover:text-secondary-600\"\n                        onClick={() =\u003e setShowConfirmPassword(!showConfirmPassword)}\n                      \u003e\n                        {showConfirmPassword ? \u003cEyeOff className=\"h-5 w-5\" /\u003e : \u003cEye className=\"h-5 w-5\" /\u003e}\n                      \u003c/button\u003e\n                    \u003c/div\u003e\n                    {errors.confirm_password \u0026\u0026 \u003cp className=\"text-red-600 text-sm mt-1\"\u003e{errors.confirm_password}\u003c/p\u003e}\n                  \u003c/div\u003e\n\n                  \u003cdiv className=\"flex items-center\"\u003e\n                    \u003cinput\n                      type=\"checkbox\"\n                      id=\"terms\"\n                      className=\"rounded border-secondary-300 text-primary-600 focus:ring-primary-500\"\n                      required\n                    /\u003e\n                    \u003clabel htmlFor=\"terms\" className=\"ml-2 text-sm text-secondary-600\"\u003e\n                      I agree to the{' '}\n                      \u003cLink to=\"/terms\" className=\"text-primary-600 hover:text-primary-700 font-medium\"\u003e\n                        Terms of Service\n                      \u003c/Link\u003e{' '}\n                      and{' '}\n                      \u003cLink to=\"/privacy\" className=\"text-primary-600 hover:text-primary-700 font-medium\"\u003e\n                        Privacy Policy\n                      \u003c/Link\u003e\n                    \u003c/label\u003e\n                  \u003c/div\u003e\n\n                  \u003cButton\n                    type=\"submit\"\n                    className=\"w-full py-3\"\n                    disabled={isLoading}\n                  \u003e\n                    {isLoading ? (\n                      \u003cdiv className=\"flex items-center justify-center\"\u003e\n                        \u003cdiv className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"\u003e\u003c/div\u003e\n                        Creating account...\n                      \u003c/div\u003e\n                    ) : (\n                      'Create Account'\n                    )}\n                  \u003c/Button\u003e\n                \u003c/form\u003e\n\n                \u003cdiv className=\"mt-8 text-center\"\u003e\n                  \u003cp className=\"text-secondary-600\"\u003e\n                    Already have an account?{' '}\n                    \u003cLink\n                      to=\"/login\"\n                      className=\"text-primary-600 hover:text-primary-700 font-semibold\"\n                    \u003e\n                      Sign in instead\n                    \u003c/Link\u003e\n                  \u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/Container\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default Register;",
      "size": 15398,
      "hash": "03e19323194390794fa499aaafe94660345de51172d2a36af88baaff23631f96"
    },
    {
      "path": "frontend/src/pages/admin/AdminPanel.tsx",
      "template": false,
      "content": "import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { api, AdminStatsResponse, UserSummary, ApiError, AdminAuditLogRequest, EnhancedAuditLogEntry } from '../../lib/api';\nimport { Container } from '../../components/ui/Container';\nimport { Button } from '../../components/ui/Button';\n\ninterface AdminPanelProps {}\n\nexport const AdminPanel: React.FC\u003cAdminPanelProps\u003e = () =\u003e {\n  const { user } = useAuth();\n  const [activeTab, setActiveTab] = useState\u003c'dashboard' | 'users' | 'audit'\u003e('dashboard');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState\u003cstring | null\u003e(null);\n\n  // Dashboard data\n  const [stats, setStats] = useState\u003cAdminStatsResponse | null\u003e(null);\n\n  // Users data\n  const [users, setUsers] = useState\u003cUserSummary[]\u003e([]);\n  const [usersLoading, setUsersLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState\u003c'all' | 'active' | 'inactive' | 'suspended'\u003e('all');\n  const [roleFilter, setRoleFilter] = useState\u003c'all' | 'user' | 'admin'\u003e('all');\n\n  // Audit logs data\n  const [auditLogs, setAuditLogs] = useState\u003cEnhancedAuditLogEntry[]\u003e([]);\n  const [auditLoading, setAuditLoading] = useState(false);\n  const [auditFilters] = useState\u003cAdminAuditLogRequest\u003e({\n    page: 1,\n    page_size: 20,\n  });\n  const [dateRange, setDateRange] = useState({ from: '', to: '' });\n  const [selectedAction, setSelectedAction] = useState\u003cstring\u003e('all');\n  const [selectedLevel, setSelectedLevel] = useState\u003c'all' | 'info' | 'warning' | 'error'\u003e('all');\n  const [auditSearchTerm, setAuditSearchTerm] = useState('');\n\n  // Check if user is admin\n  if (user?.role !== 'admin') {\n    return (\n      \u003cContainer\u003e\n        \u003cdiv className=\"text-center py-12\"\u003e\n          \u003cdiv className=\"text-red-600 mb-4\"\u003eAccess Denied\u003c/div\u003e\n          \u003cdiv className=\"text-gray-600\"\u003eYou don't have permission to access the admin panel.\u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/Container\u003e\n    );\n  }\n\n  const fetchStats = async () =\u003e {\n    try {\n      setLoading(true);\n      const data = await api.getAdminStats();\n      setStats(data);\n    } catch (err) {\n      if (err instanceof ApiError) {\n        setError(err.message);\n      } else {\n        setError('Failed to load admin stats');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchAuditLogs = async () =\u003e {\n    try {\n      setAuditLoading(true);\n      const params: AdminAuditLogRequest = {\n        ...auditFilters,\n        action: selectedAction !== 'all' ? selectedAction : undefined,\n        level: selectedLevel !== 'all' ? selectedLevel : undefined,\n        date_from: dateRange.from || undefined,\n        date_to: dateRange.to || undefined,\n      };\n      \n      const data = await api.getAuditLogs(params);\n      setAuditLogs(data.logs);\n    } catch (err) {\n      if (err instanceof ApiError) {\n        setError(err.message);\n      } else {\n        setError('Failed to load audit logs');\n      }\n    } finally {\n      setAuditLoading(false);\n    }\n  };\n\n  const fetchUsers = async () =\u003e {\n    try {\n      setUsersLoading(true);\n      const params = {\n        search: searchTerm || undefined,\n        status: statusFilter !== 'all' ? statusFilter : undefined,\n        role: roleFilter !== 'all' ? roleFilter : undefined,\n        page: 1,\n        page_size: 50,\n      };\n      \n      const data = await api.getUsers(params);\n      setUsers(data.users);\n    } catch (err) {\n      if (err instanceof ApiError) {\n        setError(err.message);\n      } else {\n        setError('Failed to load users');\n      }\n    } finally {\n      setUsersLoading(false);\n    }\n  };\n\n  useEffect(() =\u003e {\n    if (activeTab === 'dashboard') {\n      fetchStats();\n    } else if (activeTab === 'users') {\n      fetchUsers();\n    } else if (activeTab === 'audit') {\n      fetchAuditLogs();\n    }\n  }, [activeTab]);\n\n  useEffect(() =\u003e {\n    if (activeTab === 'users') {\n      const debounceTimer = setTimeout(() =\u003e {\n        fetchUsers();\n      }, 300);\n      return () =\u003e clearTimeout(debounceTimer);\n    }\n  }, [searchTerm, statusFilter, roleFilter]);\n\n  useEffect(() =\u003e {\n    if (activeTab === 'audit') {\n      const debounceTimer = setTimeout(() =\u003e {\n        fetchAuditLogs();\n      }, 300);\n      return () =\u003e clearTimeout(debounceTimer);\n    }\n  }, [selectedAction, selectedLevel, dateRange, auditSearchTerm]);\n\n  const handleUserAction = async (userId: number, action: 'activate' | 'deactivate' | 'suspend') =\u003e {\n    try {\n      const reason = prompt(`Please provide a reason for ${action}ing this user:`);\n      if (!reason) return;\n\n      const statusMap = {\n        activate: 'active' as const,\n        deactivate: 'inactive' as const,\n        suspend: 'suspended' as const,\n      };\n\n      await api.updateUserStatus(userId, {\n        status: statusMap[action],\n        reason,\n      });\n\n      fetchUsers(); // Refresh the user list\n    } catch (err) {\n      if (err instanceof ApiError) {\n        alert(`Error: ${err.message}`);\n      } else {\n        alert('Failed to update user status');\n      }\n    }\n  };\n\n  const getLevelColor = (level: 'info' | 'warning' | 'error') =\u003e {\n    switch (level) {\n      case 'info':\n        return 'bg-blue-100 text-blue-800';\n      case 'warning':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'error':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getActionColor = (action: string) =\u003e {\n    if (action.includes('login') || action.includes('auth')) {\n      return 'bg-green-100 text-green-800';\n    } else if (action.includes('delete') || action.includes('suspend')) {\n      return 'bg-red-100 text-red-800';\n    } else if (action.includes('update') || action.includes('change')) {\n      return 'bg-blue-100 text-blue-800';\n    } else if (action.includes('create')) {\n      return 'bg-purple-100 text-purple-800';\n    }\n    return 'bg-gray-100 text-gray-800';\n  };\n\n  const tabs = [\n    { id: 'dashboard' as const, name: 'Dashboard', icon: '📊' },\n    { id: 'users' as const, name: 'Users', icon: '👥' },\n    { id: 'audit' as const, name: 'Audit Logs', icon: '📋' },\n  ];\n\n  return (\n    \u003cContainer\u003e\n      \u003cdiv className=\"py-8\"\u003e\n        {/* Header */}\n        \u003cdiv className=\"mb-8\"\u003e\n          \u003ch1 className=\"text-3xl font-bold text-gray-900\"\u003eAdmin Panel\u003c/h1\u003e\n          \u003cp className=\"text-gray-600 mt-2\"\u003e\n            Manage users, view system statistics, and monitor activity.\n          \u003c/p\u003e\n        \u003c/div\u003e\n\n        {/* Error Message */}\n        {error \u0026\u0026 (\n          \u003cdiv className=\"mb-6 p-4 bg-red-50 text-red-800 rounded-md\"\u003e\n            {error}\n            \u003cbutton\n              onClick={() =\u003e setError(null)}\n              className=\"ml-2 text-red-600 hover:text-red-800\"\n            \u003e\n              ×\n            \u003c/button\u003e\n          \u003c/div\u003e\n        )}\n\n        \u003cdiv className=\"bg-white shadow rounded-lg\"\u003e\n          {/* Tabs */}\n          \u003cdiv className=\"border-b border-gray-200\"\u003e\n            \u003cnav className=\"-mb-px flex space-x-8 px-6\"\u003e\n              {tabs.map((tab) =\u003e (\n                \u003cbutton\n                  key={tab.id}\n                  onClick={() =\u003e setActiveTab(tab.id)}\n                  className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                \u003e\n                  \u003cspan className=\"mr-2\"\u003e{tab.icon}\u003c/span\u003e\n                  {tab.name}\n                \u003c/button\u003e\n              ))}\n            \u003c/nav\u003e\n          \u003c/div\u003e\n\n          {/* Tab Content */}\n          \u003cdiv className=\"p-6\"\u003e\n            {/* Dashboard Tab */}\n            {activeTab === 'dashboard' \u0026\u0026 (\n              \u003cdiv\u003e\n                \u003ch3 className=\"text-lg font-medium text-gray-900 mb-6\"\u003eSystem Overview\u003c/h3\u003e\n                \n                {loading ? (\n                  \u003cdiv className=\"flex items-center justify-center py-12\"\u003e\n                    \u003cdiv className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\u003e\u003c/div\u003e\n                  \u003c/div\u003e\n                ) : stats ? (\n                  \u003c\u003e\n                    {/* Stats Grid */}\n                    \u003cdiv className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\"\u003e\n                      \u003cdiv className=\"bg-gray-50 rounded-lg p-6\"\u003e\n                        \u003cdiv className=\"text-sm font-medium text-gray-500\"\u003eTotal Users\u003c/div\u003e\n                        \u003cdiv className=\"text-3xl font-bold text-gray-900\"\u003e{stats.total_users}\u003c/div\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"bg-green-50 rounded-lg p-6\"\u003e\n                        \u003cdiv className=\"text-sm font-medium text-green-600\"\u003eActive Users\u003c/div\u003e\n                        \u003cdiv className=\"text-3xl font-bold text-green-900\"\u003e{stats.active_users}\u003c/div\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"bg-yellow-50 rounded-lg p-6\"\u003e\n                        \u003cdiv className=\"text-sm font-medium text-yellow-600\"\u003eInactive Users\u003c/div\u003e\n                        \u003cdiv className=\"text-3xl font-bold text-yellow-900\"\u003e{stats.inactive_users}\u003c/div\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"bg-red-50 rounded-lg p-6\"\u003e\n                        \u003cdiv className=\"text-sm font-medium text-red-600\"\u003eSuspended Users\u003c/div\u003e\n                        \u003cdiv className=\"text-3xl font-bold text-red-900\"\u003e{stats.suspended_users}\u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n\n                    {/* Additional Stats */}\n                    \u003cdiv className=\"grid grid-cols-1 md:grid-cols-3 gap-6\"\u003e\n                      \u003cdiv className=\"bg-white border rounded-lg p-6\"\u003e\n                        \u003cdiv className=\"text-sm font-medium text-gray-500\"\u003eAdmin Users\u003c/div\u003e\n                        \u003cdiv className=\"text-2xl font-bold text-gray-900\"\u003e{stats.admin_users}\u003c/div\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"bg-white border rounded-lg p-6\"\u003e\n                        \u003cdiv className=\"text-sm font-medium text-gray-500\"\u003eNew Users Today\u003c/div\u003e\n                        \u003cdiv className=\"text-2xl font-bold text-gray-900\"\u003e{stats.new_users_today}\u003c/div\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"bg-white border rounded-lg p-6\"\u003e\n                        \u003cdiv className=\"text-sm font-medium text-gray-500\"\u003eNew Users This Week\u003c/div\u003e\n                        \u003cdiv className=\"text-2xl font-bold text-gray-900\"\u003e{stats.new_users_this_week}\u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/\u003e\n                ) : (\n                  \u003cdiv className=\"text-center text-gray-500 py-12\"\u003e\n                    No data available\n                  \u003c/div\u003e\n                )}\n              \u003c/div\u003e\n            )}\n\n            {/* Users Tab */}\n            {activeTab === 'users' \u0026\u0026 (\n              \u003cdiv\u003e\n                \u003cdiv className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6\"\u003e\n                  \u003ch3 className=\"text-lg font-medium text-gray-900\"\u003eUser Management\u003c/h3\u003e\n                  \u003cButton onClick={fetchUsers} disabled={usersLoading}\u003e\n                    {usersLoading ? 'Loading...' : 'Refresh'}\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n\n                {/* Filters */}\n                \u003cdiv className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6\"\u003e\n                  \u003cdiv\u003e\n                    \u003clabel className=\"block text-sm font-medium text-gray-700 mb-1\"\u003eSearch\u003c/label\u003e\n                    \u003cinput\n                      type=\"text\"\n                      value={searchTerm}\n                      onChange={(e) =\u003e setSearchTerm(e.target.value)}\n                      placeholder=\"Search users...\"\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    /\u003e\n                  \u003c/div\u003e\n                  \u003cdiv\u003e\n                    \u003clabel className=\"block text-sm font-medium text-gray-700 mb-1\"\u003eStatus\u003c/label\u003e\n                    \u003cselect\n                      value={statusFilter}\n                      onChange={(e) =\u003e setStatusFilter(e.target.value as any)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    \u003e\n                      \u003coption value=\"all\"\u003eAll Status\u003c/option\u003e\n                      \u003coption value=\"active\"\u003eActive\u003c/option\u003e\n                      \u003coption value=\"inactive\"\u003eInactive\u003c/option\u003e\n                      \u003coption value=\"suspended\"\u003eSuspended\u003c/option\u003e\n                    \u003c/select\u003e\n                  \u003c/div\u003e\n                  \u003cdiv\u003e\n                    \u003clabel className=\"block text-sm font-medium text-gray-700 mb-1\"\u003eRole\u003c/label\u003e\n                    \u003cselect\n                      value={roleFilter}\n                      onChange={(e) =\u003e setRoleFilter(e.target.value as any)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    \u003e\n                      \u003coption value=\"all\"\u003eAll Roles\u003c/option\u003e\n                      \u003coption value=\"user\"\u003eUser\u003c/option\u003e\n                      \u003coption value=\"admin\"\u003eAdmin\u003c/option\u003e\n                    \u003c/select\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n\n                {/* Users Table */}\n                \u003cdiv className=\"overflow-x-auto\"\u003e\n                  \u003ctable className=\"min-w-full divide-y divide-gray-200\"\u003e\n                    \u003cthead className=\"bg-gray-50\"\u003e\n                      \u003ctr\u003e\n                        \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                          User\n                        \u003c/th\u003e\n                        \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                          Role\n                        \u003c/th\u003e\n                        \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                          Status\n                        \u003c/th\u003e\n                        \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                          Last Login\n                        \u003c/th\u003e\n                        \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                          Actions\n                        \u003c/th\u003e\n                      \u003c/tr\u003e\n                    \u003c/thead\u003e\n                    \u003ctbody className=\"bg-white divide-y divide-gray-200\"\u003e\n                      {users.map((user) =\u003e (\n                        \u003ctr key={user.id}\u003e\n                          \u003ctd className=\"px-6 py-4 whitespace-nowrap\"\u003e\n                            \u003cdiv className=\"flex items-center\"\u003e\n                              \u003cdiv className=\"flex-shrink-0 h-10 w-10\"\u003e\n                                {user.avatar ? (\n                                  \u003cimg \n                                    className=\"h-10 w-10 rounded-full\" \n                                    src={user.avatar} \n                                    alt={`${user.first_name} ${user.last_name}`}\n                                  /\u003e\n                                ) : (\n                                  \u003cdiv className=\"h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center\"\u003e\n                                    \u003cspan className=\"text-sm font-medium text-gray-700\"\u003e\n                                      {user.first_name[0]}{user.last_name[0]}\n                                    \u003c/span\u003e\n                                  \u003c/div\u003e\n                                )}\n                              \u003c/div\u003e\n                              \u003cdiv className=\"ml-4\"\u003e\n                                \u003cdiv className=\"text-sm font-medium text-gray-900\"\u003e\n                                  {user.first_name} {user.last_name}\n                                \u003c/div\u003e\n                                \u003cdiv className=\"text-sm text-gray-500\"\u003e\n                                  {user.email}\n                                \u003c/div\u003e\n                              \u003c/div\u003e\n                            \u003c/div\u003e\n                          \u003c/td\u003e\n                          \u003ctd className=\"px-6 py-4 whitespace-nowrap\"\u003e\n                            \u003cspan className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                              user.role === 'admin' \n                                ? 'bg-purple-100 text-purple-800' \n                                : 'bg-gray-100 text-gray-800'\n                            }`}\u003e\n                              {user.role}\n                            \u003c/span\u003e\n                          \u003c/td\u003e\n                          \u003ctd className=\"px-6 py-4 whitespace-nowrap\"\u003e\n                            \u003cspan className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                              user.status === 'active' \n                                ? 'bg-green-100 text-green-800' \n                                : user.status === 'suspended'\n                                ? 'bg-red-100 text-red-800'\n                                : 'bg-yellow-100 text-yellow-800'\n                            }`}\u003e\n                              {user.status}\n                            \u003c/span\u003e\n                          \u003c/td\u003e\n                          \u003ctd className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\"\u003e\n                            {user.last_login_at \n                              ? new Date(user.last_login_at).toLocaleDateString()\n                              : 'Never'\n                            }\n                          \u003c/td\u003e\n                          \u003ctd className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\"\u003e\n                            {user.status === 'active' ? (\n                              \u003c\u003e\n                                \u003cbutton\n                                  onClick={() =\u003e handleUserAction(user.id, 'deactivate')}\n                                  className=\"text-yellow-600 hover:text-yellow-900\"\n                                \u003e\n                                  Deactivate\n                                \u003c/button\u003e\n                                \u003cbutton\n                                  onClick={() =\u003e handleUserAction(user.id, 'suspend')}\n                                  className=\"text-red-600 hover:text-red-900\"\n                                \u003e\n                                  Suspend\n                                \u003c/button\u003e\n                              \u003c/\u003e\n                            ) : (\n                              \u003cbutton\n                                onClick={() =\u003e handleUserAction(user.id, 'activate')}\n                                className=\"text-green-600 hover:text-green-900\"\n                              \u003e\n                                Activate\n                              \u003c/button\u003e\n                            )}\n                          \u003c/td\u003e\n                        \u003c/tr\u003e\n                      ))}\n                    \u003c/tbody\u003e\n                  \u003c/table\u003e\n                  \n                  {users.length === 0 \u0026\u0026 !usersLoading \u0026\u0026 (\n                    \u003cdiv className=\"text-center text-gray-500 py-8\"\u003e\n                      No users found\n                    \u003c/div\u003e\n                  )}\n                \u003c/div\u003e\n              \u003c/div\u003e\n            )}\n\n            {/* Audit Tab */}\n            {activeTab === 'audit' \u0026\u0026 (\n              \u003cdiv\u003e\n                \u003cdiv className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6\"\u003e\n                  \u003ch3 className=\"text-lg font-medium text-gray-900\"\u003eAudit Logs\u003c/h3\u003e\n                  \u003cButton onClick={fetchAuditLogs} disabled={auditLoading}\u003e\n                    {auditLoading ? 'Loading...' : 'Refresh'}\n                  \u003c/Button\u003e\n                \u003c/div\u003e\n\n                {/* Summary Cards */}\n                \u003cdiv className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\"\u003e\n                  \u003cdiv className=\"bg-blue-50 rounded-lg p-4\"\u003e\n                    \u003cdiv className=\"text-sm font-medium text-blue-600\"\u003eTotal Events\u003c/div\u003e\n                    \u003cdiv className=\"text-2xl font-bold text-blue-900\"\u003e{auditLogs.length}\u003c/div\u003e\n                  \u003c/div\u003e\n                  \u003cdiv className=\"bg-green-50 rounded-lg p-4\"\u003e\n                    \u003cdiv className=\"text-sm font-medium text-green-600\"\u003eInfo Events\u003c/div\u003e\n                    \u003cdiv className=\"text-2xl font-bold text-green-900\"\u003e\n                      {auditLogs.filter(log =\u003e log.level === 'info').length}\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n                  \u003cdiv className=\"bg-yellow-50 rounded-lg p-4\"\u003e\n                    \u003cdiv className=\"text-sm font-medium text-yellow-600\"\u003eWarning Events\u003c/div\u003e\n                    \u003cdiv className=\"text-2xl font-bold text-yellow-900\"\u003e\n                      {auditLogs.filter(log =\u003e log.level === 'warning').length}\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n                  \u003cdiv className=\"bg-red-50 rounded-lg p-4\"\u003e\n                    \u003cdiv className=\"text-sm font-medium text-red-600\"\u003eError Events\u003c/div\u003e\n                    \u003cdiv className=\"text-2xl font-bold text-red-900\"\u003e\n                      {auditLogs.filter(log =\u003e log.level === 'error').length}\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n\n                {/* Filters */}\n                \u003cdiv className=\"bg-gray-50 rounded-lg p-4 mb-6\"\u003e\n                  \u003cdiv className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4\"\u003e\n                    \u003cdiv\u003e\n                      \u003clabel className=\"block text-sm font-medium text-gray-700 mb-1\"\u003eDate From\u003c/label\u003e\n                      \u003cinput\n                        type=\"date\"\n                        value={dateRange.from}\n                        onChange={(e) =\u003e setDateRange({ ...dateRange, from: e.target.value })}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      /\u003e\n                    \u003c/div\u003e\n                    \u003cdiv\u003e\n                      \u003clabel className=\"block text-sm font-medium text-gray-700 mb-1\"\u003eDate To\u003c/label\u003e\n                      \u003cinput\n                        type=\"date\"\n                        value={dateRange.to}\n                        onChange={(e) =\u003e setDateRange({ ...dateRange, to: e.target.value })}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      /\u003e\n                    \u003c/div\u003e\n                    \u003cdiv\u003e\n                      \u003clabel className=\"block text-sm font-medium text-gray-700 mb-1\"\u003eAction\u003c/label\u003e\n                      \u003cselect\n                        value={selectedAction}\n                        onChange={(e) =\u003e setSelectedAction(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      \u003e\n                        \u003coption value=\"all\"\u003eAll Actions\u003c/option\u003e\n                        \u003coption value=\"login\"\u003eLogin\u003c/option\u003e\n                        \u003coption value=\"logout\"\u003eLogout\u003c/option\u003e\n                        \u003coption value=\"create\"\u003eCreate\u003c/option\u003e\n                        \u003coption value=\"update\"\u003eUpdate\u003c/option\u003e\n                        \u003coption value=\"delete\"\u003eDelete\u003c/option\u003e\n                        \u003coption value=\"suspend\"\u003eSuspend\u003c/option\u003e\n                        \u003coption value=\"activate\"\u003eActivate\u003c/option\u003e\n                      \u003c/select\u003e\n                    \u003c/div\u003e\n                    \u003cdiv\u003e\n                      \u003clabel className=\"block text-sm font-medium text-gray-700 mb-1\"\u003eLevel\u003c/label\u003e\n                      \u003cselect\n                        value={selectedLevel}\n                        onChange={(e) =\u003e setSelectedLevel(e.target.value as any)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      \u003e\n                        \u003coption value=\"all\"\u003eAll Levels\u003c/option\u003e\n                        \u003coption value=\"info\"\u003eInfo\u003c/option\u003e\n                        \u003coption value=\"warning\"\u003eWarning\u003c/option\u003e\n                        \u003coption value=\"error\"\u003eError\u003c/option\u003e\n                      \u003c/select\u003e\n                    \u003c/div\u003e\n                    \u003cdiv\u003e\n                      \u003clabel className=\"block text-sm font-medium text-gray-700 mb-1\"\u003eSearch\u003c/label\u003e\n                      \u003cinput\n                        type=\"text\"\n                        value={auditSearchTerm}\n                        onChange={(e) =\u003e setAuditSearchTerm(e.target.value)}\n                        placeholder=\"Search logs...\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      /\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n\n                {/* Audit Logs Table */}\n                \u003cdiv className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\"\u003e\n                  {auditLoading ? (\n                    \u003cdiv className=\"flex items-center justify-center py-12\"\u003e\n                      \u003cdiv className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\u003e\u003c/div\u003e\n                    \u003c/div\u003e\n                  ) : (\n                    \u003c\u003e\n                      \u003cdiv className=\"overflow-x-auto\"\u003e\n                        \u003ctable className=\"min-w-full divide-y divide-gray-200\"\u003e\n                          \u003cthead className=\"bg-gray-50\"\u003e\n                            \u003ctr\u003e\n                              \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                                Timestamp\n                              \u003c/th\u003e\n                              \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                                User\n                              \u003c/th\u003e\n                              \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                                Action\n                              \u003c/th\u003e\n                              \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                                Level\n                              \u003c/th\u003e\n                              \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                                IP Address\n                              \u003c/th\u003e\n                              \u003cth className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\u003e\n                                Description\n                              \u003c/th\u003e\n                            \u003c/tr\u003e\n                          \u003c/thead\u003e\n                          \u003ctbody className=\"bg-white divide-y divide-gray-200\"\u003e\n                            {auditLogs.map((log) =\u003e (\n                              \u003ctr key={log.id} className=\"hover:bg-gray-50\"\u003e\n                                \u003ctd className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\"\u003e\n                                  {new Date(log.created_at).toLocaleString()}\n                                \u003c/td\u003e\n                                \u003ctd className=\"px-6 py-4 whitespace-nowrap\"\u003e\n                                  {log.user ? (\n                                    \u003cdiv className=\"flex items-center\"\u003e\n                                      \u003cdiv className=\"flex-shrink-0 h-8 w-8\"\u003e\n                                        {log.user.avatar ? (\n                                          \u003cimg \n                                            className=\"h-8 w-8 rounded-full\" \n                                            src={log.user.avatar} \n                                            alt={`${log.user.first_name} ${log.user.last_name}`}\n                                          /\u003e\n                                        ) : (\n                                          \u003cdiv className=\"h-8 w-8 rounded-full bg-gray-300 flex items-center justify-center\"\u003e\n                                            \u003cspan className=\"text-xs font-medium text-gray-700\"\u003e\n                                              {log.user.first_name[0]}{log.user.last_name[0]}\n                                            \u003c/span\u003e\n                                          \u003c/div\u003e\n                                        )}\n                                      \u003c/div\u003e\n                                      \u003cdiv className=\"ml-3\"\u003e\n                                        \u003cdiv className=\"text-sm font-medium text-gray-900\"\u003e\n                                          {log.user.first_name} {log.user.last_name}\n                                        \u003c/div\u003e\n                                        \u003cdiv className=\"text-sm text-gray-500\"\u003e\n                                          {log.user.email}\n                                        \u003c/div\u003e\n                                      \u003c/div\u003e\n                                    \u003c/div\u003e\n                                  ) : (\n                                    \u003cspan className=\"text-sm text-gray-500\"\u003eSystem\u003c/span\u003e\n                                  )}\n                                \u003c/td\u003e\n                                \u003ctd className=\"px-6 py-4 whitespace-nowrap\"\u003e\n                                  \u003cspan className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                                    getActionColor(log.action)\n                                  }`}\u003e\n                                    {log.action}\n                                  \u003c/span\u003e\n                                \u003c/td\u003e\n                                \u003ctd className=\"px-6 py-4 whitespace-nowrap\"\u003e\n                                  \u003cspan className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                                    getLevelColor(log.level)\n                                  }`}\u003e\n                                    {log.level.toUpperCase()}\n                                  \u003c/span\u003e\n                                \u003c/td\u003e\n                                \u003ctd className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\"\u003e\n                                  {log.ip_address}\n                                \u003c/td\u003e\n                                \u003ctd className=\"px-6 py-4 text-sm text-gray-900\"\u003e\n                                  \u003cdiv className=\"max-w-xs truncate\" title={log.description}\u003e\n                                    {log.description}\n                                  \u003c/div\u003e\n                                  {log.metadata \u0026\u0026 Object.keys(log.metadata).length \u003e 0 \u0026\u0026 (\n                                    \u003cdiv className=\"mt-1\"\u003e\n                                      \u003cbutton \n                                        className=\"text-xs text-blue-600 hover:text-blue-800\"\n                                        onClick={() =\u003e {\n                                          alert(`Metadata: ${JSON.stringify(log.metadata, null, 2)}`);\n                                        }}\n                                      \u003e\n                                        View Details\n                                      \u003c/button\u003e\n                                    \u003c/div\u003e\n                                  )}\n                                \u003c/td\u003e\n                              \u003c/tr\u003e\n                            ))}\n                          \u003c/tbody\u003e\n                        \u003c/table\u003e\n                      \u003c/div\u003e\n                      \n                      {auditLogs.length === 0 \u0026\u0026 !auditLoading \u0026\u0026 (\n                        \u003cdiv className=\"text-center text-gray-500 py-8\"\u003e\n                          No audit logs found\n                        \u003c/div\u003e\n                      )}\n                    \u003c/\u003e\n                  )}\n                \u003c/div\u003e\n              \u003c/div\u003e\n            )}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/Container\u003e\n  );\n};\n\nexport default AdminPanel;",
      "size": 32069,
      "hash": "767a6cfc47e9efa848074b6a5e8021e582d379e6349a0d2d501988462380eda3"
    },
    {
      "path": "frontend/src/pages/admin/index.ts",
      "template": false,
      "content": "export { default as AdminPanel } from './AdminPanel';",
      "size": 53,
      "hash": "7ebacbaa426500b15db441f364c2963ac33ea539a1b62547c8eff8169c3f4d94"
    },
    {
      "path": "frontend/src/pages/home/Dashboard.tsx",
      "template": false,
      "content": "import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { api, DashboardResponse, ApiError } from '../../lib/api';\nimport { Button } from '../../components/ui/Button';\nimport { Card, CardHeader, CardContent } from '../../components/ui/Card';\nimport { SkeletonStats, SkeletonCard } from '../../components/ui/Skeleton';\n\nexport const Dashboard: React.FC = () =\u003e {\n  const { user } = useAuth();\n  const [dashboardData, setDashboardData] = useState\u003cDashboardResponse | null\u003e(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState\u003cstring | null\u003e(null);\n\n  useEffect(() =\u003e {\n    const fetchDashboard = async () =\u003e {\n      try {\n        setLoading(true);\n        const data = await api.getDashboard();\n        setDashboardData(data);\n      } catch (err) {\n        if (err instanceof ApiError) {\n          setError(err.message);\n        } else {\n          setError('Failed to load dashboard');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboard();\n  }, []);\n\n  if (loading) {\n    return (\n      \u003cdiv className=\"p-8\"\u003e\n        {/* Welcome Header Skeleton */}\n        \u003cdiv className=\"mb-8 space-y-3\"\u003e\n          \u003cdiv className=\"h-8 bg-secondary-200 rounded-lg w-1/3 animate-pulse\"\u003e\u003c/div\u003e\n          \u003cdiv className=\"h-4 bg-secondary-200 rounded-lg w-2/3 animate-pulse\"\u003e\u003c/div\u003e\n        \u003c/div\u003e\n\n        {/* Stats Cards Skeleton */}\n        \u003cSkeletonStats className=\"mb-8\" /\u003e\n\n        {/* Grid sections skeleton */}\n        \u003cdiv className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\"\u003e\n          \u003cSkeletonCard /\u003e\n          \u003cSkeletonCard /\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  if (error) {\n    return (\n      \u003cdiv className=\"p-8\"\u003e\n        \u003cdiv className=\"text-center py-12\"\u003e\n          \u003cdiv className=\"text-error-600 mb-4\"\u003e{error}\u003c/div\u003e\n          \u003cButton variant=\"destructive\" onClick={() =\u003e window.location.reload()}\u003eTry Again\u003c/Button\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  if (!dashboardData) {\n    return (\n      \u003cdiv className=\"p-8\"\u003e\n        \u003cdiv className=\"text-center py-12\"\u003e\n          \u003cdiv className=\"text-gray-600\"\u003eNo dashboard data available\u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    );\n  }\n\n  const { stats, recent_logins, notifications } = dashboardData;\n\n  return (\n    \u003cdiv className=\"p-8\"\u003e\n        {/* Welcome Header */}\n        \u003cdiv className=\"mb-8\"\u003e\n          \u003ch1 className=\"text-2xl font-bold text-secondary-900\"\u003e\n            Welcome back, {user?.first_name}!\n          \u003c/h1\u003e\n          \u003cp className=\"text-secondary-600 mt-2\"\u003e\n            Here's an overview of your account activity.\n          \u003c/p\u003e\n        \u003c/div\u003e\n\n        {/* Stats Cards */}\n        \u003cdiv className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\"\u003e\n          \u003cCard\u003e\n            \u003cdiv className=\"flex items-center\"\u003e\n              \u003cdiv className=\"flex-shrink-0\"\u003e\n                \u003cdiv className=\"w-10 h-10 bg-primary-100 rounded-xl flex items-center justify-center\"\u003e\n                  \u003csvg className=\"w-5 h-5 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\u003e\n                    \u003cpath strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" /\u003e\n                  \u003c/svg\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"ml-4\"\u003e\n                \u003cdiv className=\"text-sm font-medium text-secondary-600\"\u003eTotal Logins\u003c/div\u003e\n                \u003cdiv className=\"text-2xl font-bold text-secondary-900\"\u003e{stats.total_logins}\u003c/div\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/Card\u003e\n\n          \u003cCard\u003e\n            \u003cdiv className=\"flex items-center\"\u003e\n              \u003cdiv className=\"flex-shrink-0\"\u003e\n                \u003cdiv className=\"w-10 h-10 bg-success-100 rounded-xl flex items-center justify-center\"\u003e\n                  \u003csvg className=\"w-5 h-5 text-success-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\u003e\n                    \u003cpath strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" /\u003e\n                  \u003c/svg\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"ml-4\"\u003e\n                \u003cdiv className=\"text-sm font-medium text-secondary-600\"\u003eAccount Age\u003c/div\u003e\n                \u003cdiv className=\"text-2xl font-bold text-secondary-900\"\u003e{stats.account_age_days} days\u003c/div\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/Card\u003e\n\n          \u003cCard\u003e\n            \u003cdiv className=\"flex items-center\"\u003e\n              \u003cdiv className=\"flex-shrink-0\"\u003e\n                \u003cdiv className={`w-10 h-10 rounded-xl flex items-center justify-center ${\n                  stats.profile_complete ? 'bg-success-100' : 'bg-warning-100'\n                }`}\u003e\n                  \u003csvg className={`w-5 h-5 ${stats.profile_complete ? 'text-success-600' : 'text-warning-600'}`} \n                       fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\u003e\n                    \u003cpath strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" /\u003e\n                  \u003c/svg\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"ml-4\"\u003e\n                \u003cdiv className=\"text-sm font-medium text-secondary-600\"\u003eProfile Status\u003c/div\u003e\n                \u003cdiv className=\"text-2xl font-bold text-secondary-900\"\u003e\n                  {stats.profile_complete ? 'Complete' : 'Incomplete'}\n                \u003c/div\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/Card\u003e\n        \u003c/div\u003e\n\n        \u003cdiv className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\"\u003e\n          {/* Recent Activity */}\n          \u003cCard variant=\"elevated\" padding=\"none\"\u003e\n            \u003cCardHeader className=\"px-6 py-4 border-b border-secondary-200\"\u003e\n              \u003ch3 className=\"text-lg font-semibold text-secondary-900\"\u003eRecent Login Activity\u003c/h3\u003e\n            \u003c/CardHeader\u003e\n            \u003cCardContent className=\"p-6\"\u003e\n              {recent_logins.length \u003e 0 ? (\n                \u003cdiv className=\"space-y-4\"\u003e\n                  {recent_logins.slice(0, 5).map((login) =\u003e (\n                    \u003cdiv key={login.id} className=\"flex items-center justify-between py-2\"\u003e\n                      \u003cdiv className=\"flex items-center\"\u003e\n                        \u003cdiv className={`w-2.5 h-2.5 rounded-full mr-3 ${\n                          login.success ? 'bg-success-500' : 'bg-error-500'\n                        }`} /\u003e\n                        \u003cdiv\u003e\n                          \u003cdiv className=\"text-sm font-medium text-secondary-900\"\u003e\n                            {login.success ? 'Successful Login' : 'Failed Login'}\n                          \u003c/div\u003e\n                          \u003cdiv className=\"text-xs text-secondary-500\"\u003e\n                            IP: {login.ip_address}\n                          \u003c/div\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"text-xs text-secondary-500\"\u003e\n                        {new Date(login.created_at).toLocaleDateString()}\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  ))}\n                \u003c/div\u003e\n              ) : (\n                \u003cdiv className=\"text-center text-secondary-500 py-4\"\u003e\n                  No recent login activity\n                \u003c/div\u003e\n              )}\n            \u003c/CardContent\u003e\n          \u003c/Card\u003e\n\n          {/* Notifications */}\n          \u003cCard variant=\"elevated\" padding=\"none\"\u003e\n            \u003cCardHeader className=\"px-6 py-4 border-b border-secondary-200\"\u003e\n              \u003ch3 className=\"text-lg font-semibold text-secondary-900\"\u003eNotifications\u003c/h3\u003e\n            \u003c/CardHeader\u003e\n            \u003cCardContent className=\"p-6\"\u003e\n              {notifications.length \u003e 0 ? (\n                \u003cdiv className=\"space-y-4\"\u003e\n                  {notifications.slice(0, 5).map((notification) =\u003e (\n                    \u003cdiv key={notification.id} className=\"flex items-start\"\u003e\n                      \u003cdiv className={`flex-shrink-0 w-2.5 h-2.5 rounded-full mt-2 mr-3 ${\n                        notification.type === 'error' ? 'bg-error-500' :\n                        notification.type === 'warning' ? 'bg-warning-500' :\n                        notification.type === 'success' ? 'bg-success-500' :\n                        'bg-primary-500'\n                      }`} /\u003e\n                      \u003cdiv className=\"flex-1\"\u003e\n                        \u003cdiv className=\"text-sm font-medium text-secondary-900\"\u003e\n                          {notification.title}\n                        \u003c/div\u003e\n                        \u003cdiv className=\"text-sm text-secondary-600 mt-1\"\u003e\n                          {notification.message}\n                        \u003c/div\u003e\n                        \u003cdiv className=\"text-xs text-secondary-500 mt-1\"\u003e\n                          {new Date(notification.created_at).toLocaleDateString()}\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  ))}\n                \u003c/div\u003e\n              ) : (\n                \u003cdiv className=\"text-center text-secondary-500 py-4\"\u003e\n                  No notifications\n                \u003c/div\u003e\n              )}\n            \u003c/CardContent\u003e\n          \u003c/Card\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default Dashboard;",
      "size": 9194,
      "hash": "0b45cf019dc1fe6445efad3e5e0795aa5684693412c3746ecf774fe933da021d"
    },
    {
      "path": "frontend/src/pages/home/index.ts",
      "template": false,
      "content": "export { default as Dashboard } from './Dashboard';",
      "size": 51,
      "hash": "907aa0dfd00e13c0fa25a35975552330807881ff642026ef2186fb992d9c6fd7"
    },
    {
      "path": "frontend/src/pages/index.ts",
      "template": false,
      "content": "// Home pages\nexport * from './home';\n\n// Settings pages\nexport * from './settings';\n\n// Admin pages\nexport * from './admin';\n\n// Auth pages\nexport { default as Login } from './Login';\nexport { default as Register } from './Register';\nexport { default as Landing } from './Landing';\n\n",
      "size": 284,
      "hash": "38df4b582233ce33aac5501609eab6244fed16e40752e15aca90ade6f19cd2f3"
    },
    {
      "path": "frontend/src/pages/settings/Settings.tsx",
      "template": false,
      "content": "import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { api, ApiError, UpdateProfileRequest, ChangeEmailRequest, UserPreferences, UpdatePreferencesRequest } from '../../lib/api';\nimport { Button } from '../../components/ui/Button';\nimport { User, Shield, Bell, Settings as SettingsIcon, Globe, Monitor, Key, Smartphone, LogOut } from 'lucide-react';\n\nexport const Settings: React.FC = () =\u003e {\n  const { user, refreshAuth } = useAuth();\n  const [activeTab, setActiveTab] = useState\u003c'account' | 'preferences' | 'notifications' | 'security'\u003e('account');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState\u003c{ type: 'success' | 'error'; text: string } | null\u003e(null);\n\n  // Profile form state\n  const [profileData, setProfileData] = useState\u003cUpdateProfileRequest\u003e({\n    first_name: user?.first_name || '',\n    last_name: user?.last_name || '',\n    avatar: user?.avatar || '',\n  });\n\n  // Email change form state\n  const [emailData, setEmailData] = useState\u003cChangeEmailRequest\u003e({\n    new_email: '',\n    password: '',\n  });\n\n  // Preferences state\n  const [preferences, setPreferences] = useState\u003cUserPreferences\u003e({\n    theme: 'light',\n    language: 'en',\n    timezone: '',\n    notifications: {\n      email: true,\n      sms: false,\n      push: true,\n    },\n    privacy: {\n      profile_visible: true,\n      show_email: false,\n    },\n    custom: {},\n  });\n\n  useEffect(() =\u003e {\n    if (user) {\n      setProfileData({\n        first_name: user.first_name,\n        last_name: user.last_name,\n        avatar: user.avatar || '',\n      });\n      \n      if (user.preferences) {\n        setPreferences({\n          theme: user.preferences.theme || 'light',\n          language: user.preferences.language || 'en',\n          timezone: user.preferences.timezone || '',\n          notifications: user.preferences.notifications || {\n            email: true,\n            sms: false,\n            push: true,\n          },\n          privacy: user.preferences.privacy || {\n            profile_visible: true,\n            show_email: false,\n          },\n          custom: user.preferences.custom || {},\n        });\n      }\n    }\n  }, [user]);\n\n  const handleProfileSubmit = async (e: React.FormEvent) =\u003e {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(null);\n\n    try {\n      await api.updateProfile(profileData);\n      await refreshAuth();\n      setMessage({ type: 'success', text: 'Profile updated successfully!' });\n    } catch (error) {\n      if (error instanceof ApiError) {\n        setMessage({ type: 'error', text: error.message });\n      } else {\n        setMessage({ type: 'error', text: 'Failed to update profile' });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEmailSubmit = async (e: React.FormEvent) =\u003e {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(null);\n\n    try {\n      await api.changeEmail(emailData);\n      setMessage({ type: 'success', text: 'Email change requested. Please check your new email for verification.' });\n      setEmailData({ new_email: '', password: '' });\n    } catch (error) {\n      if (error instanceof ApiError) {\n        setMessage({ type: 'error', text: error.message });\n      } else {\n        setMessage({ type: 'error', text: 'Failed to change email' });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePreferencesSubmit = async (e: React.FormEvent) =\u003e {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(null);\n\n    try {\n      const updateData: UpdatePreferencesRequest = {\n        theme: preferences.theme,\n        language: preferences.language,\n        timezone: preferences.timezone,\n        notifications: preferences.notifications || {\n          email: true,\n          sms: false,\n          push: true,\n        },\n        privacy: preferences.privacy || {\n          profile_visible: true,\n          show_email: false,\n        },\n        custom: preferences.custom,\n      };\n\n      await api.updatePreferences(updateData);\n      await refreshAuth();\n      setMessage({ type: 'success', text: 'Preferences updated successfully!' });\n    } catch (error) {\n      if (error instanceof ApiError) {\n        setMessage({ type: 'error', text: error.message });\n      } else {\n        setMessage({ type: 'error', text: 'Failed to update preferences' });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const tabs = [\n    { id: 'account' as const, name: 'Account', icon: User },\n    { id: 'preferences' as const, name: 'Preferences', icon: SettingsIcon },\n    { id: 'notifications' as const, name: 'Notifications', icon: Bell },\n    { id: 'security' as const, name: 'Security', icon: Shield },\n  ];\n\n  return (\n    \u003cdiv className=\"p-4 sm:p-8\"\u003e\n      \u003cdiv className=\"max-w-5xl mx-auto\"\u003e\n        {/* Header */}\n        \u003cdiv className=\"mb-8\"\u003e\n          \u003ch1 className=\"text-2xl font-bold text-secondary-900\"\u003eSettings\u003c/h1\u003e\n          \u003cp className=\"text-secondary-600 mt-2\"\u003e\n            Manage your account settings and preferences.\n          \u003c/p\u003e\n        \u003c/div\u003e\n\n        {/* Message */}\n        {message \u0026\u0026 (\n          \u003cdiv className={`mb-6 p-4 rounded-lg ${\n            message.type === 'success' \n              ? 'bg-success-50 text-success-800 border border-success-200' \n              : 'bg-error-50 text-error-800 border border-error-200'\n          }`}\u003e\n            {message.text}\n          \u003c/div\u003e\n        )}\n\n        \u003cdiv className=\"bg-white shadow-sm border border-secondary-200 rounded-lg\"\u003e\n          {/* Tabs */}\n          \u003cdiv className=\"border-b border-secondary-200\"\u003e\n            \u003cnav className=\"-mb-px flex space-x-8 px-6\"\u003e\n              {tabs.map((tab) =\u003e {\n                const IconComponent = tab.icon;\n                return (\n                  \u003cbutton\n                    key={tab.id}\n                    onClick={() =\u003e setActiveTab(tab.id)}\n                    className={`py-4 px-1 border-b-2 font-medium text-sm flex items-center ${\n                      activeTab === tab.id\n                        ? 'border-primary-500 text-primary-600'\n                        : 'border-transparent text-secondary-500 hover:text-secondary-700 hover:border-secondary-300'\n                    }`}\n                  \u003e\n                    \u003cIconComponent className=\"w-4 h-4 mr-2\" /\u003e\n                    {tab.name}\n                  \u003c/button\u003e\n                );\n              })}\n            \u003c/nav\u003e\n          \u003c/div\u003e\n\n          {/* Tab Content */}\n          \u003cdiv className=\"p-6\"\u003e\n              {/* Account Tab */}\n              {activeTab === 'account' \u0026\u0026 (\n                \u003cdiv className=\"space-y-6\"\u003e\n                  {/* Profile Information Card */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cUser className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003eProfile Information\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eUpdate your personal information and profile details.\u003c/p\u003e\n                    \n                    \u003cform onSubmit={handleProfileSubmit} className=\"space-y-4\"\u003e\n                      \u003cdiv className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\"\u003e\n                        \u003cdiv\u003e\n                          \u003clabel htmlFor=\"first_name\" className=\"block text-sm font-medium text-secondary-700 mb-1\"\u003e\n                            First Name\n                          \u003c/label\u003e\n                          \u003cinput\n                            type=\"text\"\n                            id=\"first_name\"\n                            value={profileData.first_name}\n                            onChange={(e) =\u003e setProfileData({ ...profileData, first_name: e.target.value })}\n                            className=\"w-full px-3 py-2 border border-secondary-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                            required\n                          /\u003e\n                        \u003c/div\u003e\n                        \u003cdiv\u003e\n                          \u003clabel htmlFor=\"last_name\" className=\"block text-sm font-medium text-secondary-700 mb-1\"\u003e\n                            Last Name\n                          \u003c/label\u003e\n                          \u003cinput\n                            type=\"text\"\n                            id=\"last_name\"\n                            value={profileData.last_name}\n                            onChange={(e) =\u003e setProfileData({ ...profileData, last_name: e.target.value })}\n                            className=\"w-full px-3 py-2 border border-secondary-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                            required\n                          /\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                      \u003cdiv\u003e\n                        \u003clabel htmlFor=\"avatar\" className=\"block text-sm font-medium text-secondary-700 mb-1\"\u003e\n                          Avatar URL (optional)\n                        \u003c/label\u003e\n                        \u003cinput\n                          type=\"url\"\n                          id=\"avatar\"\n                          value={profileData.avatar}\n                          onChange={(e) =\u003e setProfileData({ ...profileData, avatar: e.target.value })}\n                          className=\"w-full px-3 py-2 border border-secondary-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                          placeholder=\"https://example.com/avatar.jpg\"\n                        /\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"flex justify-end\"\u003e\n                        \u003cButton type=\"submit\" disabled={loading}\u003e\n                          {loading ? 'Saving...' : 'Save Profile'}\n                        \u003c/Button\u003e\n                      \u003c/div\u003e\n                    \u003c/form\u003e\n                  \u003c/div\u003e\n\n                  {/* Account Status Card */}\n                  \u003cdiv className=\"bg-secondary-50 border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cShield className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003eAccount Status\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-4\"\u003eView your account information and verification status.\u003c/p\u003e\n                    \n                    \u003cdiv className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\"\u003e\n                      \u003cdiv className=\"space-y-3\"\u003e\n                        \u003cdiv className=\"flex justify-between\"\u003e\n                          \u003cspan className=\"text-sm font-medium text-secondary-700\"\u003eEmail:\u003c/span\u003e\n                          \u003cspan className=\"text-sm text-secondary-900\"\u003e{user?.email}\u003c/span\u003e\n                        \u003c/div\u003e\n                        \u003cdiv className=\"flex justify-between\"\u003e\n                          \u003cspan className=\"text-sm font-medium text-secondary-700\"\u003eRole:\u003c/span\u003e\n                          \u003cspan className=\"text-sm text-secondary-900 capitalize\"\u003e{user?.role}\u003c/span\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"space-y-3\"\u003e\n                        \u003cdiv className=\"flex justify-between\"\u003e\n                          \u003cspan className=\"text-sm font-medium text-secondary-700\"\u003eStatus:\u003c/span\u003e\n                          \u003cspan className={`text-sm px-2 py-1 rounded-full text-xs font-medium ${\n                            user?.status === 'active' \n                              ? 'bg-success-100 text-success-800' \n                              : 'bg-warning-100 text-warning-800'\n                          }`}\u003e\n                            {user?.status}\n                          \u003c/span\u003e\n                        \u003c/div\u003e\n                        \u003cdiv className=\"flex justify-between\"\u003e\n                          \u003cspan className=\"text-sm font-medium text-secondary-700\"\u003eEmail Verified:\u003c/span\u003e\n                          \u003cspan className={`text-sm px-2 py-1 rounded-full text-xs font-medium ${\n                            user?.email_verified \n                              ? 'bg-success-100 text-success-800' \n                              : 'bg-error-100 text-error-800'\n                          }`}\u003e\n                            {user?.email_verified ? 'Verified' : 'Unverified'}\n                          \u003c/span\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n              )}\n\n              {/* Preferences Tab */}\n              {activeTab === 'preferences' \u0026\u0026 (\n                \u003cdiv className=\"space-y-6\"\u003e\n                  {/* Theme Settings Card */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cMonitor className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003eTheme \u0026 Display\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eCustomize how the application looks and feels.\u003c/p\u003e\n                    \n                    \u003cdiv className=\"space-y-4\"\u003e\n                      \u003cdiv\u003e\n                        \u003clabel className=\"block text-sm font-medium text-secondary-700 mb-3\"\u003eTheme\u003c/label\u003e\n                        \u003cdiv className=\"grid grid-cols-1 sm:grid-cols-3 gap-3\"\u003e\n                          {[\n                            { value: 'light', label: 'Light', icon: '☀️' },\n                            { value: 'dark', label: 'Dark', icon: '🌙' },\n                            { value: 'system', label: 'System', icon: '💻' }\n                          ].map((theme) =\u003e (\n                            \u003clabel key={theme.value} className=\"flex items-center p-3 border border-secondary-300 rounded-lg cursor-pointer hover:bg-secondary-50 transition-colors\"\u003e\n                              \u003cinput\n                                type=\"radio\"\n                                name=\"theme\"\n                                value={theme.value}\n                                checked={preferences.theme === theme.value}\n                                onChange={(e) =\u003e setPreferences({ ...preferences, theme: e.target.value })}\n                                className=\"mr-3\"\n                              /\u003e\n                              \u003cspan className=\"mr-2\"\u003e{theme.icon}\u003c/span\u003e\n                              \u003cspan className=\"font-medium\"\u003e{theme.label}\u003c/span\u003e\n                            \u003c/label\u003e\n                          ))}\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n\n                  {/* Language \u0026 Region Card */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cGlobe className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003eLanguage \u0026 Region\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eSet your language and timezone preferences.\u003c/p\u003e\n                    \n                    \u003cdiv className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\"\u003e\n                      \u003cdiv\u003e\n                        \u003clabel htmlFor=\"language\" className=\"block text-sm font-medium text-secondary-700 mb-1\"\u003e\n                          Language\n                        \u003c/label\u003e\n                        \u003cselect\n                          id=\"language\"\n                          value={preferences.language}\n                          onChange={(e) =\u003e setPreferences({ ...preferences, language: e.target.value })}\n                          className=\"w-full px-3 py-2 border border-secondary-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                        \u003e\n                          \u003coption value=\"en\"\u003eEnglish\u003c/option\u003e\n                          \u003coption value=\"es\"\u003eSpanish\u003c/option\u003e\n                          \u003coption value=\"fr\"\u003eFrench\u003c/option\u003e\n                          \u003coption value=\"de\"\u003eGerman\u003c/option\u003e\n                        \u003c/select\u003e\n                      \u003c/div\u003e\n                      \u003cdiv\u003e\n                        \u003clabel htmlFor=\"timezone\" className=\"block text-sm font-medium text-secondary-700 mb-1\"\u003e\n                          Timezone\n                        \u003c/label\u003e\n                        \u003cselect\n                          id=\"timezone\"\n                          value={preferences.timezone}\n                          onChange={(e) =\u003e setPreferences({ ...preferences, timezone: e.target.value })}\n                          className=\"w-full px-3 py-2 border border-secondary-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                        \u003e\n                          \u003coption value=\"\"\u003eSelect timezone...\u003c/option\u003e\n                          \u003coption value=\"UTC\"\u003eUTC\u003c/option\u003e\n                          \u003coption value=\"America/New_York\"\u003eEastern Time\u003c/option\u003e\n                          \u003coption value=\"America/Chicago\"\u003eCentral Time\u003c/option\u003e\n                          \u003coption value=\"America/Denver\"\u003eMountain Time\u003c/option\u003e\n                          \u003coption value=\"America/Los_Angeles\"\u003ePacific Time\u003c/option\u003e\n                        \u003c/select\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n\n                  {/* Privacy Settings Card */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cShield className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003ePrivacy Settings\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eControl how your information is shared with other users.\u003c/p\u003e\n                    \n                    \u003cdiv className=\"space-y-4\"\u003e\n                      \u003cdiv className=\"flex items-center justify-between p-4 bg-secondary-50 rounded-lg\"\u003e\n                        \u003cdiv\u003e\n                          \u003cdiv className=\"font-medium text-secondary-900\"\u003eProfile Visibility\u003c/div\u003e\n                          \u003cdiv className=\"text-sm text-secondary-600\"\u003eMake your profile visible to other users\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003clabel className=\"relative inline-flex items-center cursor-pointer\"\u003e\n                          \u003cinput\n                            type=\"checkbox\"\n                            checked={preferences.privacy?.profile_visible || false}\n                            onChange={(e) =\u003e setPreferences({\n                              ...preferences,\n                              privacy: {\n                                ...preferences.privacy!,\n                                profile_visible: e.target.checked\n                              }\n                            })}\n                            className=\"sr-only peer\"\n                          /\u003e\n                          \u003cdiv className=\"w-11 h-6 bg-secondary-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-secondary-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"\u003e\u003c/div\u003e\n                        \u003c/label\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"flex items-center justify-between p-4 bg-secondary-50 rounded-lg\"\u003e\n                        \u003cdiv\u003e\n                          \u003cdiv className=\"font-medium text-secondary-900\"\u003eShow Email Address\u003c/div\u003e\n                          \u003cdiv className=\"text-sm text-secondary-600\"\u003eDisplay your email address in your profile\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003clabel className=\"relative inline-flex items-center cursor-pointer\"\u003e\n                          \u003cinput\n                            type=\"checkbox\"\n                            checked={preferences.privacy?.show_email || false}\n                            onChange={(e) =\u003e setPreferences({\n                              ...preferences,\n                              privacy: {\n                                ...preferences.privacy!,\n                                show_email: e.target.checked\n                              }\n                            })}\n                            className=\"sr-only peer\"\n                          /\u003e\n                          \u003cdiv className=\"w-11 h-6 bg-secondary-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-secondary-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"\u003e\u003c/div\u003e\n                        \u003c/label\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n\n                  \u003cdiv className=\"flex justify-end\"\u003e\n                    \u003cButton onClick={handlePreferencesSubmit} disabled={loading}\u003e\n                      {loading ? 'Saving...' : 'Save Preferences'}\n                    \u003c/Button\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n              )}\n\n              {/* Notifications Tab */}\n              {activeTab === 'notifications' \u0026\u0026 (\n                \u003cdiv className=\"space-y-6\"\u003e\n                  {/* Email Notifications Card */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cBell className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003eEmail Notifications\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eChoose what email notifications you'd like to receive.\u003c/p\u003e\n                    \n                    \u003cdiv className=\"space-y-4\"\u003e\n                      \u003cdiv className=\"flex items-center justify-between p-4 bg-secondary-50 rounded-lg\"\u003e\n                        \u003cdiv\u003e\n                          \u003cdiv className=\"font-medium text-secondary-900\"\u003eAccount Activity\u003c/div\u003e\n                          \u003cdiv className=\"text-sm text-secondary-600\"\u003eGet notified about login attempts and security events\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003clabel className=\"relative inline-flex items-center cursor-pointer\"\u003e\n                          \u003cinput\n                            type=\"checkbox\"\n                            checked={preferences.notifications?.email || false}\n                            onChange={(e) =\u003e setPreferences({\n                              ...preferences,\n                              notifications: {\n                                ...preferences.notifications!,\n                                email: e.target.checked\n                              }\n                            })}\n                            className=\"sr-only peer\"\n                          /\u003e\n                          \u003cdiv className=\"w-11 h-6 bg-secondary-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-secondary-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"\u003e\u003c/div\u003e\n                        \u003c/label\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"flex items-center justify-between p-4 bg-secondary-50 rounded-lg\"\u003e\n                        \u003cdiv\u003e\n                          \u003cdiv className=\"font-medium text-secondary-900\"\u003eProduct Updates\u003c/div\u003e\n                          \u003cdiv className=\"text-sm text-secondary-600\"\u003eReceive notifications about new features and updates\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003clabel className=\"relative inline-flex items-center cursor-pointer\"\u003e\n                          \u003cinput\n                            type=\"checkbox\"\n                            defaultChecked={false}\n                            className=\"sr-only peer\"\n                          /\u003e\n                          \u003cdiv className=\"w-11 h-6 bg-secondary-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-secondary-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"\u003e\u003c/div\u003e\n                        \u003c/label\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"flex items-center justify-between p-4 bg-secondary-50 rounded-lg\"\u003e\n                        \u003cdiv\u003e\n                          \u003cdiv className=\"font-medium text-secondary-900\"\u003eMarketing Communications\u003c/div\u003e\n                          \u003cdiv className=\"text-sm text-secondary-600\"\u003eReceive promotional emails and newsletters\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003clabel className=\"relative inline-flex items-center cursor-pointer\"\u003e\n                          \u003cinput\n                            type=\"checkbox\"\n                            defaultChecked={false}\n                            className=\"sr-only peer\"\n                          /\u003e\n                          \u003cdiv className=\"w-11 h-6 bg-secondary-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-secondary-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"\u003e\u003c/div\u003e\n                        \u003c/label\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n\n                  {/* Push Notifications Card */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cSmartphone className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003ePush Notifications\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eManage push notification preferences for your devices.\u003c/p\u003e\n                    \n                    \u003cdiv className=\"space-y-4\"\u003e\n                      \u003cdiv className=\"flex items-center justify-between p-4 bg-secondary-50 rounded-lg\"\u003e\n                        \u003cdiv\u003e\n                          \u003cdiv className=\"font-medium text-secondary-900\"\u003eReal-time Alerts\u003c/div\u003e\n                          \u003cdiv className=\"text-sm text-secondary-600\"\u003eGet instant notifications for important events\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003clabel className=\"relative inline-flex items-center cursor-pointer\"\u003e\n                          \u003cinput\n                            type=\"checkbox\"\n                            checked={preferences.notifications?.push || false}\n                            onChange={(e) =\u003e setPreferences({\n                              ...preferences,\n                              notifications: {\n                                ...preferences.notifications!,\n                                push: e.target.checked\n                              }\n                            })}\n                            className=\"sr-only peer\"\n                          /\u003e\n                          \u003cdiv className=\"w-11 h-6 bg-secondary-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-secondary-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"\u003e\u003c/div\u003e\n                        \u003c/label\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n\n                  {/* Notification Frequency Card */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cSettingsIcon className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003eNotification Frequency\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eControl how often you receive notifications.\u003c/p\u003e\n                    \n                    \u003cdiv\u003e\n                      \u003clabel htmlFor=\"frequency\" className=\"block text-sm font-medium text-secondary-700 mb-2\"\u003e\n                        Email Frequency\n                      \u003c/label\u003e\n                      \u003cselect\n                        id=\"frequency\"\n                        className=\"w-full px-3 py-2 border border-secondary-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                      \u003e\n                        \u003coption value=\"instant\"\u003eInstant\u003c/option\u003e\n                        \u003coption value=\"daily\"\u003eDaily Digest\u003c/option\u003e\n                        \u003coption value=\"weekly\"\u003eWeekly Summary\u003c/option\u003e\n                        \u003coption value=\"never\"\u003eNever\u003c/option\u003e\n                      \u003c/select\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n\n                  \u003cdiv className=\"flex justify-end\"\u003e\n                    \u003cButton onClick={handlePreferencesSubmit} disabled={loading}\u003e\n                      {loading ? 'Saving...' : 'Save Notification Settings'}\n                    \u003c/Button\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n              )}\n\n              {/* Security Tab */}\n              {activeTab === 'security' \u0026\u0026 (\n                \u003cdiv className=\"space-y-6\"\u003e\n                  {/* Change Email Card */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cUser className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003eChange Email Address\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eUpdate your email address. You'll need to verify the new address.\u003c/p\u003e\n                    \n                    \u003cform onSubmit={handleEmailSubmit} className=\"space-y-4\"\u003e\n                      \u003cdiv\u003e\n                        \u003clabel htmlFor=\"new_email\" className=\"block text-sm font-medium text-secondary-700 mb-1\"\u003e\n                          New Email Address\n                        \u003c/label\u003e\n                        \u003cinput\n                          type=\"email\"\n                          id=\"new_email\"\n                          value={emailData.new_email}\n                          onChange={(e) =\u003e setEmailData({ ...emailData, new_email: e.target.value })}\n                          className=\"w-full px-3 py-2 border border-secondary-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                          required\n                        /\u003e\n                      \u003c/div\u003e\n                      \u003cdiv\u003e\n                        \u003clabel htmlFor=\"password_confirm\" className=\"block text-sm font-medium text-secondary-700 mb-1\"\u003e\n                          Current Password\n                        \u003c/label\u003e\n                        \u003cinput\n                          type=\"password\"\n                          id=\"password_confirm\"\n                          value={emailData.password}\n                          onChange={(e) =\u003e setEmailData({ ...emailData, password: e.target.value })}\n                          className=\"w-full px-3 py-2 border border-secondary-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                          required\n                        /\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"flex justify-end\"\u003e\n                        \u003cButton type=\"submit\" disabled={loading}\u003e\n                          {loading ? 'Changing...' : 'Change Email'}\n                        \u003c/Button\u003e\n                      \u003c/div\u003e\n                    \u003c/form\u003e\n                  \u003c/div\u003e\n\n                  {/* Password Security Card */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cKey className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003ePassword Security\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eManage your password and authentication settings.\u003c/p\u003e\n                    \n                    \u003cdiv className=\"space-y-4\"\u003e\n                      \u003cdiv className=\"flex items-center justify-between p-4 bg-secondary-50 rounded-lg\"\u003e\n                        \u003cdiv\u003e\n                          \u003cdiv className=\"font-medium text-secondary-900\"\u003ePassword\u003c/div\u003e\n                          \u003cdiv className=\"text-sm text-secondary-600\"\u003eLast changed 30 days ago\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cButton\n                          variant=\"secondary\"\n                          onClick={() =\u003e window.location.href = '/change-password'}\n                        \u003e\n                          Change Password\n                        \u003c/Button\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n\n                  {/* Two-Factor Authentication Card (Placeholder) */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cSmartphone className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003eTwo-Factor Authentication\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eAdd an extra layer of security to your account.\u003c/p\u003e\n                    \n                    \u003cdiv className=\"space-y-4\"\u003e\n                      \u003cdiv className=\"flex items-center justify-between p-4 bg-warning-50 border border-warning-200 rounded-lg\"\u003e\n                        \u003cdiv\u003e\n                          \u003cdiv className=\"font-medium text-warning-900\"\u003eTwo-Factor Authentication\u003c/div\u003e\n                          \u003cdiv className=\"text-sm text-warning-700\"\u003eNot enabled - Coming soon\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cButton variant=\"secondary\" disabled\u003e\n                          Enable 2FA\n                        \u003c/Button\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n\n                  {/* Active Sessions Card (Placeholder) */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cMonitor className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003eActive Sessions\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eMonitor and manage your active login sessions.\u003c/p\u003e\n                    \n                    \u003cdiv className=\"space-y-4\"\u003e\n                      \u003cdiv className=\"p-4 bg-info-50 border border-info-200 rounded-lg\"\u003e\n                        \u003cdiv className=\"flex items-center justify-between\"\u003e\n                          \u003cdiv\u003e\n                            \u003cdiv className=\"font-medium text-info-900\"\u003eCurrent Session\u003c/div\u003e\n                            \u003cdiv className=\"text-sm text-info-700\"\u003eThis device - Active now\u003c/div\u003e\n                          \u003c/div\u003e\n                          \u003cdiv className=\"px-3 py-1 bg-success-100 text-success-800 rounded-full text-xs font-medium\"\u003e\n                            Current\n                          \u003c/div\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                      \u003cdiv className=\"p-4 bg-secondary-50 rounded-lg\"\u003e\n                        \u003cdiv className=\"text-sm text-secondary-600 text-center\"\u003e\n                          Active session management coming soon\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n\n                  {/* Security Actions Card */}\n                  \u003cdiv className=\"bg-white border border-secondary-200 rounded-lg p-6\"\u003e\n                    \u003cdiv className=\"flex items-center mb-4\"\u003e\n                      \u003cLogOut className=\"w-5 h-5 text-secondary-600 mr-2\" /\u003e\n                      \u003ch3 className=\"text-lg font-medium text-secondary-900\"\u003eSecurity Actions\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cp className=\"text-sm text-secondary-600 mb-6\"\u003eTake immediate security actions for your account.\u003c/p\u003e\n                    \n                    \u003cdiv className=\"space-y-4\"\u003e\n                      \u003cdiv className=\"flex items-center justify-between p-4 bg-error-50 border border-error-200 rounded-lg\"\u003e\n                        \u003cdiv\u003e\n                          \u003cdiv className=\"font-medium text-error-900\"\u003eLogout All Devices\u003c/div\u003e\n                          \u003cdiv className=\"text-sm text-error-700\"\u003eSign out of all devices except this one\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cButton\n                          variant=\"secondary\"\n                          onClick={() =\u003e {\n                            if (confirm('Are you sure you want to logout from all other devices?')) {\n                              api.logoutAll();\n                            }\n                          }}\n                        \u003e\n                          Logout All\n                        \u003c/Button\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n              )}\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  );\n};\n\nexport default Settings;",
      "size": 38661,
      "hash": "b2ec92ef0919a3499eebd3872f261ef4e17dad5cb911912bf3a44122bc736260"
    },
    {
      "path": "frontend/src/pages/settings/index.ts",
      "template": false,
      "content": "export { default as Settings } from './Settings';",
      "size": 49,
      "hash": "a5a388b57ed65b19c684cb17fbf4a18c695f207eca77f6094b26c091cac4291d"
    },
    {
      "path": "frontend/src/utils/cn.ts",
      "template": false,
      "content": "import { clsx, type ClassValue } from 'clsx';\n\nexport function cn(...inputs: ClassValue[]) {\n  return clsx(inputs);\n}",
      "size": 117,
      "hash": "c72956783105d8a5d8422bed64663e8a804fe51ad04f656fcf5d275d67086d6d"
    },
    {
      "path": "frontend/src/vite-env.d.ts",
      "template": false,
      "content": "/// \u003creference types=\"vite/client\" /\u003e\n\ninterface ImportMetaEnv {\n  readonly VITE_API_BASE_URL: string\n}\n\ninterface ImportMeta {\n  readonly env: ImportMetaEnv\n}",
      "size": 159,
      "hash": "951233bff030404d62b7af1153e9e06b632e96e11d9de9f12b1a320573d89c27"
    },
    {
      "path": "frontend/tailwind.config.js",
      "template": false,
      "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        primary: {\n          50: '#eff6ff',\n          100: '#dbeafe',\n          200: '#bfdbfe',\n          300: '#93c5fd',\n          400: '#60a5fa',\n          500: '#3b82f6',\n          600: '#2563eb',\n          700: '#1d4ed8',\n          800: '#1e40af',\n          900: '#1e3a8a',\n          950: '#172554',\n        },\n        secondary: {\n          50: '#f8fafc',\n          100: '#f1f5f9',\n          200: '#e2e8f0',\n          300: '#cbd5e1',\n          400: '#94a3b8',\n          500: '#64748b',\n          600: '#475569',\n          700: '#334155',\n          800: '#1e293b',\n          900: '#0f172a',\n          950: '#020617',\n        },\n        accent: {\n          50: '#fdf4ff',\n          100: '#fae8ff',\n          200: '#f5d0fe',\n          300: '#f0abfc',\n          400: '#e879f9',\n          500: '#d946ef',\n          600: '#c026d3',\n          700: '#a21caf',\n          800: '#86198f',\n          900: '#701a75',\n          950: '#4a044e',\n        },\n        success: {\n          50: '#f0fdf4',\n          100: '#dcfce7',\n          200: '#bbf7d0',\n          300: '#86efac',\n          400: '#4ade80',\n          500: '#22c55e',\n          600: '#16a34a',\n          700: '#15803d',\n          800: '#166534',\n          900: '#14532d',\n          950: '#052e16',\n        },\n        warning: {\n          50: '#fffbeb',\n          100: '#fef3c7',\n          200: '#fde68a',\n          300: '#fcd34d',\n          400: '#fbbf24',\n          500: '#f59e0b',\n          600: '#d97706',\n          700: '#b45309',\n          800: '#92400e',\n          900: '#78350f',\n          950: '#451a03',\n        },\n        error: {\n          50: '#fef2f2',\n          100: '#fee2e2',\n          200: '#fecaca',\n          300: '#fca5a5',\n          400: '#f87171',\n          500: '#ef4444',\n          600: '#dc2626',\n          700: '#b91c1c',\n          800: '#991b1b',\n          900: '#7f1d1d',\n          950: '#450a0a',\n        },\n      },\n      fontFamily: {\n        sans: ['Inter', 'system-ui', 'sans-serif'],\n        heading: ['Cal Sans', 'Inter', 'system-ui', 'sans-serif'],\n      },\n      fontSize: {\n        'xs': ['0.75rem', { lineHeight: '1rem' }],\n        'sm': ['0.875rem', { lineHeight: '1.25rem' }],\n        'base': ['1rem', { lineHeight: '1.5rem' }],\n        'lg': ['1.125rem', { lineHeight: '1.75rem' }],\n        'xl': ['1.25rem', { lineHeight: '1.75rem' }],\n        '2xl': ['1.5rem', { lineHeight: '2rem' }],\n        '3xl': ['1.875rem', { lineHeight: '2.25rem' }],\n        '4xl': ['2.25rem', { lineHeight: '2.5rem' }],\n        '5xl': ['3rem', { lineHeight: '1' }],\n        '6xl': ['3.75rem', { lineHeight: '1' }],\n        '7xl': ['4.5rem', { lineHeight: '1' }],\n        '8xl': ['6rem', { lineHeight: '1' }],\n        '9xl': ['8rem', { lineHeight: '1' }],\n      },\n      spacing: {\n        // 8px grid system for consistent spacing\n        '0.5': '0.125rem',  // 2px\n        '1.5': '0.375rem',  // 6px\n        '2.5': '0.625rem',  // 10px\n        '3.5': '0.875rem',  // 14px\n        '4.5': '1.125rem',  // 18px\n        '5.5': '1.375rem',  // 22px\n        '6.5': '1.625rem',  // 26px\n        '7.5': '1.875rem',  // 30px\n        '8.5': '2.125rem',  // 34px\n        '9.5': '2.375rem',  // 38px\n        '11': '2.75rem',    // 44px - minimum touch target\n        '13': '3.25rem',    // 52px\n        '15': '3.75rem',    // 60px\n        '17': '4.25rem',    // 68px\n        '18': '4.5rem',     // 72px\n        '19': '4.75rem',    // 76px\n        '21': '5.25rem',    // 84px\n        '22': '5.5rem',     // 88px\n        '88': '22rem',      // 352px\n      },\n      animation: {\n        // Keep only essential animations\n        'pulse': 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n        'spin': 'spin 1s linear infinite',\n      },\n      boxShadow: {\n        'xs': '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\n        'soft': '0 2px 15px -3px rgba(0, 0, 0, 0.07), 0 10px 20px -2px rgba(0, 0, 0, 0.04)',\n        'medium': '0 4px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n        'large': '0 10px 50px -12px rgba(0, 0, 0, 0.25)',\n        'xl-colored': '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n        'glow': '0 0 20px rgba(59, 130, 246, 0.15)',\n        'glow-lg': '0 0 40px rgba(59, 130, 246, 0.15)',\n        'inner-soft': 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)',\n      },\n      backdropBlur: {\n        'xs': '2px',\n      },\n      borderRadius: {\n        'sm': '0.25rem',    // 4px\n        'DEFAULT': '0.375rem', // 6px\n        'md': '0.5rem',     // 8px\n        'lg': '0.75rem',    // 12px\n        'xl': '1rem',       // 16px\n        '2xl': '1.5rem',    // 24px\n        '3xl': '2rem',      // 32px\n      },\n    },\n  },\n  plugins: [],\n}",
      "size": 4828,
      "hash": "bcabfaeac8eaa1b9af798a95df0665e66294e11bfd61dd06397a16bda8cd8479"
    },
    {
      "path": "frontend/tsconfig.json",
      "template": false,
      "content": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"useDefineForClassFields\": true,\n    \"lib\": [\"ES2020\", \"DOM\", \"DOM.Iterable\"],\n    \"module\": \"ESNext\",\n    \"skipLibCheck\": true,\n\n    /* Bundler mode */\n    \"moduleResolution\": \"bundler\",\n    \"allowImportingTsExtensions\": true,\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"noEmit\": true,\n    \"jsx\": \"react-jsx\",\n\n    /* Linting */\n    \"strict\": true,\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"noFallthroughCasesInSwitch\": true,\n\n    /* Path mapping */\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\"./src/*\"],\n      \"@/components/*\": [\"./src/components/*\"],\n      \"@/hooks/*\": [\"./src/hooks/*\"],\n      \"@/utils/*\": [\"./src/utils/*\"],\n      \"@/types/*\": [\"./src/types/*\"],\n      \"@/config/*\": [\"./src/config/*\"]\n    }\n  },\n  \"include\": [\"src\"],\n  \"references\": [{ \"path\": \"./tsconfig.node.json\" }]\n}",
      "size": 897,
      "hash": "5269bb36c0972444b356d6b1caa927778353104b6b93abbcedb52cdbf4550331"
    },
    {
      "path": "frontend/tsconfig.node.json",
      "template": false,
      "content": "{\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"skipLibCheck\": true,\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"bundler\",\n    \"allowSyntheticDefaultImports\": true\n  },\n  \"include\": [\"vite.config.ts\"]\n}",
      "size": 212,
      "hash": "6847175da5ab8079db6583b92c209f79a8ae39d35f3b0876ddfb0717b752d4c8"
    },
    {
      "path": "frontend/vite.config.ts",
      "template": false,
      "content": "import { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\nimport path from 'path'\n\nexport default defineConfig({\n  plugins: [react()],\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src'),\n      '@/components': path.resolve(__dirname, './src/components'),\n      '@/hooks': path.resolve(__dirname, './src/hooks'),\n      '@/utils': path.resolve(__dirname, './src/utils'),\n      '@/types': path.resolve(__dirname, './src/types'),\n      '@/config': path.resolve(__dirname, './src/config'),\n    },\n  },\n  build: {\n    outDir: 'dist',\n    sourcemap: true,\n  },\n  server: {\n    host: true,\n    port: Number(process.env.PORT) || 3000,\n  },\n})",
      "size": 670,
      "hash": "82d88d1e0922654f714963a9db112c940cd930b8658a47246a86a820ca06efd3"
    },
    {
      "path": "frontend/vitest.config.ts",
      "template": false,
      "content": "import { defineConfig } from 'vitest/config'\nimport react from '@vitejs/plugin-react'\nimport path from 'path'\n\nexport default defineConfig({\n  plugins: [react()],\n  test: {\n    globals: true,\n    environment: 'jsdom',\n    setupFiles: ['./src/test/setup.ts'],\n    css: true,\n    coverage: {\n      provider: 'v8',\n      reporter: ['text', 'json', 'html'],\n      exclude: [\n        'node_modules/',\n        'src/test/',\n        '**/*.d.ts',\n        '**/*.config.js',\n        '**/*.config.ts',\n      ],\n    },\n  },\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src'),\n    },\n  },\n})",
      "size": 596,
      "hash": "55136f7cc42fe872734d9ac8f0329fdcd5b80e879e6c9abd95f07f915f089186"
    },
    {
      "path": "go.mod",
      "template": true,
      "content": "module github.com/acheevo/fullstack-template\n\ngo 1.23.0\n\ntoolchain go1.23.6\n\nrequire (\n\tgithub.com/gin-gonic/gin v1.10.1\n\tgithub.com/go-playground/validator/v10 v10.20.0\n\tgithub.com/golang-jwt/jwt/v5 v5.2.3\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/kelseyhightower/envconfig v1.4.0\n\tgithub.com/stretchr/testify v1.10.0\n\tgolang.org/x/crypto v0.40.0\n\tgopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df\n\tgorm.io/driver/postgres v1.5.4\n\tgorm.io/gorm v1.25.5\n)\n\nrequire (\n\tdario.cat/mergo v1.0.1 // indirect\n\tgithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 // indirect\n\tgithub.com/Microsoft/go-winio v0.6.2 // indirect\n\tgithub.com/bytedance/sonic v1.11.6 // indirect\n\tgithub.com/bytedance/sonic/loader v0.1.1 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.2.1 // indirect\n\tgithub.com/cloudwego/base64x v0.1.4 // indirect\n\tgithub.com/cloudwego/iasm v0.2.0 // indirect\n\tgithub.com/containerd/errdefs v1.0.0 // indirect\n\tgithub.com/containerd/errdefs/pkg v0.3.0 // indirect\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/containerd/platforms v0.2.1 // indirect\n\tgithub.com/cpuguy83/dockercfg v0.3.2 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/distribution/reference v0.6.0 // indirect\n\tgithub.com/docker/docker v28.2.2+incompatible // indirect\n\tgithub.com/docker/go-connections v0.5.0 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/ebitengine/purego v0.8.4 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/gabriel-vasile/mimetype v1.4.3 // indirect\n\tgithub.com/gin-contrib/sse v0.1.0 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-ole/go-ole v1.2.6 // indirect\n\tgithub.com/go-playground/locales v0.14.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.18.1 // indirect\n\tgithub.com/goccy/go-json v0.10.2 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/google/go-cmp v0.7.0 // indirect\n\tgithub.com/jackc/pgpassfile v1.0.0 // indirect\n\tgithub.com/jackc/pgservicefile v0.0.0-20221227161230-091c0ba34f0a // indirect\n\tgithub.com/jackc/pgx/v5 v5.5.4 // indirect\n\tgithub.com/jackc/puddle/v2 v2.2.1 // indirect\n\tgithub.com/jinzhu/inflection v1.0.0 // indirect\n\tgithub.com/jinzhu/now v1.1.5 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/compress v1.18.0 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.7 // indirect\n\tgithub.com/kr/pretty v0.3.1 // indirect\n\tgithub.com/leodido/go-urn v1.4.0 // indirect\n\tgithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0 // indirect\n\tgithub.com/magiconair/properties v1.8.10 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/moby/docker-image-spec v1.3.1 // indirect\n\tgithub.com/moby/go-archive v0.1.0 // indirect\n\tgithub.com/moby/patternmatcher v0.6.0 // indirect\n\tgithub.com/moby/sys/sequential v0.6.0 // indirect\n\tgithub.com/moby/sys/user v0.4.0 // indirect\n\tgithub.com/moby/sys/userns v0.1.0 // indirect\n\tgithub.com/moby/term v0.5.0 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/morikuni/aec v1.0.0 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.1.1 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.2 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c // indirect\n\tgithub.com/rogpeppe/go-internal v1.13.1 // indirect\n\tgithub.com/shirou/gopsutil/v4 v4.25.5 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgithub.com/testcontainers/testcontainers-go v0.38.0 // indirect\n\tgithub.com/testcontainers/testcontainers-go/modules/postgres v0.38.0 // indirect\n\tgithub.com/tklauser/go-sysconf v0.3.12 // indirect\n\tgithub.com/tklauser/numcpus v0.6.1 // indirect\n\tgithub.com/twitchyliquid64/golang-asm v0.15.1 // indirect\n\tgithub.com/ugorji/go/codec v1.2.12 // indirect\n\tgithub.com/yusufpapurcu/wmi v1.2.4 // indirect\n\tgo.opentelemetry.io/auto/sdk v1.1.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 // indirect\n\tgo.opentelemetry.io/otel v1.35.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.35.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.35.0 // indirect\n\tgolang.org/x/arch v0.8.0 // indirect\n\tgolang.org/x/net v0.41.0 // indirect\n\tgolang.org/x/sync v0.16.0 // indirect\n\tgolang.org/x/sys v0.34.0 // indirect\n\tgolang.org/x/text v0.27.0 // indirect\n\tgoogle.golang.org/protobuf v1.36.6 // indirect\n\tgopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n",
      "size": 4758,
      "hash": "de72c40ed21788babd0866cc644e309c1d791507de7d697467fa846f9b8949aa",
      "mappings": [
        {
          "find": "module github.com/acheevo/fullstack-template",
          "replace": "module github.com/{{.GitHubRepo}}"
        }
      ]
    },
    {
      "path": "go.sum",
      "template": false,
      "content": "dario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=\ndario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/bytedance/sonic v1.11.6 h1:oUp34TzMlL+OY1OUWxHqsdkgC/Zfc85zGqw9siXjrc0=\ngithub.com/bytedance/sonic v1.11.6/go.mod h1:LysEHSvpvDySVdC2f87zGWf6CIKJcAvqab1ZaiQtds4=\ngithub.com/bytedance/sonic/loader v0.1.1 h1:c+e5Pt1k/cy5wMveRDyk2X4B9hF4g7an8N3zCYjJFNM=\ngithub.com/bytedance/sonic/loader v0.1.1/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=\ngithub.com/cenkalti/backoff/v4 v4.2.1 h1:y4OZtCnogmCPw98Zjyt5a6+QwPLGkiQsYW5oUqylYbM=\ngithub.com/cenkalti/backoff/v4 v4.2.1/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/cloudwego/base64x v0.1.4 h1:jwCgWpFanWmN8xoIUHa2rtzmkd5J2plF/dnLS6Xd/0Y=\ngithub.com/cloudwego/base64x v0.1.4/go.mod h1:0zlkT4Wn5C6NdauXdJRhSKRlJvmclQ1hhJgA0rcu/8w=\ngithub.com/cloudwego/iasm v0.2.0 h1:1KNIy1I1H9hNNFEEH3DVnI4UujN+1zjpuk6gwHLTssg=\ngithub.com/cloudwego/iasm v0.2.0/go.mod h1:8rXZaNYT2n95jn+zTI1sDr+IgcD2GVs0nlbbQPiEFhY=\ngithub.com/containerd/errdefs v1.0.0 h1:tg5yIfIlQIrxYtu9ajqY42W3lpS19XqdxRQeEwYG8PI=\ngithub.com/containerd/errdefs v1.0.0/go.mod h1:+YBYIdtsnF4Iw6nWZhJcqGSg/dwvV7tyJ/kCkyJ2k+M=\ngithub.com/containerd/errdefs/pkg v0.3.0 h1:9IKJ06FvyNlexW690DXuQNx2KA2cUJXx151Xdx3ZPPE=\ngithub.com/containerd/errdefs/pkg v0.3.0/go.mod h1:NJw6s9HwNuRhnjJhM7pylWwMyAkmCQvQ4GpJHEqRLVk=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/platforms v0.2.1 h1:zvwtM3rz2YHPQsF2CHYM8+KtB5dvhISiXh5ZpSBQv6A=\ngithub.com/containerd/platforms v0.2.1/go.mod h1:XHCb+2/hzowdiut9rkudds9bE5yJ7npe7dG/wG+uFPw=\ngithub.com/cpuguy83/dockercfg v0.3.2 h1:DlJTyZGBDlXqUZ2Dk2Q3xHs/FtnooJJVaad2S9GKorA=\ngithub.com/cpuguy83/dockercfg v0.3.2/go.mod h1:sugsbF4//dDlL/i+S+rtpIWp+5h0BHJHfjj5/jFyUJc=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/docker v28.2.2+incompatible h1:CjwRSksz8Yo4+RmQ339Dp/D2tGO5JxwYeqtMOEe0LDw=\ngithub.com/docker/docker v28.2.2+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/ebitengine/purego v0.8.4 h1:CF7LEKg5FFOsASUj0+QwaXf8Ht6TlFxg09+S9wz0omw=\ngithub.com/ebitengine/purego v0.8.4/go.mod h1:iIjxzd6CiRiOG0UyXP+V1+jWqUXVjPKLAI0mRfJZTmQ=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/gabriel-vasile/mimetype v1.4.3 h1:in2uUcidCuFcDKtdcBxlR0rJ1+fsokWf+uqxgUFjbI0=\ngithub.com/gabriel-vasile/mimetype v1.4.3/go.mod h1:d8uq/6HKRL6CGdk+aubisF/M5GcPfT7nKyLpA0lbSSk=\ngithub.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=\ngithub.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=\ngithub.com/gin-gonic/gin v1.10.1 h1:T0ujvqyCSqRopADpgPgiTT63DUQVSfojyME59Ei63pQ=\ngithub.com/gin-gonic/gin v1.10.1/go.mod h1:4PMNQiOhvDRa013RKVbsiNwoyezlm2rm0uX/T7kzp5Y=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=\ngithub.com/go-playground/assert/v2 v2.2.0/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=\ngithub.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=\ngithub.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=\ngithub.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=\ngithub.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=\ngithub.com/go-playground/validator/v10 v10.20.0 h1:K9ISHbSaI0lyB2eWMPJo+kOS/FBExVwjEviJTixqxL8=\ngithub.com/go-playground/validator/v10 v10.20.0/go.mod h1:dbuPbCMFw/DrkbEynArYaCwl3amGuJotoKCe95atGMM=\ngithub.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=\ngithub.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v5 v5.2.3 h1:kkGXqQOBSDDWRhWNXTFpqGSCMyh/PLnqUvMGJPDJDs0=\ngithub.com/golang-jwt/jwt/v5 v5.2.3/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.7.0/go.mod h1:pXiqmnSA92OHEEa9HXL2W4E7lf9JzCmGVUdgjX3N/iU=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\ngithub.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\ngithub.com/jackc/pgservicefile v0.0.0-20221227161230-091c0ba34f0a h1:bbPeKD0xmW/Y25WS6cokEszi5g+S0QxI/d45PkRi7Nk=\ngithub.com/jackc/pgservicefile v0.0.0-20221227161230-091c0ba34f0a/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\ngithub.com/jackc/pgx/v5 v5.5.4 h1:Xp2aQS8uXButQdnCMWNmvx6UysWQQC+u1EoizjguY+8=\ngithub.com/jackc/pgx/v5 v5.5.4/go.mod h1:ez9gk+OAat140fv9ErkZDYFWmXLfV+++K0uAOiwgm1A=\ngithub.com/jackc/puddle/v2 v2.2.1 h1:RhxXJtFG022u4ibrCSMSiu5aOq1i77R3OHKNJj77OAk=\ngithub.com/jackc/puddle/v2 v2.2.1/go.mod h1:vriiEXHvEE654aYKXXjOvZM39qJ0q+azkZFrfEOc3H4=\ngithub.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=\ngithub.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=\ngithub.com/jinzhu/now v1.1.5 h1:/o9tlHleP7gOFmsnYNz3RGnqzefHA47wQpKrrdTIwXQ=\ngithub.com/jinzhu/now v1.1.5/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/kelseyhightower/envconfig v1.4.0 h1:Im6hONhd3pLkfDFsbRgu68RDNkGF1r3dvMUtDTo2cv8=\ngithub.com/kelseyhightower/envconfig v1.4.0/go.mod h1:cccZRl6mQpaq41TPp5QxidR+Sa3axMbJDNb//FQX6Gg=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.18.0 h1:c/Cqfb0r+Yi+JtIEq73FWXVkRonBlf0CRNYc8Zttxdo=\ngithub.com/klauspost/compress v1.18.0/go.mod h1:2Pp+KzxcywXVXMr50+X0Q/Lsb43OQHYWRCY2AiWywWQ=\ngithub.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/klauspost/cpuid/v2 v2.2.7 h1:ZWSB3igEs+d0qvnxR/ZBzXVmxkgt8DdzP6m9pfuVLDM=\ngithub.com/klauspost/cpuid/v2 v2.2.7/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/leodido/go-urn v1.4.0 h1:WT9HwE9SGECu3lg4d/dIA+jxlljEa1/ffXKmRjqdmIQ=\ngithub.com/leodido/go-urn v1.4.0/go.mod h1:bvxc+MVxLKB4z00jd1z+Dvzr47oO32F/QSNjSBOlFxI=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0 h1:6E+4a0GO5zZEnZ81pIr0yLvtUWk2if982qA3F3QD6H4=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0/go.mod h1:zJYVVT2jmtg6P3p1VtQj7WsuWi/y4VnjVBn7F8KPB3I=\ngithub.com/magiconair/properties v1.8.10 h1:s31yESBquKXCV9a/ScB3ESkOjUYYv+X0rg8SYxI99mE=\ngithub.com/magiconair/properties v1.8.10/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/go-archive v0.1.0 h1:Kk/5rdW/g+H8NHdJW2gsXyZ7UnzvJNOy6VKJqueWdcQ=\ngithub.com/moby/go-archive v0.1.0/go.mod h1:G9B+YoujNohJmrIYFBpSd54GTUB4lt9S+xVQvsJyFuo=\ngithub.com/moby/patternmatcher v0.6.0 h1:GmP9lR19aU5GqSSFko+5pRqHi+Ohk1O69aFiKkVGiPk=\ngithub.com/moby/patternmatcher v0.6.0/go.mod h1:hDPoyOpDY7OrrMDLaYoY3hf52gNCR/YOUYxkhApJIxc=\ngithub.com/moby/sys/sequential v0.6.0 h1:qrx7XFUd/5DxtqcoH1h438hF5TmOvzC/lspjy7zgvCU=\ngithub.com/moby/sys/sequential v0.6.0/go.mod h1:uyv8EUTrca5PnDsdMGXhZe6CCe8U/UiTWd+lL+7b/Ko=\ngithub.com/moby/sys/user v0.4.0 h1:jhcMKit7SA80hivmFJcbB1vqmw//wU61Zdui2eQXuMs=\ngithub.com/moby/sys/user v0.4.0/go.mod h1:bG+tYYYJgaMtRKgEmuueC0hJEAZWwtIbZTB+85uoHjs=\ngithub.com/moby/sys/userns v0.1.0 h1:tVLXkFOxVu9A64/yh59slHVv9ahO9UIev4JZusOLG/g=\ngithub.com/moby/sys/userns v0.1.0/go.mod h1:IHUYgu/kao6N8YZlp9Cf444ySSvCmDlmzUcYfDHOl28=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.1 h1:y0fUlFfIZhPF1W537XOLg0/fcx6zcHCJwooC2xJA040=\ngithub.com/opencontainers/image-spec v1.1.1/go.mod h1:qpqAh3Dmcf36wStyyWU+kCeDgrGnAve2nCC8+7h8Q0M=\ngithub.com/pelletier/go-toml/v2 v2.2.2 h1:aYUidT7k73Pcl9nb2gScu7NSrKCSHIDE89b3+6Wq+LM=\ngithub.com/pelletier/go-toml/v2 v2.2.2/go.mod h1:1t835xjRzz80PqgE6HHgN2JOsmgYu/h4qDAS4n929Rs=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c h1:ncq/mPwQF4JjgDlrVEn3C11VoGHZN7m8qihwgMEtzYw=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=\ngithub.com/shirou/gopsutil/v4 v4.25.5 h1:rtd9piuSMGeU8g1RMXjZs9y9luK5BwtnG7dZaQUJAsc=\ngithub.com/shirou/gopsutil/v4 v4.25.5/go.mod h1:PfybzyydfZcN+JMMjkF6Zb8Mq1A/VcogFFg7hj50W9c=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/testcontainers/testcontainers-go v0.38.0 h1:d7uEapLcv2P8AvH8ahLqDMMxda2W9gQN1nRbHS28HBw=\ngithub.com/testcontainers/testcontainers-go v0.38.0/go.mod h1:C52c9MoHpWO+C4aqmgSU+hxlR5jlEayWtgYrb8Pzz1w=\ngithub.com/testcontainers/testcontainers-go/modules/postgres v0.38.0 h1:KFdx9A0yF94K70T6ibSuvgkQQeX1xKlZVF3hEagXEtY=\ngithub.com/testcontainers/testcontainers-go/modules/postgres v0.38.0/go.mod h1:T/QRECND6N6tAKMxF1Za+G2tpwnGEHcODzHRsgIpw9M=\ngithub.com/tklauser/go-sysconf v0.3.12 h1:0QaGUFOdQaIVdPgfITYzaTegZvdCjmYO52cSFAEVmqU=\ngithub.com/tklauser/go-sysconf v0.3.12/go.mod h1:Ho14jnntGE1fpdOqQEEaiKRpvIavV0hSfmBq8nJbHYI=\ngithub.com/tklauser/numcpus v0.6.1 h1:ng9scYS7az0Bk4OZLvrNXNSAO2Pxr1XXRAPyjhIx+Fk=\ngithub.com/tklauser/numcpus v0.6.1/go.mod h1:1XfjsgE2zo8GVw7POkMbHENHzVg3GzmoZ9fESEdAacY=\ngithub.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=\ngithub.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=\ngithub.com/ugorji/go/codec v1.2.12 h1:9LC83zGrHhuUA9l16C9AHXAqEV/2wBQ4nkvumAE65EE=\ngithub.com/ugorji/go/codec v1.2.12/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yusufpapurcu/wmi v1.2.4 h1:zFUKzehAFReQwLys1b/iSMl+JQGSCSjtVqQn9bBrPo0=\ngithub.com/yusufpapurcu/wmi v1.2.4/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\ngo.opentelemetry.io/auto/sdk v1.1.0 h1:cH53jehLUN6UFLY71z+NDOiNJqDdPRaXzTel0sJySYA=\ngo.opentelemetry.io/auto/sdk v1.1.0/go.mod h1:3wSPjt5PWp2RhlCcmmOial7AvC4DQqZb7a7wCow3W8A=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 h1:jq9TW8u3so/bN+JPT166wjOI6/vQPF6Xe7nMNIltagk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0/go.mod h1:p8pYQP+m5XfbZm9fxtSKAbM6oIllS7s2AfxrChvc7iw=\ngo.opentelemetry.io/otel v1.35.0 h1:xKWKPxrxB6OtMCbmMY021CqC45J+3Onta9MqjhnusiQ=\ngo.opentelemetry.io/otel v1.35.0/go.mod h1:UEqy8Zp11hpkUrL73gSlELM0DupHoiq72dR+Zqel/+Y=\ngo.opentelemetry.io/otel/metric v1.35.0 h1:0znxYu2SNyuMSQT4Y9WDWej0VpcsxkuklLa4/siN90M=\ngo.opentelemetry.io/otel/metric v1.35.0/go.mod h1:nKVFgxBZ2fReX6IlyW28MgZojkoAkJGaE8CpgeAU3oE=\ngo.opentelemetry.io/otel/trace v1.35.0 h1:dPpEfJu1sDIqruz7BHFG3c7528f6ddfSWfFDVt/xgMs=\ngo.opentelemetry.io/otel/trace v1.35.0/go.mod h1:WUk7DtFp1Aw2MkvqGdwiXYDZZNvA/1J8o6xRXLrIkyc=\ngolang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=\ngolang.org/x/arch v0.8.0 h1:3wRIsP3pM4yUptoR96otTUOXI367OS0+c9eeRi9doIc=\ngolang.org/x/arch v0.8.0/go.mod h1:FEVrYAQjsQXMVJ1nsMoVVXPZg6p2JE2mx8psSWTDQys=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.40.0 h1:r4x+VvoG5Fm+eJcxMaY8CQM7Lb0l1lsmjGBQ6s8BfKM=\ngolang.org/x/crypto v0.40.0/go.mod h1:Qr1vMER5WyS2dfPHAlsOj01wgLbsyWtFn/aY+5+ZdxY=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.41.0 h1:vBTly1HeNPEn3wtREYfy4GZ/NECgw2Cnl+nK6Nz3uvw=\ngolang.org/x/net v0.41.0/go.mod h1:B/K4NNqkfmg07DQYrbwvSluqCJOOXwUjeb/5lOisjbA=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.16.0 h1:ycBJEhp9p4vXvUZNszeOq0kGTPghopOL8q0fq3vstxw=\ngolang.org/x/sync v0.16.0/go.mod h1:1dzgHSNfp02xaA81J2MS99Qcpr2w7fw1gpm99rleRqA=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.11.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.34.0 h1:H5Y5sJ2L2JRdyv7ROF1he/lPdvFsd0mJHFw2ThKHxLA=\ngolang.org/x/sys v0.34.0/go.mod h1:BJP2sWEmIv4KK5OTEluFJCKSidICx8ciO85XgH3Ak8k=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.27.0 h1:4fGWRpyh641NLlecmyl4LOe6yDdfaYNrGb2zdfo4JV4=\ngolang.org/x/text v0.27.0/go.mod h1:1D28KMCvyooCX9hBiosv5Tz/+YLxj0j7XhWjpSUF7CU=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/protobuf v1.36.6 h1:z1NpPI8ku2WgiWnf+t9wTPsn6eP1L7ksHUlkfLvd9xY=\ngoogle.golang.org/protobuf v1.36.6/go.mod h1:jduwjTPXsFjZGTmRluh+L6NjiWu7pchiJ2/5YcXBHnY=\ngopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc h1:2gGKlE2+asNV9m7xrywl36YYNnBG5ZQ0r/BOOxqPpmk=\ngopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc/go.mod h1:m7x9LTH6d71AHyAX77c9yqWCCa3UKHcVEj9y7hAtKDk=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df h1:n7WqCuqOuCbNr617RXOY0AWRXxgwEyPp2z+p0+hgMuE=\ngopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df/go.mod h1:LRQQ+SO6ZHR7tOkpBDuZnXENFzX8qRjMDMyPD6BRkCw=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngorm.io/driver/postgres v1.5.4 h1:Iyrp9Meh3GmbSuyIAGyjkN+n9K+GHX9b9MqsTL4EJCo=\ngorm.io/driver/postgres v1.5.4/go.mod h1:Bgo89+h0CRcdA33Y6frlaHHVuTdOf87pmyzwW9C/BH0=\ngorm.io/gorm v1.25.5 h1:zR9lOiiYf09VNh5Q1gphfyia1JpiClIWG9hQaxB/mls=\ngorm.io/gorm v1.25.5/go.mod h1:hbnx/Oo0ChWMn1BIhpy1oYozzpM15i4YPuHDmfYtwg8=\nnullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\n",
      "size": 23548,
      "hash": "820e48721811a4310709e770d0231cfa7e637b88f11282875c665462b0e00a0c"
    },
    {
      "path": "internal/admin/domain/errors.go",
      "template": true,
      "content": "package domain\n\nimport \"errors\"\n\n// Admin management errors\nvar (\n\tErrNotAuthorized       = errors.New(\"not authorized for admin operations\")\n\tErrCannotManageSelf    = errors.New(\"cannot manage own account through admin interface\")\n\tErrBulkActionFailed    = errors.New(\"bulk action failed\")\n\tErrAuditLogNotFound    = errors.New(\"audit log not found\")\n\tErrSystemHealthCheck   = errors.New(\"system health check failed\")\n\tErrInvalidDateRange    = errors.New(\"invalid date range\")\n\tErrTooManyUsers        = errors.New(\"too many users selected for bulk action\")\n)\n\n// IsAdminError checks if the error is an admin management error\nfunc IsAdminError(err error) bool {\n\treturn err == ErrNotAuthorized ||\n\t\terr == ErrCannotManageSelf ||\n\t\terr == ErrBulkActionFailed ||\n\t\terr == ErrAuditLogNotFound ||\n\t\terr == ErrSystemHealthCheck ||\n\t\terr == ErrInvalidDateRange ||\n\t\terr == ErrTooManyUsers\n}",
      "size": 883,
      "hash": "ae94f90df17520ea94b39007a43cda1231aa7d05dd0dc29d135bcdfddaa5ac41",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/admin/domain/types.go",
      "template": true,
      "content": "package domain\n\nimport (\n\t\"time\"\n\n\tauthdomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\tuserdomain \"github.com/acheevo/fullstack-template/internal/user/domain\"\n)\n\n// Admin user management DTOs\n\n// UpdateUserRoleRequest represents a request to update a user's role\ntype UpdateUserRoleRequest struct {\n\tRole   authdomain.UserRole `json:\"role\" binding:\"required,oneof=user admin\"`\n\tReason string              `json:\"reason\" binding:\"required,min=1,max=255\"`\n}\n\n// UpdateUserStatusRequest represents a request to update a user's status\ntype UpdateUserStatusRequest struct {\n\tStatus authdomain.UserStatus `json:\"status\" binding:\"required,oneof=active inactive suspended\"`\n\tReason string                `json:\"reason\" binding:\"required,min=1,max=255\"`\n}\n\n// AdminUpdateUserRequest represents an admin request to update user information\ntype AdminUpdateUserRequest struct {\n\tFirstName     string                `json:\"first_name\" binding:\"omitempty,min=1,max=50\"`\n\tLastName      string                `json:\"last_name\" binding:\"omitempty,min=1,max=50\"`\n\tEmail         string                `json:\"email\" binding:\"omitempty,email\"`\n\tEmailVerified *bool                 `json:\"email_verified\"`\n\tRole          authdomain.UserRole   `json:\"role\" binding:\"omitempty,oneof=user admin\"`\n\tStatus        authdomain.UserStatus `json:\"status\" binding:\"omitempty,oneof=active inactive suspended\"`\n\tAvatar        string                `json:\"avatar\" binding:\"omitempty,url\"`\n\tReason        string                `json:\"reason\" binding:\"required,min=1,max=255\"`\n}\n\n// DeleteUserRequest represents a request to delete a user\ntype DeleteUserRequest struct {\n\tReason string `json:\"reason\" binding:\"required,min=1,max=255\"`\n\tForce  bool   `json:\"force\"` // Force delete (hard delete) vs soft delete\n}\n\n// BulkUserActionRequest represents a request to perform bulk actions on users\ntype BulkUserActionRequest struct {\n\tUserIDs []uint           `json:\"user_ids\" binding:\"required,min=1\"`\n\tAction  BulkActionType   `json:\"action\" binding:\"required,oneof=activate deactivate suspend delete role_change\"`\n\tRole    *authdomain.UserRole `json:\"role\" binding:\"required_if=Action role_change\"`\n\tReason  string           `json:\"reason\" binding:\"required,min=1,max=255\"`\n}\n\n// BulkActionType represents the type of bulk action\ntype BulkActionType string\n\nconst (\n\tBulkActionActivate    BulkActionType = \"activate\"\n\tBulkActionDeactivate  BulkActionType = \"deactivate\"\n\tBulkActionSuspend     BulkActionType = \"suspend\"\n\tBulkActionDelete      BulkActionType = \"delete\"\n\tBulkActionRoleChange  BulkActionType = \"role_change\"\n)\n\n// BulkActionResult represents the result of a bulk action\ntype BulkActionResult struct {\n\tTotalRequested int                  `json:\"total_requested\"`\n\tSuccessful     int                  `json:\"successful\"`\n\tFailed         int                  `json:\"failed\"`\n\tResults        []BulkActionItemResult `json:\"results\"`\n}\n\n// BulkActionItemResult represents the result of a single item in a bulk action\ntype BulkActionItemResult struct {\n\tUserID  uint   `json:\"user_id\"`\n\tSuccess bool   `json:\"success\"`\n\tError   string `json:\"error,omitempty\"`\n}\n\n// AdminStatsResponse represents admin dashboard statistics\ntype AdminStatsResponse struct {\n\tTotalUsers       int            `json:\"total_users\"`\n\tActiveUsers      int            `json:\"active_users\"`\n\tInactiveUsers    int            `json:\"inactive_users\"`\n\tSuspendedUsers   int            `json:\"suspended_users\"`\n\tAdminUsers       int            `json:\"admin_users\"`\n\tNewUsersToday    int            `json:\"new_users_today\"`\n\tNewUsersThisWeek int            `json:\"new_users_this_week\"`\n\tUserGrowth       []UserGrowthData `json:\"user_growth\"`\n\tTopCountries     []CountryData    `json:\"top_countries,omitempty\"`\n}\n\n// UserGrowthData represents user growth data for charts\ntype UserGrowthData struct {\n\tDate  string `json:\"date\"`\n\tCount int    `json:\"count\"`\n}\n\n// CountryData represents user count by country\ntype CountryData struct {\n\tCountry string `json:\"country\"`\n\tCount   int    `json:\"count\"`\n}\n\n// AdminAuditLogRequest represents a request to fetch audit logs\ntype AdminAuditLogRequest struct {\n\tPage       int                     `form:\"page,default=1\" binding:\"min=1\"`\n\tPageSize   int                     `form:\"page_size,default=50\" binding:\"min=1,max=100\"`\n\tUserID     *uint                   `form:\"user_id\"`\n\tTargetID   *uint                   `form:\"target_id\"`\n\tAction     authdomain.AuditAction  `form:\"action\"`\n\tLevel      authdomain.AuditLevel   `form:\"level\" binding:\"omitempty,oneof=info warning error\"`\n\tResource   string                  `form:\"resource\"`\n\tDateFrom   *time.Time              `form:\"date_from\" time_format:\"2006-01-02\"`\n\tDateTo     *time.Time              `form:\"date_to\" time_format:\"2006-01-02\"`\n\tIPAddress  string                  `form:\"ip_address\"`\n}\n\n// AdminAuditLogResponse represents the response for audit log requests\ntype AdminAuditLogResponse struct {\n\tLogs       []*EnhancedAuditLogEntry `json:\"logs\"`\n\tPagination userdomain.Pagination    `json:\"pagination\"`\n}\n\n// EnhancedAuditLogEntry represents an enhanced audit log entry with user details\ntype EnhancedAuditLogEntry struct {\n\tuserdomain.AuditLogEntry\n\tUser   *userdomain.UserSummary `json:\"user,omitempty\"`\n\tTarget *userdomain.UserSummary `json:\"target,omitempty\"`\n}\n\n// SystemHealthResponse represents system health information\ntype SystemHealthResponse struct {\n\tStatus      string                 `json:\"status\"`\n\tTimestamp   time.Time              `json:\"timestamp\"`\n\tVersion     string                 `json:\"version\"`\n\tUptime      string                 `json:\"uptime\"`\n\tDatabase    HealthStatus           `json:\"database\"`\n\tRedis       HealthStatus           `json:\"redis,omitempty\"`\n\tEmail       HealthStatus           `json:\"email\"`\n\tMetrics     SystemMetrics          `json:\"metrics\"`\n}\n\n// HealthStatus represents the health status of a component\ntype HealthStatus struct {\n\tStatus  string    `json:\"status\"`\n\tLatency string    `json:\"latency,omitempty\"`\n\tError   string    `json:\"error,omitempty\"`\n\tLastCheck time.Time `json:\"last_check\"`\n}\n\n// SystemMetrics represents system performance metrics\ntype SystemMetrics struct {\n\tActiveSessions   int     `json:\"active_sessions\"`\n\tRequestsPerMin   int     `json:\"requests_per_minute\"`\n\tAvgResponseTime  string  `json:\"avg_response_time\"`\n\tErrorRate        float64 `json:\"error_rate\"`\n\tMemoryUsage      string  `json:\"memory_usage\"`\n\tDiskUsage        string  `json:\"disk_usage\"`\n}\n\n// Permission and role management\n\n// PermissionCheck represents a permission check\ntype PermissionCheck struct {\n\tUserID     uint   `json:\"user_id\"`\n\tResource   string `json:\"resource\"`\n\tAction     string `json:\"action\"`\n\tPermission string `json:\"permission\"`\n}\n\n// PermissionResponse represents a permission check response\ntype PermissionResponse struct {\n\tAllowed bool   `json:\"allowed\"`\n\tReason  string `json:\"reason,omitempty\"`\n}\n\n// Helper methods\n\n// ToEnhancedAuditLogEntry converts an AuditLog to EnhancedAuditLogEntry\nfunc ToEnhancedAuditLogEntry(log *authdomain.AuditLog) *EnhancedAuditLogEntry {\n\tentry := \u0026EnhancedAuditLogEntry{\n\t\tAuditLogEntry: userdomain.AuditLogEntry{\n\t\t\tID:          log.ID,\n\t\t\tAction:      log.Action,\n\t\t\tLevel:       log.Level,\n\t\t\tResource:    log.Resource,\n\t\t\tDescription: log.Description,\n\t\t\tIPAddress:   log.IPAddress,\n\t\t\tUserAgent:   log.UserAgent,\n\t\t\tMetadata:    log.Metadata,\n\t\t\tCreatedAt:   log.CreatedAt,\n\t\t},\n\t}\n\n\tif log.User != nil {\n\t\tentry.User = userdomain.ToUserSummary(log.User)\n\t}\n\n\tif log.Target != nil {\n\t\tentry.Target = userdomain.ToUserSummary(log.Target)\n\t}\n\n\treturn entry\n}\n\n// Admin permissions\n\n// IsAuthorizedForUserManagement checks if a user can manage other users\nfunc IsAuthorizedForUserManagement(user *authdomain.User) bool {\n\treturn user.IsAdmin() \u0026\u0026 user.IsActive()\n}\n\n// CanManageUser checks if an admin can manage a specific user\nfunc CanManageUser(admin *authdomain.User, target *authdomain.User) bool {\n\tif !IsAuthorizedForUserManagement(admin) {\n\t\treturn false\n\t}\n\n\t// Admins cannot manage themselves through admin endpoints\n\tif admin.ID == target.ID {\n\t\treturn false\n\t}\n\n\t// Super admin logic could be added here if needed\n\treturn true\n}\n\n// ValidateBulkAction validates bulk action requests\nfunc (r *BulkUserActionRequest) Validate() error {\n\tif len(r.UserIDs) == 0 {\n\t\treturn userdomain.ErrInvalidRequest\n\t}\n\n\tif r.Action == BulkActionRoleChange \u0026\u0026 r.Role == nil {\n\t\treturn userdomain.ErrInvalidRequest\n\t}\n\n\treturn nil\n}",
      "size": 8500,
      "hash": "ea096bafa69e3221034811589712a1f08fc57dab88f5b1bbf73dabfec1a0dad2",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/admin/service/admin.go",
      "template": true,
      "content": "package service\n\nimport (\n\t\"fmt\"\n\t\"log/slog\"\n\t\"strings\"\n\n\tauthdomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/admin/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\tuserdomain \"github.com/acheevo/fullstack-template/internal/user/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/user/repository\"\n)\n\n// AdminService handles admin user management operations\ntype AdminService struct {\n\tconfig    *config.Config\n\tlogger    *slog.Logger\n\tuserRepo  *repository.UserRepository\n\tauditRepo *repository.AuditRepository\n}\n\n// NewAdminService creates a new admin service\nfunc NewAdminService(\n\tconfig *config.Config,\n\tlogger *slog.Logger,\n\tuserRepo *repository.UserRepository,\n\tauditRepo *repository.AuditRepository,\n) *AdminService {\n\treturn \u0026AdminService{\n\t\tconfig:    config,\n\t\tlogger:    logger,\n\t\tuserRepo:  userRepo,\n\t\tauditRepo: auditRepo,\n\t}\n}\n\n// ListUsers retrieves a paginated list of users with filtering\nfunc (s *AdminService) ListUsers(adminID uint, req *userdomain.UserListRequest) (*userdomain.UserListResponse, error) {\n\t// Check admin authorization\n\tadmin, err := s.userRepo.GetByID(adminID)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tif !domain.IsAuthorizedForUserManagement(admin) {\n\t\treturn nil, domain.ErrNotAuthorized\n\t}\n\n\t// Get users\n\tusers, total, err := s.userRepo.List(req)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to list users\", \"admin_id\", adminID, \"error\", err)\n\t\treturn nil, err\n\t}\n\n\t// Convert to summary format\n\tuserSummaries := make([]*userdomain.UserSummary, len(users))\n\tfor i, user := range users {\n\t\tuserSummaries[i] = userdomain.ToUserSummary(user)\n\t}\n\n\t// Build pagination\n\ttotalPages := (total + req.PageSize - 1) / req.PageSize\n\tpagination := userdomain.Pagination{\n\t\tPage:       req.Page,\n\t\tPageSize:   req.PageSize,\n\t\tTotal:      total,\n\t\tTotalPages: totalPages,\n\t\tHasNext:    req.Page \u003c totalPages,\n\t\tHasPrev:    req.Page \u003e 1,\n\t}\n\n\treturn \u0026userdomain.UserListResponse{\n\t\tUsers:      userSummaries,\n\t\tPagination: pagination,\n\t}, nil\n}\n\n// GetUserDetails retrieves detailed information about a user\nfunc (s *AdminService) GetUserDetails(adminID, targetUserID uint) (*userdomain.UserDetailResponse, error) {\n\t// Check admin authorization\n\tadmin, err := s.userRepo.GetByID(adminID)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tif !domain.IsAuthorizedForUserManagement(admin) {\n\t\treturn nil, domain.ErrNotAuthorized\n\t}\n\n\t// Get target user\n\ttargetUser, err := s.userRepo.GetByID(targetUserID)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\t// Build response\n\tresponse := userdomain.ToUserDetailResponse(targetUser)\n\n\t// Get audit trail for this user\n\tauditLogs, err := s.auditRepo.GetUserAuditHistory(targetUserID, 50)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to get user audit history\", \"user_id\", targetUserID, \"error\", err)\n\t\t// Continue without audit trail rather than failing\n\t} else {\n\t\tresponse.AuditTrail = make([]userdomain.AuditLogEntry, len(auditLogs))\n\t\tfor i, log := range auditLogs {\n\t\t\tresponse.AuditTrail[i] = userdomain.AuditLogEntry{\n\t\t\t\tID:          log.ID,\n\t\t\t\tAction:      log.Action,\n\t\t\t\tLevel:       log.Level,\n\t\t\t\tResource:    log.Resource,\n\t\t\t\tDescription: log.Description,\n\t\t\t\tIPAddress:   log.IPAddress,\n\t\t\t\tUserAgent:   log.UserAgent,\n\t\t\t\tMetadata:    log.Metadata,\n\t\t\t\tCreatedAt:   log.CreatedAt,\n\t\t\t}\n\t\t}\n\t}\n\n\treturn response, nil\n}\n\n// UpdateUserRole updates a user's role with comprehensive security validation\nfunc (s *AdminService) UpdateUserRole(adminID, targetUserID uint, req *domain.UpdateUserRoleRequest, ipAddress, userAgent string) error {\n\t// Check admin authorization\n\tadmin, err := s.userRepo.GetByID(adminID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tif !domain.IsAuthorizedForUserManagement(admin) {\n\t\treturn domain.ErrNotAuthorized\n\t}\n\n\t// Get target user\n\ttargetUser, err := s.userRepo.GetByID(targetUserID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Check if admin can manage this user\n\tif !domain.CanManageUser(admin, targetUser) {\n\t\treturn domain.ErrCannotManageSelf\n\t}\n\n\t// Perform comprehensive security validation\n\tsecurityCheck := \u0026authdomain.RoleChangeSecurityCheck{\n\t\tAdminID:       adminID,\n\t\tAdminRole:     admin.Role,\n\t\tTargetID:      targetUserID,\n\t\tTargetRole:    targetUser.Role,\n\t\tNewRole:       req.Role,\n\t\tReason:        req.Reason,\n\t\tIPAddress:     ipAddress,\n\t\tUserAgent:     userAgent,\n\t\tRequestSource: \"web\",\n\t}\n\n\tvalidationResult := authdomain.ValidateRoleChange(securityCheck)\n\tif !validationResult.Valid {\n\t\ts.logger.Warn(\"role change validation failed\",\n\t\t\t\"admin_id\", adminID,\n\t\t\t\"target_user_id\", targetUserID,\n\t\t\t\"errors\", validationResult.Errors,\n\t\t\t\"risk_level\", validationResult.RiskLevel,\n\t\t)\n\t\treturn fmt.Errorf(\"role change validation failed: %s\", strings.Join(validationResult.Errors, \"; \"))\n\t}\n\n\t// Log security warnings\n\tif len(validationResult.Warnings) \u003e 0 {\n\t\ts.logger.Warn(\"role change security warnings\",\n\t\t\t\"admin_id\", adminID,\n\t\t\t\"target_user_id\", targetUserID,\n\t\t\t\"warnings\", validationResult.Warnings,\n\t\t\t\"risk_level\", validationResult.RiskLevel,\n\t\t\t\"audit_flags\", validationResult.AuditFlags,\n\t\t)\n\t}\n\n\t// Store the old role for audit\n\toldRole := targetUser.Role\n\n\t// Create comprehensive audit entry before making changes\n\tauditEntry := authdomain.CreateRoleChangeAuditEntry(\n\t\tadmin,\n\t\ttargetUser,\n\t\treq.Role,\n\t\treq.Reason,\n\t\tipAddress,\n\t\tuserAgent,\n\t\t\"web\",\n\t\tvalidationResult,\n\t)\n\n\t// Log the audit entry details\n\ts.logger.Info(\"role change initiated\",\n\t\t\"admin_id\", adminID,\n\t\t\"admin_email\", admin.Email,\n\t\t\"target_user_id\", targetUserID,\n\t\t\"target_email\", targetUser.Email,\n\t\t\"old_role\", oldRole,\n\t\t\"new_role\", req.Role,\n\t\t\"risk_level\", validationResult.RiskLevel,\n\t\t\"requires_secondary_auth\", validationResult.RequiresSecondaryAuth,\n\t)\n\n\t// TODO: Implement secondary authentication if required\n\tif validationResult.RequiresSecondaryAuth {\n\t\ts.logger.Info(\"secondary authentication required for role change\",\n\t\t\t\"admin_id\", adminID,\n\t\t\t\"target_user_id\", targetUserID,\n\t\t\t\"new_role\", req.Role,\n\t\t)\n\t\t// For now, we'll proceed, but in production you might want to:\n\t\t// 1. Send email to security team\n\t\t// 2. Require MFA confirmation\n\t\t// 3. Implement approval workflow\n\t}\n\n\t// Update role\n\terr = s.userRepo.UpdateUserRole(targetUserID, req.Role)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to update user role\", \n\t\t\t\"admin_id\", adminID, \n\t\t\t\"target_user_id\", targetUserID, \n\t\t\t\"error\", err,\n\t\t)\n\t\treturn err\n\t}\n\n\t// Create enhanced audit log with security validation details\n\tauditDetails := map[string]interface{}{\n\t\t\"old_role\":           oldRole,\n\t\t\"new_role\":           req.Role,\n\t\t\"reason\":             req.Reason,\n\t\t\"validation_result\":  validationResult,\n\t\t\"audit_entry\":        auditEntry,\n\t\t\"security_flags\":     validationResult.AuditFlags,\n\t\t\"risk_level\":         validationResult.RiskLevel,\n\t}\n\n\ts.auditRepo.CreateAuditEntry(\n\t\t\u0026adminID,\n\t\t\u0026targetUserID,\n\t\tauthdomain.AuditActionUserRoleChanged,\n\t\tauthdomain.AuditLevelInfo,\n\t\t\"admin\",\n\t\tfmt.Sprintf(\"Role changed from %s to %s: %s [Risk: %s]\", oldRole, req.Role, req.Reason, validationResult.RiskLevel),\n\t\tipAddress,\n\t\tuserAgent,\n\t\tauditDetails,\n\t)\n\n\t// Generate security alerts for high-risk changes\n\tif validationResult.RiskLevel == \"high\" || validationResult.RiskLevel == \"critical\" {\n\t\talertData := map[string]interface{}{\n\t\t\t\"admin_id\":       adminID,\n\t\t\t\"admin_email\":    admin.Email,\n\t\t\t\"target_id\":      targetUserID,\n\t\t\t\"target_email\":   targetUser.Email,\n\t\t\t\"old_role\":       oldRole,\n\t\t\t\"new_role\":       req.Role,\n\t\t\t\"reason\":         req.Reason,\n\t\t\t\"risk_level\":     validationResult.RiskLevel,\n\t\t\t\"audit_flags\":    validationResult.AuditFlags,\n\t\t\t\"ip_address\":     ipAddress,\n\t\t}\n\n\t\talert := authdomain.GenerateSecurityAlert(\n\t\t\t\"role_change\",\n\t\t\tvalidationResult.RiskLevel,\n\t\t\tfmt.Sprintf(\"High-risk role change: %s → %s\", oldRole, req.Role),\n\t\t\tfmt.Sprintf(\"Admin %s changed role of %s from %s to %s\", admin.Email, targetUser.Email, oldRole, req.Role),\n\t\t\tadmin,\n\t\t\talertData,\n\t\t)\n\n\t\ts.logger.Warn(\"security alert generated for role change\",\n\t\t\t\"alert_id\", alert.ID,\n\t\t\t\"alert_type\", alert.Type,\n\t\t\t\"severity\", alert.Severity,\n\t\t\t\"admin_id\", adminID,\n\t\t\t\"target_user_id\", targetUserID,\n\t\t)\n\n\t\t// TODO: Send alert to security monitoring system\n\t}\n\n\ts.logger.Info(\"role change completed successfully\",\n\t\t\"admin_id\", adminID,\n\t\t\"target_user_id\", targetUserID,\n\t\t\"old_role\", oldRole,\n\t\t\"new_role\", req.Role,\n\t\t\"risk_level\", validationResult.RiskLevel,\n\t)\n\n\treturn nil\n}\n\n// UpdateUserStatus updates a user's status\nfunc (s *AdminService) UpdateUserStatus(adminID, targetUserID uint, req *domain.UpdateUserStatusRequest, ipAddress, userAgent string) error {\n\t// Check admin authorization\n\tadmin, err := s.userRepo.GetByID(adminID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tif !domain.IsAuthorizedForUserManagement(admin) {\n\t\treturn domain.ErrNotAuthorized\n\t}\n\n\t// Get target user\n\ttargetUser, err := s.userRepo.GetByID(targetUserID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Check if admin can manage this user\n\tif !domain.CanManageUser(admin, targetUser) {\n\t\treturn domain.ErrCannotManageSelf\n\t}\n\n\t// Update status\n\toldStatus := targetUser.Status\n\terr = s.userRepo.UpdateUserStatus(targetUserID, req.Status)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to update user status\", \"admin_id\", adminID, \"target_user_id\", targetUserID, \"error\", err)\n\t\treturn err\n\t}\n\n\t// Create audit log\n\ts.auditRepo.CreateAuditEntry(\n\t\t\u0026adminID,\n\t\t\u0026targetUserID,\n\t\tauthdomain.AuditActionUserStatusChanged,\n\t\tauthdomain.AuditLevelInfo,\n\t\t\"admin\",\n\t\tfmt.Sprintf(\"Status changed from %s to %s: %s\", oldStatus, req.Status, req.Reason),\n\t\tipAddress,\n\t\tuserAgent,\n\t\tmap[string]interface{}{\n\t\t\t\"old_status\": oldStatus,\n\t\t\t\"new_status\": req.Status,\n\t\t\t\"reason\":     req.Reason,\n\t\t},\n\t)\n\n\treturn nil\n}\n\n// UpdateUser updates user information (admin version)\nfunc (s *AdminService) UpdateUser(adminID, targetUserID uint, req *domain.AdminUpdateUserRequest, ipAddress, userAgent string) error {\n\t// Check admin authorization\n\tadmin, err := s.userRepo.GetByID(adminID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tif !domain.IsAuthorizedForUserManagement(admin) {\n\t\treturn domain.ErrNotAuthorized\n\t}\n\n\t// Get target user\n\ttargetUser, err := s.userRepo.GetByID(targetUserID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Check if admin can manage this user\n\tif !domain.CanManageUser(admin, targetUser) {\n\t\treturn domain.ErrCannotManageSelf\n\t}\n\n\t// Check if email change is requested and if it already exists\n\tif req.Email != \"\" \u0026\u0026 req.Email != targetUser.Email {\n\t\texists, err := s.userRepo.CheckEmailExists(req.Email, targetUserID)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tif exists {\n\t\t\treturn userdomain.ErrEmailAlreadyExists\n\t\t}\n\t}\n\n\t// Build changes for audit\n\tchanges := s.buildUserChanges(targetUser, req)\n\n\t// Apply updates\n\tif req.FirstName != \"\" {\n\t\ttargetUser.FirstName = req.FirstName\n\t}\n\tif req.LastName != \"\" {\n\t\ttargetUser.LastName = req.LastName\n\t}\n\tif req.Email != \"\" {\n\t\ttargetUser.Email = req.Email\n\t\tif req.EmailVerified != nil {\n\t\t\ttargetUser.EmailVerified = *req.EmailVerified\n\t\t}\n\t}\n\tif req.Role != \"\" {\n\t\ttargetUser.Role = req.Role\n\t}\n\tif req.Status != \"\" {\n\t\ttargetUser.Status = req.Status\n\t}\n\tif req.Avatar != \"\" {\n\t\ttargetUser.Avatar = req.Avatar\n\t}\n\n\t// Save changes\n\terr = s.userRepo.Update(targetUser)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to update user\", \"admin_id\", adminID, \"target_user_id\", targetUserID, \"error\", err)\n\t\treturn err\n\t}\n\n\t// Create audit log\n\ts.auditRepo.CreateAuditEntry(\n\t\t\u0026adminID,\n\t\t\u0026targetUserID,\n\t\tauthdomain.AuditActionUserUpdated,\n\t\tauthdomain.AuditLevelInfo,\n\t\t\"admin\",\n\t\tfmt.Sprintf(\"User updated by admin: %s. Reason: %s\", changes, req.Reason),\n\t\tipAddress,\n\t\tuserAgent,\n\t\tmap[string]interface{}{\n\t\t\t\"changes\": changes,\n\t\t\t\"reason\":  req.Reason,\n\t\t},\n\t)\n\n\treturn nil\n}\n\n// DeleteUsers deletes multiple users (soft or hard delete)\nfunc (s *AdminService) DeleteUsers(adminID uint, req *domain.DeleteUserRequest, userIDs []uint, ipAddress, userAgent string) error {\n\t// Check admin authorization\n\tadmin, err := s.userRepo.GetByID(adminID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tif !domain.IsAuthorizedForUserManagement(admin) {\n\t\treturn domain.ErrNotAuthorized\n\t}\n\n\t// Get target users to check permissions and for audit\n\ttargetUsers, err := s.userRepo.GetUsersByIDs(userIDs)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Check permissions for each user\n\tfor _, targetUser := range targetUsers {\n\t\tif !domain.CanManageUser(admin, targetUser) {\n\t\t\treturn domain.ErrCannotManageSelf\n\t\t}\n\t}\n\n\t// Perform deletion\n\tvar deleteErr error\n\tif req.Force {\n\t\tdeleteErr = s.userRepo.HardDelete(userIDs)\n\t} else {\n\t\tdeleteErr = s.userRepo.SoftDelete(userIDs)\n\t}\n\n\tif deleteErr != nil {\n\t\ts.logger.Error(\"failed to delete users\", \"admin_id\", adminID, \"user_ids\", userIDs, \"force\", req.Force, \"error\", deleteErr)\n\t\treturn deleteErr\n\t}\n\n\t// Create audit logs for each deleted user\n\tdeleteType := \"soft\"\n\tif req.Force {\n\t\tdeleteType = \"hard\"\n\t}\n\n\tfor _, targetUser := range targetUsers {\n\t\ts.auditRepo.CreateAuditEntry(\n\t\t\t\u0026adminID,\n\t\t\t\u0026targetUser.ID,\n\t\t\tauthdomain.AuditActionUserDeleted,\n\t\t\tauthdomain.AuditLevelWarning,\n\t\t\t\"admin\",\n\t\t\tfmt.Sprintf(\"User %s deleted (%s delete): %s\", targetUser.Email, deleteType, req.Reason),\n\t\t\tipAddress,\n\t\t\tuserAgent,\n\t\t\tmap[string]interface{}{\n\t\t\t\t\"delete_type\": deleteType,\n\t\t\t\t\"reason\":      req.Reason,\n\t\t\t\t\"user_email\":  targetUser.Email,\n\t\t\t},\n\t\t)\n\t}\n\n\treturn nil\n}\n\n// BulkUpdateUsers performs bulk operations on multiple users\nfunc (s *AdminService) BulkUpdateUsers(adminID uint, req *domain.BulkUserActionRequest, ipAddress, userAgent string) (*domain.BulkActionResult, error) {\n\t// Validate request\n\tif err := req.Validate(); err != nil {\n\t\treturn nil, err\n\t}\n\n\t// Check admin authorization\n\tadmin, err := s.userRepo.GetByID(adminID)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tif !domain.IsAuthorizedForUserManagement(admin) {\n\t\treturn nil, domain.ErrNotAuthorized\n\t}\n\n\t// Limit bulk operations\n\tif len(req.UserIDs) \u003e 100 {\n\t\treturn nil, domain.ErrTooManyUsers\n\t}\n\n\t// Get target users\n\ttargetUsers, err := s.userRepo.GetUsersByIDs(req.UserIDs)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tresult := \u0026domain.BulkActionResult{\n\t\tTotalRequested: len(req.UserIDs),\n\t\tResults:        make([]domain.BulkActionItemResult, 0, len(req.UserIDs)),\n\t}\n\n\t// Process each user\n\tfor _, userID := range req.UserIDs {\n\t\titemResult := domain.BulkActionItemResult{\n\t\t\tUserID:  userID,\n\t\t\tSuccess: false,\n\t\t}\n\n\t\t// Find user in fetched users\n\t\tvar targetUser *authdomain.User\n\t\tfor _, user := range targetUsers {\n\t\t\tif user.ID == userID {\n\t\t\t\ttargetUser = user\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif targetUser == nil {\n\t\t\titemResult.Error = \"user not found\"\n\t\t\tresult.Results = append(result.Results, itemResult)\n\t\t\tresult.Failed++\n\t\t\tcontinue\n\t\t}\n\n\t\t// Check if admin can manage this user\n\t\tif !domain.CanManageUser(admin, targetUser) {\n\t\t\titemResult.Error = \"cannot manage this user\"\n\t\t\tresult.Results = append(result.Results, itemResult)\n\t\t\tresult.Failed++\n\t\t\tcontinue\n\t\t}\n\n\t\t// Perform action\n\t\tvar actionErr error\n\t\tvar actionDescription string\n\n\t\tswitch req.Action {\n\t\tcase domain.BulkActionActivate:\n\t\t\tactionErr = s.userRepo.UpdateUserStatus(userID, authdomain.StatusActive)\n\t\t\tactionDescription = \"User activated\"\n\n\t\tcase domain.BulkActionDeactivate:\n\t\t\tactionErr = s.userRepo.UpdateUserStatus(userID, authdomain.StatusInactive)\n\t\t\tactionDescription = \"User deactivated\"\n\n\t\tcase domain.BulkActionSuspend:\n\t\t\tactionErr = s.userRepo.UpdateUserStatus(userID, authdomain.StatusSuspended)\n\t\t\tactionDescription = \"User suspended\"\n\n\t\tcase domain.BulkActionDelete:\n\t\t\tactionErr = s.userRepo.SoftDelete([]uint{userID})\n\t\t\tactionDescription = \"User deleted\"\n\n\t\tcase domain.BulkActionRoleChange:\n\t\t\tif req.Role != nil {\n\t\t\t\tactionErr = s.userRepo.UpdateUserRole(userID, *req.Role)\n\t\t\t\tactionDescription = fmt.Sprintf(\"Role changed to %s\", *req.Role)\n\t\t\t} else {\n\t\t\t\tactionErr = fmt.Errorf(\"role not specified\")\n\t\t\t}\n\t\t}\n\n\t\tif actionErr != nil {\n\t\t\titemResult.Error = actionErr.Error()\n\t\t\tresult.Failed++\n\t\t} else {\n\t\t\titemResult.Success = true\n\t\t\tresult.Successful++\n\n\t\t\t// Create audit log\n\t\t\ts.auditRepo.CreateAuditEntry(\n\t\t\t\t\u0026adminID,\n\t\t\t\t\u0026userID,\n\t\t\t\ts.getAuditActionForBulkAction(req.Action),\n\t\t\t\tauthdomain.AuditLevelInfo,\n\t\t\t\t\"admin\",\n\t\t\t\tfmt.Sprintf(\"Bulk operation: %s. Reason: %s\", actionDescription, req.Reason),\n\t\t\t\tipAddress,\n\t\t\t\tuserAgent,\n\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\"bulk_action\":   req.Action,\n\t\t\t\t\t\"reason\":        req.Reason,\n\t\t\t\t\t\"target_email\":  targetUser.Email,\n\t\t\t\t\t\"target_user_id\": userID,\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\n\t\tresult.Results = append(result.Results, itemResult)\n\t}\n\n\treturn result, nil\n}\n\n// GetAdminStats retrieves admin dashboard statistics\nfunc (s *AdminService) GetAdminStats(adminID uint) (*domain.AdminStatsResponse, error) {\n\t// Check admin authorization\n\tadmin, err := s.userRepo.GetByID(adminID)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tif !domain.IsAuthorizedForUserManagement(admin) {\n\t\treturn nil, domain.ErrNotAuthorized\n\t}\n\n\t// Get basic stats\n\tstats, err := s.userRepo.GetAdminStats()\n\tif err != nil {\n\t\ts.logger.Error(\"failed to get admin stats\", \"admin_id\", adminID, \"error\", err)\n\t\treturn nil, err\n\t}\n\n\t// Get user growth data\n\tgrowthData, err := s.userRepo.GetUserGrowthData(30)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to get user growth data\", \"admin_id\", adminID, \"error\", err)\n\t\t// Continue with empty growth data rather than failing\n\t\tgrowthData = []repository.UserGrowthDataPoint{}\n\t}\n\n\t// Convert growth data\n\tuserGrowth := make([]domain.UserGrowthData, len(growthData))\n\tfor i, data := range growthData {\n\t\tuserGrowth[i] = domain.UserGrowthData{\n\t\t\tDate:  data.Date,\n\t\t\tCount: data.Count,\n\t\t}\n\t}\n\n\treturn \u0026domain.AdminStatsResponse{\n\t\tTotalUsers:       int(stats.TotalUsers),\n\t\tActiveUsers:      int(stats.ActiveUsers),\n\t\tInactiveUsers:    int(stats.InactiveUsers),\n\t\tSuspendedUsers:   int(stats.SuspendedUsers),\n\t\tAdminUsers:       int(stats.AdminUsers),\n\t\tNewUsersToday:    int(stats.NewUsersToday),\n\t\tNewUsersThisWeek: int(stats.NewUsersThisWeek),\n\t\tUserGrowth:       userGrowth,\n\t}, nil\n}\n\n// GetAuditLogs retrieves audit logs with filtering\nfunc (s *AdminService) GetAuditLogs(adminID uint, req *domain.AdminAuditLogRequest) (*domain.AdminAuditLogResponse, error) {\n\t// Check admin authorization\n\tadmin, err := s.userRepo.GetByID(adminID)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tif !domain.IsAuthorizedForUserManagement(admin) {\n\t\treturn nil, domain.ErrNotAuthorized\n\t}\n\n\t// Validate date range\n\tif req.DateFrom != nil \u0026\u0026 req.DateTo != nil \u0026\u0026 req.DateFrom.After(*req.DateTo) {\n\t\treturn nil, domain.ErrInvalidDateRange\n\t}\n\n\t// Get audit logs\n\tlogs, total, err := s.auditRepo.List(req)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to get audit logs\", \"admin_id\", adminID, \"error\", err)\n\t\treturn nil, err\n\t}\n\n\t// Convert to enhanced format\n\tenhancedLogs := make([]*domain.EnhancedAuditLogEntry, len(logs))\n\tfor i, log := range logs {\n\t\tenhancedLogs[i] = domain.ToEnhancedAuditLogEntry(log)\n\t}\n\n\t// Build pagination\n\ttotalPages := (total + req.PageSize - 1) / req.PageSize\n\tpagination := userdomain.Pagination{\n\t\tPage:       req.Page,\n\t\tPageSize:   req.PageSize,\n\t\tTotal:      total,\n\t\tTotalPages: totalPages,\n\t\tHasNext:    req.Page \u003c totalPages,\n\t\tHasPrev:    req.Page \u003e 1,\n\t}\n\n\treturn \u0026domain.AdminAuditLogResponse{\n\t\tLogs:       enhancedLogs,\n\t\tPagination: pagination,\n\t}, nil\n}\n\n// Helper methods\n\n// buildUserChanges builds a human-readable string of user changes\nfunc (s *AdminService) buildUserChanges(current *authdomain.User, req *domain.AdminUpdateUserRequest) string {\n\tvar changes []string\n\n\tif req.FirstName != \"\" \u0026\u0026 current.FirstName != req.FirstName {\n\t\tchanges = append(changes, fmt.Sprintf(\"first name: '%s' -\u003e '%s'\", current.FirstName, req.FirstName))\n\t}\n\n\tif req.LastName != \"\" \u0026\u0026 current.LastName != req.LastName {\n\t\tchanges = append(changes, fmt.Sprintf(\"last name: '%s' -\u003e '%s'\", current.LastName, req.LastName))\n\t}\n\n\tif req.Email != \"\" \u0026\u0026 current.Email != req.Email {\n\t\tchanges = append(changes, fmt.Sprintf(\"email: '%s' -\u003e '%s'\", current.Email, req.Email))\n\t}\n\n\tif req.Role != \"\" \u0026\u0026 current.Role != req.Role {\n\t\tchanges = append(changes, fmt.Sprintf(\"role: '%s' -\u003e '%s'\", current.Role, req.Role))\n\t}\n\n\tif req.Status != \"\" \u0026\u0026 current.Status != req.Status {\n\t\tchanges = append(changes, fmt.Sprintf(\"status: '%s' -\u003e '%s'\", current.Status, req.Status))\n\t}\n\n\tif req.EmailVerified != nil \u0026\u0026 current.EmailVerified != *req.EmailVerified {\n\t\tchanges = append(changes, fmt.Sprintf(\"email verified: %t -\u003e %t\", current.EmailVerified, *req.EmailVerified))\n\t}\n\n\tif req.Avatar != \"\" \u0026\u0026 current.Avatar != req.Avatar {\n\t\tchanges = append(changes, \"avatar updated\")\n\t}\n\n\tif len(changes) == 0 {\n\t\treturn \"no changes\"\n\t}\n\n\treturn fmt.Sprintf(\"[%s]\", strings.Join(changes, \", \"))\n}\n\n// getAuditActionForBulkAction maps bulk actions to audit actions\nfunc (s *AdminService) getAuditActionForBulkAction(action domain.BulkActionType) authdomain.AuditAction {\n\tswitch action {\n\tcase domain.BulkActionActivate, domain.BulkActionDeactivate, domain.BulkActionSuspend:\n\t\treturn authdomain.AuditActionUserStatusChanged\n\tcase domain.BulkActionDelete:\n\t\treturn authdomain.AuditActionUserDeleted\n\tcase domain.BulkActionRoleChange:\n\t\treturn authdomain.AuditActionUserRoleChanged\n\tdefault:\n\t\treturn authdomain.AuditActionUserUpdated\n\t}\n}",
      "size": 21231,
      "hash": "d2e01209840266d8f27792949b15fcfc385c5f134aeadf48c786d815cab3d705",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/admin/transport/http.go",
      "template": true,
      "content": "package transport\n\nimport (\n\t\"net/http\"\n\t\"strconv\"\n\t\"strings\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"log/slog\"\n\n\tauthdomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/admin/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/admin/service\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\tuserdomain \"github.com/acheevo/fullstack-template/internal/user/domain\"\n)\n\n// AdminHandler handles HTTP requests for admin user management\ntype AdminHandler struct {\n\tconfig       *config.Config\n\tlogger       *slog.Logger\n\tadminService *service.AdminService\n}\n\n// NewAdminHandler creates a new admin handler\nfunc NewAdminHandler(config *config.Config, logger *slog.Logger, adminService *service.AdminService) *AdminHandler {\n\treturn \u0026AdminHandler{\n\t\tconfig:       config,\n\t\tlogger:       logger,\n\t\tadminService: adminService,\n\t}\n}\n\n// ListUsers handles GET /api/admin/users\nfunc (h *AdminHandler) ListUsers(c *gin.Context) {\n\tadminID := h.getUserID(c)\n\tif adminID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tvar req userdomain.UserListRequest\n\tif err := c.ShouldBindQuery(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tresponse, err := h.adminService.ListUsers(adminID, \u0026req)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, response)\n}\n\n// GetUserDetails handles GET /api/admin/users/:id\nfunc (h *AdminHandler) GetUserDetails(c *gin.Context) {\n\tadminID := h.getUserID(c)\n\tif adminID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\ttargetUserID, err := h.getTargetUserID(c)\n\tif err != nil {\n\t\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{Error: \"invalid user ID\"})\n\t\treturn\n\t}\n\n\tresponse, err := h.adminService.GetUserDetails(adminID, targetUserID)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, response)\n}\n\n// UpdateUserRole handles PUT /api/admin/users/:id/role\nfunc (h *AdminHandler) UpdateUserRole(c *gin.Context) {\n\tadminID := h.getUserID(c)\n\tif adminID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\ttargetUserID, err := h.getTargetUserID(c)\n\tif err != nil {\n\t\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{Error: \"invalid user ID\"})\n\t\treturn\n\t}\n\n\tvar req domain.UpdateUserRoleRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tipAddress := c.ClientIP()\n\tuserAgent := c.GetHeader(\"User-Agent\")\n\n\terr = h.adminService.UpdateUserRole(adminID, targetUserID, \u0026req, ipAddress, userAgent)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, authdomain.MessageResponse{Message: \"user role updated successfully\"})\n}\n\n// UpdateUserStatus handles PUT /api/admin/users/:id/status\nfunc (h *AdminHandler) UpdateUserStatus(c *gin.Context) {\n\tadminID := h.getUserID(c)\n\tif adminID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\ttargetUserID, err := h.getTargetUserID(c)\n\tif err != nil {\n\t\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{Error: \"invalid user ID\"})\n\t\treturn\n\t}\n\n\tvar req domain.UpdateUserStatusRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tipAddress := c.ClientIP()\n\tuserAgent := c.GetHeader(\"User-Agent\")\n\n\terr = h.adminService.UpdateUserStatus(adminID, targetUserID, \u0026req, ipAddress, userAgent)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, authdomain.MessageResponse{Message: \"user status updated successfully\"})\n}\n\n// UpdateUser handles PUT /api/admin/users/:id\nfunc (h *AdminHandler) UpdateUser(c *gin.Context) {\n\tadminID := h.getUserID(c)\n\tif adminID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\ttargetUserID, err := h.getTargetUserID(c)\n\tif err != nil {\n\t\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{Error: \"invalid user ID\"})\n\t\treturn\n\t}\n\n\tvar req domain.AdminUpdateUserRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tipAddress := c.ClientIP()\n\tuserAgent := c.GetHeader(\"User-Agent\")\n\n\terr = h.adminService.UpdateUser(adminID, targetUserID, \u0026req, ipAddress, userAgent)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, authdomain.MessageResponse{Message: \"user updated successfully\"})\n}\n\n// DeleteUsers handles DELETE /api/admin/users\nfunc (h *AdminHandler) DeleteUsers(c *gin.Context) {\n\tadminID := h.getUserID(c)\n\tif adminID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tvar deleteReq domain.DeleteUserRequest\n\tif err := c.ShouldBindJSON(\u0026deleteReq); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\t// Get user IDs from query parameter\n\tuserIDsStr := c.Query(\"ids\")\n\tif userIDsStr == \"\" {\n\t\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{Error: \"user IDs required\"})\n\t\treturn\n\t}\n\n\tuserIDs, err := h.parseUserIDs(userIDsStr)\n\tif err != nil {\n\t\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{Error: \"invalid user IDs\"})\n\t\treturn\n\t}\n\n\tipAddress := c.ClientIP()\n\tuserAgent := c.GetHeader(\"User-Agent\")\n\n\terr = h.adminService.DeleteUsers(adminID, \u0026deleteReq, userIDs, ipAddress, userAgent)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, authdomain.MessageResponse{Message: \"users deleted successfully\"})\n}\n\n// BulkUpdateUsers handles POST /api/admin/users/bulk\nfunc (h *AdminHandler) BulkUpdateUsers(c *gin.Context) {\n\tadminID := h.getUserID(c)\n\tif adminID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tvar req domain.BulkUserActionRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tipAddress := c.ClientIP()\n\tuserAgent := c.GetHeader(\"User-Agent\")\n\n\tresult, err := h.adminService.BulkUpdateUsers(adminID, \u0026req, ipAddress, userAgent)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, result)\n}\n\n// GetStats handles GET /api/admin/stats\nfunc (h *AdminHandler) GetStats(c *gin.Context) {\n\tadminID := h.getUserID(c)\n\tif adminID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tstats, err := h.adminService.GetAdminStats(adminID)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, stats)\n}\n\n// GetAuditLogs handles GET /api/admin/audit-logs\nfunc (h *AdminHandler) GetAuditLogs(c *gin.Context) {\n\tadminID := h.getUserID(c)\n\tif adminID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tvar req domain.AdminAuditLogRequest\n\tif err := c.ShouldBindQuery(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tresponse, err := h.adminService.GetAuditLogs(adminID, \u0026req)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, response)\n}\n\n// RegisterRoutes registers all admin routes\nfunc (h *AdminHandler) RegisterRoutes(router *gin.RouterGroup) {\n\tadmin := router.Group(\"/admin\")\n\t{\n\t\t// User management\n\t\tadmin.GET(\"/users\", h.ListUsers)\n\t\tadmin.GET(\"/users/:id\", h.GetUserDetails)\n\t\tadmin.PUT(\"/users/:id\", h.UpdateUser)\n\t\tadmin.PUT(\"/users/:id/role\", h.UpdateUserRole)\n\t\tadmin.PUT(\"/users/:id/status\", h.UpdateUserStatus)\n\t\tadmin.DELETE(\"/users\", h.DeleteUsers)\n\t\tadmin.POST(\"/users/bulk\", h.BulkUpdateUsers)\n\n\t\t// Admin dashboard\n\t\tadmin.GET(\"/stats\", h.GetStats)\n\t\tadmin.GET(\"/audit-logs\", h.GetAuditLogs)\n\t}\n}\n\n// Helper methods\n\n// getUserID extracts user ID from Gin context\nfunc (h *AdminHandler) getUserID(c *gin.Context) uint {\n\tif userID, exists := c.Get(\"user_id\"); exists {\n\t\tif id, ok := userID.(uint); ok {\n\t\t\treturn id\n\t\t}\n\t}\n\treturn 0\n}\n\n// getTargetUserID extracts target user ID from URL parameter\nfunc (h *AdminHandler) getTargetUserID(c *gin.Context) (uint, error) {\n\tidStr := c.Param(\"id\")\n\tid, err := strconv.ParseUint(idStr, 10, 32)\n\tif err != nil {\n\t\treturn 0, err\n\t}\n\treturn uint(id), nil\n}\n\n// parseUserIDs parses comma-separated user IDs\nfunc (h *AdminHandler) parseUserIDs(idsStr string) ([]uint, error) {\n\tidStrs := strings.Split(idsStr, \",\")\n\tuserIDs := make([]uint, 0, len(idStrs))\n\n\tfor _, idStr := range idStrs {\n\t\tidStr = strings.TrimSpace(idStr)\n\t\tif idStr == \"\" {\n\t\t\tcontinue\n\t\t}\n\n\t\tid, err := strconv.ParseUint(idStr, 10, 32)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tuserIDs = append(userIDs, uint(id))\n\t}\n\n\treturn userIDs, nil\n}\n\n// handleError handles service errors and returns appropriate HTTP responses\nfunc (h *AdminHandler) handleError(c *gin.Context, err error) {\n\tswitch err {\n\tcase domain.ErrNotAuthorized:\n\t\tc.JSON(http.StatusForbidden, authdomain.ErrorResponse{Error: \"not authorized for admin operations\"})\n\tcase domain.ErrCannotManageSelf:\n\t\tc.JSON(http.StatusForbidden, authdomain.ErrorResponse{Error: \"cannot manage own account through admin interface\"})\n\tcase domain.ErrBulkActionFailed:\n\t\tc.JSON(http.StatusInternalServerError, authdomain.ErrorResponse{Error: \"bulk action failed\"})\n\tcase domain.ErrAuditLogNotFound:\n\t\tc.JSON(http.StatusNotFound, authdomain.ErrorResponse{Error: \"audit log not found\"})\n\tcase domain.ErrInvalidDateRange:\n\t\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{Error: \"invalid date range\"})\n\tcase domain.ErrTooManyUsers:\n\t\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{Error: \"too many users selected for bulk action\"})\n\tcase userdomain.ErrUserNotFound:\n\t\tc.JSON(http.StatusNotFound, authdomain.ErrorResponse{Error: \"user not found\"})\n\tcase userdomain.ErrEmailAlreadyExists:\n\t\tc.JSON(http.StatusConflict, authdomain.ErrorResponse{Error: \"email already exists\"})\n\tdefault:\n\t\th.logger.Error(\"unhandled admin service error\", \"error\", err)\n\t\tc.JSON(http.StatusInternalServerError, authdomain.ErrorResponse{Error: \"internal server error\"})\n\t}\n}\n\n// handleValidationError handles validation errors from request binding\nfunc (h *AdminHandler) handleValidationError(c *gin.Context, err error) {\n\th.logger.Error(\"validation error\", \"error\", err)\n\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{\n\t\tError:   \"validation failed\",\n\t\tDetails: extractValidationErrors(err),\n\t})\n}\n\n// extractValidationErrors extracts field-specific validation errors\nfunc extractValidationErrors(err error) map[string]string {\n\t// This is a simplified version - you might want to use a more sophisticated\n\t// validation error extraction based on your validation library\n\treturn map[string]string{\n\t\t\"general\": err.Error(),\n\t}\n}",
      "size": 10656,
      "hash": "e48cec3ed20d882ca8dbb0440a4c53e21f242605345344f0e8f18e03728c168c",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/domain/errors.go",
      "template": true,
      "content": "package domain\n\nimport \"errors\"\n\n// Authentication errors\nvar (\n\tErrInvalidCredentials     = errors.New(\"invalid email or password\")\n\tErrUserNotFound          = errors.New(\"user not found\")\n\tErrUserAlreadyExists     = errors.New(\"user already exists\")\n\tErrEmailNotVerified      = errors.New(\"email not verified\")\n\tErrUserInactive          = errors.New(\"user account is inactive\")\n\tErrInvalidToken          = errors.New(\"invalid token\")\n\tErrTokenExpired          = errors.New(\"token expired\")\n\tErrTokenNotFound         = errors.New(\"token not found\")\n\tErrTokenAlreadyUsed      = errors.New(\"token already used\")\n\tErrPasswordsDoNotMatch   = errors.New(\"passwords do not match\")\n\tErrWeakPassword          = errors.New(\"password is too weak\")\n\tErrInvalidEmail          = errors.New(\"invalid email address\")\n\tErrEmailVerificationFailed = errors.New(\"email verification failed\")\n\tErrPasswordResetFailed    = errors.New(\"password reset failed\")\n\tErrUnauthorized          = errors.New(\"unauthorized\")\n\tErrForbidden             = errors.New(\"forbidden\")\n)\n\n// IsValidationError checks if the error is a validation error\nfunc IsValidationError(err error) bool {\n\treturn err == ErrInvalidCredentials ||\n\t\terr == ErrUserAlreadyExists ||\n\t\terr == ErrPasswordsDoNotMatch ||\n\t\terr == ErrWeakPassword ||\n\t\terr == ErrInvalidEmail\n}\n\n// IsAuthError checks if the error is an authentication error\nfunc IsAuthError(err error) bool {\n\treturn err == ErrInvalidCredentials ||\n\t\terr == ErrEmailNotVerified ||\n\t\terr == ErrUserInactive ||\n\t\terr == ErrUnauthorized ||\n\t\terr == ErrForbidden\n}\n\n// IsTokenError checks if the error is a token-related error\nfunc IsTokenError(err error) bool {\n\treturn err == ErrInvalidToken ||\n\t\terr == ErrTokenExpired ||\n\t\terr == ErrTokenNotFound ||\n\t\terr == ErrTokenAlreadyUsed\n}",
      "size": 1784,
      "hash": "69ec66bfc970ead528f743239a3c832b8432a920cf4d52e7e2d1c712fab8ba26",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/domain/rbac.go",
      "template": true,
      "content": "package domain\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\n// Permission represents a specific permission in the system\ntype Permission string\n\n// Resource represents a system resource that can be accessed\ntype Resource string\n\n// Action represents an action that can be performed on a resource\ntype Action string\n\n// Define system resources\nconst (\n\tResourceUser     Resource = \"user\"\n\tResourceAdmin    Resource = \"admin\"\n\tResourceProfile  Resource = \"profile\"\n\tResourceAuth     Resource = \"auth\"\n\tResourceAudit    Resource = \"audit\"\n\tResourceSystem   Resource = \"system\"\n)\n\n// Define actions\nconst (\n\tActionRead   Action = \"read\"\n\tActionWrite  Action = \"write\"\n\tActionCreate Action = \"create\"\n\tActionUpdate Action = \"update\"\n\tActionDelete Action = \"delete\"\n\tActionManage Action = \"manage\"\n)\n\n// System permissions\nconst (\n\t// User permissions\n\tPermissionUserRead   Permission = \"user:read\"\n\tPermissionUserWrite  Permission = \"user:write\"\n\tPermissionUserCreate Permission = \"user:create\"\n\tPermissionUserUpdate Permission = \"user:update\"\n\tPermissionUserDelete Permission = \"user:delete\"\n\tPermissionUserManage Permission = \"user:manage\"\n\n\t// Profile permissions (own profile)\n\tPermissionProfileRead   Permission = \"profile:read\"\n\tPermissionProfileUpdate Permission = \"profile:update\"\n\n\t// Admin permissions\n\tPermissionAdminRead   Permission = \"admin:read\"\n\tPermissionAdminWrite  Permission = \"admin:write\"\n\tPermissionAdminManage Permission = \"admin:manage\"\n\n\t// Auth permissions\n\tPermissionAuthRead   Permission = \"auth:read\"\n\tPermissionAuthWrite  Permission = \"auth:write\"\n\tPermissionAuthManage Permission = \"auth:manage\"\n\n\t// Audit permissions\n\tPermissionAuditRead   Permission = \"audit:read\"\n\tPermissionAuditWrite  Permission = \"audit:write\"\n\tPermissionAuditManage Permission = \"audit:manage\"\n\n\t// System permissions\n\tPermissionSystemRead   Permission = \"system:read\"\n\tPermissionSystemWrite  Permission = \"system:write\"\n\tPermissionSystemManage Permission = \"system:manage\"\n)\n\n// RolePermissions defines permissions for each role\nvar RolePermissions = map[UserRole][]Permission{\n\tRoleUser: {\n\t\t// Users can read and update their own profile\n\t\tPermissionProfileRead,\n\t\tPermissionProfileUpdate,\n\t\t// Users can manage their own auth (password change, etc.)\n\t\tPermissionAuthRead,\n\t\tPermissionAuthWrite,\n\t},\n\tRoleAdmin: {\n\t\t// Admins have all user permissions\n\t\tPermissionProfileRead,\n\t\tPermissionProfileUpdate,\n\t\tPermissionAuthRead,\n\t\tPermissionAuthWrite,\n\t\t// Plus admin-specific permissions\n\t\tPermissionUserRead,\n\t\tPermissionUserWrite,\n\t\tPermissionUserCreate,\n\t\tPermissionUserUpdate,\n\t\tPermissionUserDelete,\n\t\tPermissionUserManage,\n\t\tPermissionAdminRead,\n\t\tPermissionAdminWrite,\n\t\tPermissionAdminManage,\n\t\tPermissionAuditRead,\n\t\tPermissionAuditWrite,\n\t\tPermissionSystemRead,\n\t},\n}\n\n// PermissionCheck represents a permission check request\ntype PermissionCheck struct {\n\tUserID     uint       `json:\"user_id\"`\n\tUserRole   UserRole   `json:\"user_role\"`\n\tResource   Resource   `json:\"resource\"`\n\tAction     Action     `json:\"action\"`\n\tPermission Permission `json:\"permission\"`\n\tContext    map[string]interface{} `json:\"context,omitempty\"`\n}\n\n// RBAC authorization functions\n\n// HasPermission checks if a role has a specific permission\nfunc HasPermission(role UserRole, permission Permission) bool {\n\tpermissions, exists := RolePermissions[role]\n\tif !exists {\n\t\treturn false\n\t}\n\n\tfor _, p := range permissions {\n\t\tif p == permission {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// HasAnyPermission checks if a role has any of the specified permissions\nfunc HasAnyPermission(role UserRole, permissions []Permission) bool {\n\tfor _, permission := range permissions {\n\t\tif HasPermission(role, permission) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// HasAllPermissions checks if a role has all of the specified permissions\nfunc HasAllPermissions(role UserRole, permissions []Permission) bool {\n\tfor _, permission := range permissions {\n\t\tif !HasPermission(role, permission) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\n// CanAccessResource checks if a role can perform an action on a resource\nfunc CanAccessResource(role UserRole, resource Resource, action Action) bool {\n\tpermission := Permission(fmt.Sprintf(\"%s:%s\", resource, action))\n\treturn HasPermission(role, permission)\n}\n\n// CanManageUser checks if a user can manage another user based on roles\nfunc CanManageUser(adminRole UserRole, adminID uint, targetRole UserRole, targetID uint) bool {\n\t// Check basic admin permissions\n\tif !HasPermission(adminRole, PermissionUserManage) {\n\t\treturn false\n\t}\n\n\t// Users cannot manage themselves through admin interface\n\tif adminID == targetID {\n\t\treturn false\n\t}\n\n\t// For now, any admin can manage any user\n\t// Future enhancement: role hierarchy (super admin \u003e admin \u003e user)\n\treturn true\n}\n\n// GetRolePermissions returns all permissions for a role\nfunc GetRolePermissions(role UserRole) []Permission {\n\tpermissions, exists := RolePermissions[role]\n\tif !exists {\n\t\treturn []Permission{}\n\t}\n\treturn permissions\n}\n\n// IsValidRole checks if a role is valid\nfunc IsValidRole(role UserRole) bool {\n\t_, exists := RolePermissions[role]\n\treturn exists\n}\n\n// GetHigherRoles returns roles that are higher than the given role\nfunc GetHigherRoles(role UserRole) []UserRole {\n\tswitch role {\n\tcase RoleUser:\n\t\treturn []UserRole{RoleAdmin}\n\tcase RoleAdmin:\n\t\treturn []UserRole{} // No higher role currently\n\tdefault:\n\t\treturn []UserRole{}\n\t}\n}\n\n// GetLowerRoles returns roles that are lower than the given role\nfunc GetLowerRoles(role UserRole) []UserRole {\n\tswitch role {\n\tcase RoleAdmin:\n\t\treturn []UserRole{RoleUser}\n\tcase RoleUser:\n\t\treturn []UserRole{} // No lower role currently\n\tdefault:\n\t\treturn []UserRole{}\n\t}\n}\n\n// IsRoleHigherThan checks if role1 is higher than role2\nfunc IsRoleHigherThan(role1, role2 UserRole) bool {\n\thigherRoles := GetHigherRoles(role2)\n\tfor _, r := range higherRoles {\n\t\tif r == role1 {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// Permission validation helpers\n\n// ValidatePermissionString validates a permission string format\nfunc ValidatePermissionString(permission string) error {\n\tparts := strings.Split(string(permission), \":\")\n\tif len(parts) != 2 {\n\t\treturn fmt.Errorf(\"invalid permission format: %s (expected resource:action)\", permission)\n\t}\n\treturn nil\n}\n\n// ParsePermission parses a permission string into resource and action\nfunc ParsePermission(permission Permission) (Resource, Action, error) {\n\tparts := strings.Split(string(permission), \":\")\n\tif len(parts) != 2 {\n\t\treturn \"\", \"\", fmt.Errorf(\"invalid permission format: %s\", permission)\n\t}\n\treturn Resource(parts[0]), Action(parts[1]), nil\n}\n\n// BuildPermission builds a permission from resource and action\nfunc BuildPermission(resource Resource, action Action) Permission {\n\treturn Permission(fmt.Sprintf(\"%s:%s\", resource, action))\n}\n\n// Context-aware permission checking\n\n// PermissionContext represents additional context for permission checks\ntype PermissionContext struct {\n\tUserID   uint                   `json:\"user_id\"`\n\tTargetID uint                   `json:\"target_id,omitempty\"`\n\tData     map[string]interface{} `json:\"data,omitempty\"`\n}\n\n// HasPermissionWithContext checks permission with additional context\nfunc HasPermissionWithContext(role UserRole, permission Permission, ctx *PermissionContext) bool {\n\t// First check basic permission\n\tif !HasPermission(role, permission) {\n\t\treturn false\n\t}\n\n\t// Add context-aware logic here\n\t// For example: users can only update their own profile\n\tif permission == PermissionProfileUpdate {\n\t\treturn ctx != nil \u0026\u0026 ctx.UserID == ctx.TargetID\n\t}\n\n\treturn true\n}\n\n// Audit helpers for RBAC\n\n// RBACEvent represents an RBAC-related event for auditing\ntype RBACEvent struct {\n\tType       string                 `json:\"type\"`\n\tUserID     uint                   `json:\"user_id\"`\n\tUserRole   UserRole               `json:\"user_role\"`\n\tResource   Resource               `json:\"resource\"`\n\tAction     Action                 `json:\"action\"`\n\tPermission Permission             `json:\"permission\"`\n\tAllowed    bool                   `json:\"allowed\"`\n\tContext    map[string]interface{} `json:\"context,omitempty\"`\n\tReason     string                 `json:\"reason,omitempty\"`\n}\n\n// CreateRBACEvent creates an RBAC event for auditing\nfunc CreateRBACEvent(userID uint, userRole UserRole, resource Resource, action Action, allowed bool, reason string) *RBACEvent {\n\treturn \u0026RBACEvent{\n\t\tType:       \"rbac_check\",\n\t\tUserID:     userID,\n\t\tUserRole:   userRole,\n\t\tResource:   resource,\n\t\tAction:     action,\n\t\tPermission: BuildPermission(resource, action),\n\t\tAllowed:    allowed,\n\t\tReason:     reason,\n\t}\n}",
      "size": 8585,
      "hash": "4e570ee4a9efc44f9da65fc2a194f2eced0a23a07ab0eed3d9b8217009b1a84d",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/domain/rbac_security.go",
      "template": true,
      "content": "package domain\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n)\n\n// Security validation and escalation prevention for RBAC\n\n// RoleChangeSecurityCheck performs security validation for role changes\ntype RoleChangeSecurityCheck struct {\n\tAdminID       uint     `json:\"admin_id\"`\n\tAdminRole     UserRole `json:\"admin_role\"`\n\tTargetID      uint     `json:\"target_id\"`\n\tTargetRole    UserRole `json:\"target_role\"`\n\tNewRole       UserRole `json:\"new_role\"`\n\tReason        string   `json:\"reason\"`\n\tIPAddress     string   `json:\"ip_address\"`\n\tUserAgent     string   `json:\"user_agent\"`\n\tSessionID     string   `json:\"session_id,omitempty\"`\n\tRequestSource string   `json:\"request_source\"` // \"web\", \"api\", \"cli\", etc.\n}\n\n// SecurityValidationResult represents the result of security validation\ntype SecurityValidationResult struct {\n\tValid     bool     `json:\"valid\"`\n\tErrors    []string `json:\"errors,omitempty\"`\n\tWarnings  []string `json:\"warnings,omitempty\"`\n\tRiskLevel string   `json:\"risk_level\"` // \"low\", \"medium\", \"high\", \"critical\"\n\tRequiresSecondaryAuth bool `json:\"requires_secondary_auth\"`\n\tAuditFlags []string `json:\"audit_flags,omitempty\"`\n}\n\n// ValidateRoleChange performs comprehensive security validation for role changes\nfunc ValidateRoleChange(check *RoleChangeSecurityCheck) *SecurityValidationResult {\n\tresult := \u0026SecurityValidationResult{\n\t\tValid:     true,\n\t\tErrors:    []string{},\n\t\tWarnings:  []string{},\n\t\tRiskLevel: \"low\",\n\t\tAuditFlags: []string{},\n\t}\n\n\t// 1. Prevent self-role escalation\n\tif check.AdminID == check.TargetID {\n\t\tresult.Valid = false\n\t\tresult.Errors = append(result.Errors, \"administrators cannot modify their own role\")\n\t\tresult.RiskLevel = \"critical\"\n\t\tresult.AuditFlags = append(result.AuditFlags, \"self_role_modification_attempt\")\n\t}\n\n\t// 2. Validate admin has permission to change roles\n\tif !HasPermission(check.AdminRole, PermissionUserManage) {\n\t\tresult.Valid = false\n\t\tresult.Errors = append(result.Errors, \"insufficient permissions to modify user roles\")\n\t\tresult.RiskLevel = \"high\"\n\t\tresult.AuditFlags = append(result.AuditFlags, \"unauthorized_role_change_attempt\")\n\t}\n\n\t// 3. Validate role transition is allowed\n\tif !isValidRoleTransition(check.TargetRole, check.NewRole) {\n\t\tresult.Valid = false\n\t\tresult.Errors = append(result.Errors, fmt.Sprintf(\"invalid role transition from %s to %s\", check.TargetRole, check.NewRole))\n\t\tresult.RiskLevel = \"high\"\n\t\tresult.AuditFlags = append(result.AuditFlags, \"invalid_role_transition\")\n\t}\n\n\t// 4. Check for privilege escalation patterns\n\tif isPrivilegeEscalation(check.TargetRole, check.NewRole) {\n\t\tresult.RiskLevel = \"high\"\n\t\tresult.RequiresSecondaryAuth = true\n\t\tresult.Warnings = append(result.Warnings, \"role change involves privilege escalation\")\n\t\tresult.AuditFlags = append(result.AuditFlags, \"privilege_escalation\")\n\t}\n\n\t// 5. Validate reason is provided and meaningful\n\tif strings.TrimSpace(check.Reason) == \"\" {\n\t\tresult.Valid = false\n\t\tresult.Errors = append(result.Errors, \"reason for role change is required\")\n\t} else if len(strings.TrimSpace(check.Reason)) \u003c 10 {\n\t\tresult.Warnings = append(result.Warnings, \"reason for role change is very brief\")\n\t\tresult.AuditFlags = append(result.AuditFlags, \"brief_reason\")\n\t}\n\n\t// 6. Check for suspicious patterns in reason\n\tsuspiciousPatterns := []string{\"test\", \"temp\", \"temporary\", \"quick\", \"urgent\"}\n\treasonLower := strings.ToLower(check.Reason)\n\tfor _, pattern := range suspiciousPatterns {\n\t\tif strings.Contains(reasonLower, pattern) {\n\t\t\tresult.Warnings = append(result.Warnings, fmt.Sprintf(\"reason contains potentially suspicious term: %s\", pattern))\n\t\t\tresult.AuditFlags = append(result.AuditFlags, \"suspicious_reason\")\n\t\t\tif result.RiskLevel == \"low\" {\n\t\t\t\tresult.RiskLevel = \"medium\"\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\n\t// 7. Validate IP address and user agent\n\tif check.IPAddress == \"\" {\n\t\tresult.Warnings = append(result.Warnings, \"IP address not recorded\")\n\t\tresult.AuditFlags = append(result.AuditFlags, \"missing_ip\")\n\t}\n\n\tif check.UserAgent == \"\" {\n\t\tresult.Warnings = append(result.Warnings, \"user agent not recorded\")\n\t\tresult.AuditFlags = append(result.AuditFlags, \"missing_user_agent\")\n\t}\n\n\t// 8. Additional security checks for admin role assignments\n\tif check.NewRole == RoleAdmin {\n\t\tresult.RiskLevel = \"high\"\n\t\tresult.RequiresSecondaryAuth = true\n\t\tresult.AuditFlags = append(result.AuditFlags, \"admin_role_assignment\")\n\t\t\n\t\t// Extra validation for admin assignments\n\t\tif !strings.Contains(strings.ToLower(check.Reason), \"admin\") \u0026\u0026 \n\t\t   !strings.Contains(strings.ToLower(check.Reason), \"administrator\") {\n\t\t\tresult.Warnings = append(result.Warnings, \"admin role assignment without explicit admin-related reason\")\n\t\t}\n\t}\n\n\treturn result\n}\n\n// isValidRoleTransition checks if a role transition is allowed\nfunc isValidRoleTransition(from, to UserRole) bool {\n\t// Define allowed transitions\n\tallowedTransitions := map[UserRole][]UserRole{\n\t\tRoleUser:  {RoleAdmin},\n\t\tRoleAdmin: {RoleUser},\n\t}\n\n\tvalidTransitions, exists := allowedTransitions[from]\n\tif !exists {\n\t\treturn false\n\t}\n\n\tfor _, validTo := range validTransitions {\n\t\tif to == validTo {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n}\n\n// isPrivilegeEscalation checks if the role change is a privilege escalation\nfunc isPrivilegeEscalation(from, to UserRole) bool {\n\t// Define role hierarchy (higher number = more privileges)\n\troleHierarchy := map[UserRole]int{\n\t\tRoleUser:  1,\n\t\tRoleAdmin: 2,\n\t}\n\n\tfromLevel, fromExists := roleHierarchy[from]\n\ttoLevel, toExists := roleHierarchy[to]\n\n\tif !fromExists || !toExists {\n\t\treturn true // Unknown role is considered escalation\n\t}\n\n\treturn toLevel \u003e fromLevel\n}\n\n// RoleChangeAuditEntry represents a comprehensive audit entry for role changes\ntype RoleChangeAuditEntry struct {\n\tID                    uint                      `json:\"id\"`\n\tAdminID               uint                      `json:\"admin_id\"`\n\tAdminEmail            string                    `json:\"admin_email\"`\n\tAdminRole             UserRole                  `json:\"admin_role\"`\n\tTargetID              uint                      `json:\"target_id\"`\n\tTargetEmail           string                    `json:\"target_email\"`\n\tPreviousRole          UserRole                  `json:\"previous_role\"`\n\tNewRole               UserRole                  `json:\"new_role\"`\n\tReason                string                    `json:\"reason\"`\n\tValidationResult      *SecurityValidationResult `json:\"validation_result\"`\n\tIPAddress             string                    `json:\"ip_address\"`\n\tUserAgent             string                    `json:\"user_agent\"`\n\tRequestSource         string                    `json:\"request_source\"`\n\tSessionID             string                    `json:\"session_id,omitempty\"`\n\tSecondaryAuthRequired bool                      `json:\"secondary_auth_required\"`\n\tSecondaryAuthPassed   bool                      `json:\"secondary_auth_passed,omitempty\"`\n\tStatus                string                    `json:\"status\"` // \"pending\", \"approved\", \"rejected\", \"completed\"\n\tCreatedAt             time.Time                 `json:\"created_at\"`\n\tCompletedAt           *time.Time                `json:\"completed_at,omitempty\"`\n\tNotes                 string                    `json:\"notes,omitempty\"`\n}\n\n// CreateRoleChangeAuditEntry creates a comprehensive audit entry\nfunc CreateRoleChangeAuditEntry(\n\tadminUser *User,\n\ttargetUser *User,\n\tnewRole UserRole,\n\treason string,\n\tipAddress, userAgent, requestSource string,\n\tvalidationResult *SecurityValidationResult,\n) *RoleChangeAuditEntry {\n\treturn \u0026RoleChangeAuditEntry{\n\t\tAdminID:               adminUser.ID,\n\t\tAdminEmail:            adminUser.Email,\n\t\tAdminRole:             adminUser.Role,\n\t\tTargetID:              targetUser.ID,\n\t\tTargetEmail:           targetUser.Email,\n\t\tPreviousRole:          targetUser.Role,\n\t\tNewRole:               newRole,\n\t\tReason:                reason,\n\t\tValidationResult:      validationResult,\n\t\tIPAddress:             ipAddress,\n\t\tUserAgent:             userAgent,\n\t\tRequestSource:         requestSource,\n\t\tSecondaryAuthRequired: validationResult.RequiresSecondaryAuth,\n\t\tStatus:                determineInitialStatus(validationResult),\n\t\tCreatedAt:             time.Now(),\n\t}\n}\n\n// determineInitialStatus determines the initial status based on validation\nfunc determineInitialStatus(result *SecurityValidationResult) string {\n\tif !result.Valid {\n\t\treturn \"rejected\"\n\t}\n\tif result.RequiresSecondaryAuth {\n\t\treturn \"pending\"\n\t}\n\treturn \"approved\"\n}\n\n// Role change monitoring and alerting\n\n// RoleChangeMonitor handles monitoring and alerting for role changes\ntype RoleChangeMonitor struct {\n\tAlertThresholds AlertThresholds `json:\"alert_thresholds\"`\n}\n\n// AlertThresholds defines thresholds for triggering alerts\ntype AlertThresholds struct {\n\tAdminRoleAssignmentsPerHour int           `json:\"admin_role_assignments_per_hour\"`\n\tRoleChangesPerAdmin         int           `json:\"role_changes_per_admin\"`\n\tTimeWindow                  time.Duration `json:\"time_window\"`\n\tHighRiskActionsPerDay       int           `json:\"high_risk_actions_per_day\"`\n}\n\n// DefaultAlertThresholds returns default alert thresholds\nfunc DefaultAlertThresholds() AlertThresholds {\n\treturn AlertThresholds{\n\t\tAdminRoleAssignmentsPerHour: 5,\n\t\tRoleChangesPerAdmin:         10,\n\t\tTimeWindow:                  24 * time.Hour,\n\t\tHighRiskActionsPerDay:       3,\n\t}\n}\n\n// SecurityAlert represents a security alert\ntype SecurityAlert struct {\n\tID          string                 `json:\"id\"`\n\tType        string                 `json:\"type\"`\n\tSeverity    string                 `json:\"severity\"` // \"low\", \"medium\", \"high\", \"critical\"\n\tTitle       string                 `json:\"title\"`\n\tDescription string                 `json:\"description\"`\n\tAdminID     uint                   `json:\"admin_id\"`\n\tAdminEmail  string                 `json:\"admin_email\"`\n\tData        map[string]interface{} `json:\"data\"`\n\tCreatedAt   time.Time              `json:\"created_at\"`\n\tResolved    bool                   `json:\"resolved\"`\n\tResolvedAt  *time.Time             `json:\"resolved_at,omitempty\"`\n\tNotes       string                 `json:\"notes,omitempty\"`\n}\n\n// GenerateSecurityAlert creates a security alert for suspicious activity\nfunc GenerateSecurityAlert(alertType, severity, title, description string, adminUser *User, data map[string]interface{}) *SecurityAlert {\n\treturn \u0026SecurityAlert{\n\t\tID:          fmt.Sprintf(\"%d_%s_%d\", adminUser.ID, alertType, time.Now().Unix()),\n\t\tType:        alertType,\n\t\tSeverity:    severity,\n\t\tTitle:       title,\n\t\tDescription: description,\n\t\tAdminID:     adminUser.ID,\n\t\tAdminEmail:  adminUser.Email,\n\t\tData:        data,\n\t\tCreatedAt:   time.Now(),\n\t\tResolved:    false,\n\t}\n}\n\n// Security compliance helpers\n\n// ComplianceRequirement represents a compliance requirement for role changes\ntype ComplianceRequirement struct {\n\tName        string `json:\"name\"`\n\tDescription string `json:\"description\"`\n\tRequired    bool   `json:\"required\"`\n\tMet         bool   `json:\"met\"`\n\tDetails     string `json:\"details,omitempty\"`\n}\n\n// CheckComplianceRequirements checks compliance requirements for role changes\nfunc CheckComplianceRequirements(entry *RoleChangeAuditEntry) []ComplianceRequirement {\n\trequirements := []ComplianceRequirement{\n\t\t{\n\t\t\tName:        \"Audit Trail\",\n\t\t\tDescription: \"Complete audit trail of role change\",\n\t\t\tRequired:    true,\n\t\t\tMet:         true, // Always met if entry exists\n\t\t},\n\t\t{\n\t\t\tName:        \"Justification\",\n\t\t\tDescription: \"Valid business justification provided\",\n\t\t\tRequired:    true,\n\t\t\tMet:         len(strings.TrimSpace(entry.Reason)) \u003e= 10,\n\t\t\tDetails:     \"Reason must be at least 10 characters\",\n\t\t},\n\t\t{\n\t\t\tName:        \"Administrator Authentication\",\n\t\t\tDescription: \"Administrator properly authenticated\",\n\t\t\tRequired:    true,\n\t\t\tMet:         entry.AdminID \u003e 0,\n\t\t},\n\t\t{\n\t\t\tName:        \"IP Address Logging\",\n\t\t\tDescription: \"Source IP address recorded\",\n\t\t\tRequired:    true,\n\t\t\tMet:         entry.IPAddress != \"\",\n\t\t},\n\t\t{\n\t\t\tName:        \"Secondary Authentication\",\n\t\t\tDescription: \"Secondary authentication for high-risk changes\",\n\t\t\tRequired:    entry.SecondaryAuthRequired,\n\t\t\tMet:         !entry.SecondaryAuthRequired || entry.SecondaryAuthPassed,\n\t\t\tDetails:     \"Required for privilege escalation\",\n\t\t},\n\t}\n\n\treturn requirements\n}\n\n// GenerateComplianceReport generates a compliance report for role changes\nfunc GenerateComplianceReport(entries []*RoleChangeAuditEntry) map[string]interface{} {\n\treport := map[string]interface{}{\n\t\t\"total_role_changes\":    len(entries),\n\t\t\"compliance_summary\":    map[string]int{},\n\t\t\"failed_requirements\":   []string{},\n\t\t\"high_risk_changes\":     0,\n\t\t\"privileged_escalations\": 0,\n\t\t\"generated_at\":          time.Now(),\n\t}\n\n\tfor _, entry := range entries {\n\t\trequirements := CheckComplianceRequirements(entry)\n\t\t\n\t\tif entry.ValidationResult != nil \u0026\u0026 entry.ValidationResult.RiskLevel == \"high\" {\n\t\t\treport[\"high_risk_changes\"] = report[\"high_risk_changes\"].(int) + 1\n\t\t}\n\n\t\tif isPrivilegeEscalation(entry.PreviousRole, entry.NewRole) {\n\t\t\treport[\"privileged_escalations\"] = report[\"privileged_escalations\"].(int) + 1\n\t\t}\n\n\t\tfor _, req := range requirements {\n\t\t\tif req.Required \u0026\u0026 !req.Met {\n\t\t\t\treport[\"failed_requirements\"] = append(\n\t\t\t\t\treport[\"failed_requirements\"].([]string),\n\t\t\t\t\tfmt.Sprintf(\"%s: %s\", entry.TargetEmail, req.Name),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn report\n}",
      "size": 13329,
      "hash": "303ab339d89e8a8a7c9e1151f1b9044d612944d2045eb2570d25572c37a0ebb7",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/domain/types.go",
      "template": true,
      "content": "package domain\n\nimport (\n\t\"database/sql/driver\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"time\"\n\n\t\"github.com/golang-jwt/jwt/v5\"\n\t\"gorm.io/gorm\"\n)\n\n// UserRole represents the role of a user\ntype UserRole string\n\nconst (\n\tRoleUser  UserRole = \"user\"\n\tRoleAdmin UserRole = \"admin\"\n)\n\n// UserStatus represents the status of a user\ntype UserStatus string\n\nconst (\n\tStatusActive    UserStatus = \"active\"\n\tStatusInactive  UserStatus = \"inactive\"\n\tStatusSuspended UserStatus = \"suspended\"\n)\n\n// UserPreferences represents user preferences stored as JSONB\ntype UserPreferences struct {\n\tTheme         string            `json:\"theme,omitempty\"`           // \"light\", \"dark\", \"system\"\n\tLanguage      string            `json:\"language,omitempty\"`        // \"en\", \"es\", etc.\n\tTimezone      string            `json:\"timezone,omitempty\"`        // \"UTC\", \"America/New_York\", etc.\n\tNotifications NotificationPrefs `json:\"notifications,omitempty\"`   // notification preferences\n\tPrivacy       PrivacyPrefs      `json:\"privacy,omitempty\"`         // privacy preferences\n\tCustom        map[string]any    `json:\"custom,omitempty\"`          // custom application-specific preferences\n}\n\n// Value implements the driver.Valuer interface for database storage\nfunc (p UserPreferences) Value() (driver.Value, error) {\n\treturn json.Marshal(p)\n}\n\n// Scan implements the sql.Scanner interface for database retrieval\nfunc (p *UserPreferences) Scan(value interface{}) error {\n\tif value == nil {\n\t\t*p = UserPreferences{}\n\t\treturn nil\n\t}\n\n\tvar bytes []byte\n\tswitch v := value.(type) {\n\tcase []byte:\n\t\tbytes = v\n\tcase string:\n\t\tbytes = []byte(v)\n\tdefault:\n\t\treturn errors.New(\"cannot scan UserPreferences from non-string/[]byte type\")\n\t}\n\n\tif len(bytes) == 0 {\n\t\t*p = UserPreferences{}\n\t\treturn nil\n\t}\n\n\treturn json.Unmarshal(bytes, p)\n}\n\n// NotificationPrefs represents notification preferences\ntype NotificationPrefs struct {\n\tEmail bool `json:\"email\"`\n\tSMS   bool `json:\"sms\"`\n\tPush  bool `json:\"push\"`\n}\n\n// PrivacyPrefs represents privacy preferences\ntype PrivacyPrefs struct {\n\tProfileVisible bool `json:\"profile_visible\"`\n\tShowEmail      bool `json:\"show_email\"`\n}\n\n// User represents a user in the system\ntype User struct {\n\tID               uint             `json:\"id\" gorm:\"primarykey\"`\n\tEmail            string           `json:\"email\" gorm:\"uniqueIndex;not null\"`\n\tPasswordHash     string           `json:\"-\" gorm:\"not null\"`\n\tFirstName        string           `json:\"first_name\" gorm:\"not null\"`\n\tLastName         string           `json:\"last_name\" gorm:\"not null\"`\n\tEmailVerified    bool             `json:\"email_verified\" gorm:\"default:false\"`\n\tEmailVerifyToken string           `json:\"-\" gorm:\"index\"`\n\tRole             UserRole         `json:\"role\" gorm:\"default:'user';not null\"`\n\tStatus           UserStatus       `json:\"status\" gorm:\"default:'active';not null\"`\n\tPreferences      UserPreferences  `json:\"preferences\" gorm:\"type:jsonb;default:'{}'\"`\n\tAvatar           string           `json:\"avatar\"`                                              // URL to avatar image\n\tLastLoginAt      *time.Time       `json:\"last_login_at\"`\n\tCreatedAt        time.Time        `json:\"created_at\"`\n\tUpdatedAt        time.Time        `json:\"updated_at\"`\n\tDeletedAt        gorm.DeletedAt   `json:\"-\" gorm:\"index\"`\n\n\t// Relationships\n\tRefreshTokens []RefreshToken `json:\"-\" gorm:\"foreignKey:UserID;constraint:OnDelete:CASCADE\"`\n}\n\n// IsActive checks if the user is active\nfunc (u *User) IsActive() bool {\n\treturn u.Status == StatusActive\n}\n\n// IsAdmin checks if the user has admin role\nfunc (u *User) IsAdmin() bool {\n\treturn u.Role == RoleAdmin\n}\n\n// UserResponse represents the user data returned to the client\ntype UserResponse struct {\n\tID            uint            `json:\"id\"`\n\tEmail         string          `json:\"email\"`\n\tFirstName     string          `json:\"first_name\"`\n\tLastName      string          `json:\"last_name\"`\n\tEmailVerified bool            `json:\"email_verified\"`\n\tRole          UserRole        `json:\"role\"`\n\tStatus        UserStatus      `json:\"status\"`\n\tPreferences   UserPreferences `json:\"preferences\"`\n\tAvatar        string          `json:\"avatar,omitempty\"`\n\tLastLoginAt   *time.Time      `json:\"last_login_at\"`\n\tCreatedAt     time.Time       `json:\"created_at\"`\n\tUpdatedAt     time.Time       `json:\"updated_at\"`\n}\n\n// ToResponse converts User to UserResponse\nfunc (u *User) ToResponse() *UserResponse {\n\treturn \u0026UserResponse{\n\t\tID:            u.ID,\n\t\tEmail:         u.Email,\n\t\tFirstName:     u.FirstName,\n\t\tLastName:      u.LastName,\n\t\tEmailVerified: u.EmailVerified,\n\t\tRole:          u.Role,\n\t\tStatus:        u.Status,\n\t\tPreferences:   u.Preferences,\n\t\tAvatar:        u.Avatar,\n\t\tLastLoginAt:   u.LastLoginAt,\n\t\tCreatedAt:     u.CreatedAt,\n\t\tUpdatedAt:     u.UpdatedAt,\n\t}\n}\n\n// RefreshToken represents a refresh token for JWT authentication\ntype RefreshToken struct {\n\tID        uint           `json:\"id\" gorm:\"primarykey\"`\n\tUserID    uint           `json:\"user_id\" gorm:\"not null;index\"`\n\tToken     string         `json:\"-\" gorm:\"uniqueIndex;not null\"`\n\tExpiresAt time.Time      `json:\"expires_at\" gorm:\"not null\"`\n\tCreatedAt time.Time      `json:\"created_at\"`\n\tUpdatedAt time.Time      `json:\"updated_at\"`\n\tDeletedAt gorm.DeletedAt `json:\"-\" gorm:\"index\"`\n\n\t// Relationships\n\tUser User `json:\"-\" gorm:\"foreignKey:UserID;constraint:OnDelete:CASCADE\"`\n}\n\n// IsExpired checks if the refresh token is expired\nfunc (rt *RefreshToken) IsExpired() bool {\n\treturn time.Now().After(rt.ExpiresAt)\n}\n\n// PasswordReset represents a password reset request\ntype PasswordReset struct {\n\tID        uint           `json:\"id\" gorm:\"primarykey\"`\n\tEmail     string         `json:\"email\" gorm:\"not null;index\"`\n\tToken     string         `json:\"token\" gorm:\"uniqueIndex;not null\"`\n\tExpiresAt time.Time      `json:\"expires_at\" gorm:\"not null\"`\n\tUsed      bool           `json:\"used\" gorm:\"default:false\"`\n\tCreatedAt time.Time      `json:\"created_at\"`\n\tUpdatedAt time.Time      `json:\"updated_at\"`\n\tDeletedAt gorm.DeletedAt `json:\"-\" gorm:\"index\"`\n}\n\n// IsExpired checks if the password reset token is expired\nfunc (pr *PasswordReset) IsExpired() bool {\n\treturn time.Now().After(pr.ExpiresAt)\n}\n\n// AuditAction represents the type of audit action\ntype AuditAction string\n\nconst (\n\tAuditActionUserCreated         AuditAction = \"user_created\"\n\tAuditActionUserUpdated         AuditAction = \"user_updated\"\n\tAuditActionUserDeleted         AuditAction = \"user_deleted\"\n\tAuditActionUserStatusChanged   AuditAction = \"user_status_changed\"\n\tAuditActionUserRoleChanged     AuditAction = \"user_role_changed\"\n\tAuditActionPasswordChanged     AuditAction = \"password_changed\"\n\tAuditActionEmailVerified       AuditAction = \"email_verified\"\n\tAuditActionLoginSuccess        AuditAction = \"login_success\"\n\tAuditActionLoginFailed         AuditAction = \"login_failed\"\n\tAuditActionLogout              AuditAction = \"logout\"\n\tAuditActionPasswordResetReq    AuditAction = \"password_reset_requested\"\n\tAuditActionPasswordResetUsed   AuditAction = \"password_reset_used\"\n\tAuditActionPreferencesUpdated  AuditAction = \"preferences_updated\"\n)\n\n// AuditLevel represents the severity level of the audit event\ntype AuditLevel string\n\nconst (\n\tAuditLevelInfo    AuditLevel = \"info\"\n\tAuditLevelWarning AuditLevel = \"warning\"\n\tAuditLevelError   AuditLevel = \"error\"\n)\n\n// AuditLog represents an audit log entry for tracking system events\ntype AuditLog struct {\n\tID          uint                   `json:\"id\" gorm:\"primarykey\"`\n\tUserID      *uint                  `json:\"user_id\" gorm:\"index\"`                    // User who performed the action (nil for system actions)\n\tTargetID    *uint                  `json:\"target_id\" gorm:\"index\"`                  // User who was affected by the action (nil if not applicable)\n\tAction      AuditAction            `json:\"action\" gorm:\"not null;index\"`\n\tLevel       AuditLevel             `json:\"level\" gorm:\"default:'info';not null\"`\n\tResource    string                 `json:\"resource\" gorm:\"not null\"`                // e.g., \"user\", \"admin\", \"auth\"\n\tDescription string                 `json:\"description\" gorm:\"not null\"`\n\tIPAddress   string                 `json:\"ip_address\"`\n\tUserAgent   string                 `json:\"user_agent\"`\n\tMetadata    map[string]interface{} `json:\"metadata\" gorm:\"type:jsonb;default:'{}'\"`  // Additional structured data\n\tCreatedAt   time.Time              `json:\"created_at\"`\n\n\t// Relationships\n\tUser   *User `json:\"user,omitempty\" gorm:\"foreignKey:UserID\"`\n\tTarget *User `json:\"target,omitempty\" gorm:\"foreignKey:TargetID\"`\n}\n\n// Authentication DTOs\n\n// RegisterRequest represents a user registration request\ntype RegisterRequest struct {\n\tEmail     string `json:\"email\" binding:\"required,email\"`\n\tPassword  string `json:\"password\" binding:\"required,min=8\"`\n\tFirstName string `json:\"first_name\" binding:\"required,min=1\"`\n\tLastName  string `json:\"last_name\" binding:\"required,min=1\"`\n}\n\n// LoginRequest represents a user login request\ntype LoginRequest struct {\n\tEmail    string `json:\"email\" binding:\"required,email\"`\n\tPassword string `json:\"password\" binding:\"required\"`\n}\n\n// RefreshTokenRequest represents a token refresh request\ntype RefreshTokenRequest struct {\n\tRefreshToken string `json:\"refresh_token\" binding:\"required\"`\n}\n\n// ForgotPasswordRequest represents a forgot password request\ntype ForgotPasswordRequest struct {\n\tEmail string `json:\"email\" binding:\"required,email\"`\n}\n\n// ResetPasswordRequest represents a password reset request\ntype ResetPasswordRequest struct {\n\tToken           string `json:\"token\" binding:\"required\"`\n\tPassword        string `json:\"password\" binding:\"required,min=8\"`\n\tConfirmPassword string `json:\"confirm_password\" binding:\"required\"`\n}\n\n// ChangePasswordRequest represents a password change request\ntype ChangePasswordRequest struct {\n\tCurrentPassword string `json:\"current_password\" binding:\"required\"`\n\tNewPassword     string `json:\"new_password\" binding:\"required,min=8\"`\n\tConfirmPassword string `json:\"confirm_password\" binding:\"required\"`\n}\n\n// EmailVerificationRequest represents an email verification request\ntype EmailVerificationRequest struct {\n\tToken string `json:\"token\" binding:\"required\"`\n}\n\n// AuthResponse represents the response after successful authentication\ntype AuthResponse struct {\n\tUser         *UserResponse `json:\"user\"`\n\tAccessToken  string        `json:\"access_token\"`\n\tRefreshToken string        `json:\"refresh_token\"`\n\tExpiresIn    int64         `json:\"expires_in\"` // seconds\n}\n\n// MessageResponse represents a simple message response\ntype MessageResponse struct {\n\tMessage string `json:\"message\"`\n}\n\n// ErrorResponse represents an error response\ntype ErrorResponse struct {\n\tError   string            `json:\"error\"`\n\tDetails map[string]string `json:\"details,omitempty\"`\n}\n\n// JWT Claims\n\n// JWTClaims represents the claims in a JWT token\n// Implements jwt.Claims interface\ntype JWTClaims struct {\n\tUserID    uint     `json:\"user_id\"`\n\tEmail     string   `json:\"email\"`\n\tRole      UserRole `json:\"role\"`        // User role for authorization\n\tTokenType string   `json:\"token_type\"`  // \"access\" or \"refresh\"\n\tjwt.RegisteredClaims\n}\n\n// Valid validates the JWT claims\nfunc (c *JWTClaims) Valid() error {\n\t// Check expiration using the new jwt library\n\tnow := time.Now()\n\tif c.ExpiresAt != nil \u0026\u0026 now.After(c.ExpiresAt.Time) {\n\t\treturn ErrTokenExpired\n\t}\n\treturn nil\n}",
      "size": 11342,
      "hash": "86c4fca14ecbef3507775b366f5452a627e676cd971e66f04b7c407a41fa7f21",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/repository/password_reset.go",
      "template": true,
      "content": "package repository\n\nimport (\n\t\"time\"\n\n\t\"gorm.io/gorm\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n)\n\n// PasswordResetRepository handles database operations for password reset tokens\ntype PasswordResetRepository struct {\n\tdb *gorm.DB\n}\n\n// NewPasswordResetRepository creates a new password reset repository\nfunc NewPasswordResetRepository(db *gorm.DB) *PasswordResetRepository {\n\treturn \u0026PasswordResetRepository{\n\t\tdb: db,\n\t}\n}\n\n// Create creates a new password reset token\nfunc (r *PasswordResetRepository) Create(reset *domain.PasswordReset) error {\n\treturn r.db.Create(reset).Error\n}\n\n// GetByToken gets a password reset by token\nfunc (r *PasswordResetRepository) GetByToken(token string) (*domain.PasswordReset, error) {\n\tvar reset domain.PasswordReset\n\terr := r.db.Where(\"token = ? AND used = false AND expires_at \u003e ?\", token, time.Now()).First(\u0026reset).Error\n\tif err != nil {\n\t\tif err == gorm.ErrRecordNotFound {\n\t\t\treturn nil, domain.ErrTokenNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\treturn \u0026reset, nil\n}\n\n// GetByEmail gets all password reset tokens for an email\nfunc (r *PasswordResetRepository) GetByEmail(email string) ([]*domain.PasswordReset, error) {\n\tvar resets []*domain.PasswordReset\n\terr := r.db.Where(\"email = ?\", email).Find(\u0026resets).Error\n\treturn resets, err\n}\n\n// MarkAsUsed marks a password reset token as used\nfunc (r *PasswordResetRepository) MarkAsUsed(token string) error {\n\treturn r.db.Model(\u0026domain.PasswordReset{}).\n\t\tWhere(\"token = ?\", token).\n\t\tUpdate(\"used\", true).Error\n}\n\n// Delete deletes a password reset token\nfunc (r *PasswordResetRepository) Delete(token string) error {\n\treturn r.db.Where(\"token = ?\", token).Delete(\u0026domain.PasswordReset{}).Error\n}\n\n// DeleteByEmail deletes all password reset tokens for an email\nfunc (r *PasswordResetRepository) DeleteByEmail(email string) error {\n\treturn r.db.Where(\"email = ?\", email).Delete(\u0026domain.PasswordReset{}).Error\n}\n\n// DeleteExpired deletes all expired password reset tokens\nfunc (r *PasswordResetRepository) DeleteExpired() error {\n\treturn r.db.Where(\"expires_at \u003c ?\", time.Now()).Delete(\u0026domain.PasswordReset{}).Error\n}\n\n// DeleteUsed deletes all used password reset tokens\nfunc (r *PasswordResetRepository) DeleteUsed() error {\n\treturn r.db.Where(\"used = true\").Delete(\u0026domain.PasswordReset{}).Error\n}\n\n// Update updates a password reset token\nfunc (r *PasswordResetRepository) Update(reset *domain.PasswordReset) error {\n\treturn r.db.Save(reset).Error\n}\n\n// GetValidTokensCount returns the count of valid (unused and not expired) tokens for an email\nfunc (r *PasswordResetRepository) GetValidTokensCount(email string) (int64, error) {\n\tvar count int64\n\terr := r.db.Model(\u0026domain.PasswordReset{}).\n\t\tWhere(\"email = ? AND used = false AND expires_at \u003e ?\", email, time.Now()).\n\t\tCount(\u0026count).Error\n\treturn count, err\n}",
      "size": 2819,
      "hash": "b46b845346ac6eef621407b8b9f1bbf9b9fb89e66218147b46ad1deafc3396e0",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/repository/refresh_token.go",
      "template": true,
      "content": "package repository\n\nimport (\n\t\"time\"\n\n\t\"gorm.io/gorm\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n)\n\n// RefreshTokenRepository handles database operations for refresh tokens\ntype RefreshTokenRepository struct {\n\tdb *gorm.DB\n}\n\n// NewRefreshTokenRepository creates a new refresh token repository\nfunc NewRefreshTokenRepository(db *gorm.DB) *RefreshTokenRepository {\n\treturn \u0026RefreshTokenRepository{\n\t\tdb: db,\n\t}\n}\n\n// Create creates a new refresh token\nfunc (r *RefreshTokenRepository) Create(token *domain.RefreshToken) error {\n\treturn r.db.Create(token).Error\n}\n\n// GetByToken gets a refresh token by token string\nfunc (r *RefreshTokenRepository) GetByToken(token string) (*domain.RefreshToken, error) {\n\tvar refreshToken domain.RefreshToken\n\terr := r.db.Where(\"token = ?\", token).First(\u0026refreshToken).Error\n\tif err != nil {\n\t\tif err == gorm.ErrRecordNotFound {\n\t\t\treturn nil, domain.ErrTokenNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\treturn \u0026refreshToken, nil\n}\n\n// GetByUserID gets all refresh tokens for a user\nfunc (r *RefreshTokenRepository) GetByUserID(userID uint) ([]*domain.RefreshToken, error) {\n\tvar tokens []*domain.RefreshToken\n\terr := r.db.Where(\"user_id = ?\", userID).Find(\u0026tokens).Error\n\treturn tokens, err\n}\n\n// Delete deletes a refresh token\nfunc (r *RefreshTokenRepository) Delete(token string) error {\n\treturn r.db.Where(\"token = ?\", token).Delete(\u0026domain.RefreshToken{}).Error\n}\n\n// DeleteByUserID deletes all refresh tokens for a user\nfunc (r *RefreshTokenRepository) DeleteByUserID(userID uint) error {\n\treturn r.db.Where(\"user_id = ?\", userID).Delete(\u0026domain.RefreshToken{}).Error\n}\n\n// DeleteExpired deletes all expired refresh tokens\nfunc (r *RefreshTokenRepository) DeleteExpired() error {\n\treturn r.db.Where(\"expires_at \u003c ?\", time.Now()).Delete(\u0026domain.RefreshToken{}).Error\n}\n\n// Update updates a refresh token\nfunc (r *RefreshTokenRepository) Update(token *domain.RefreshToken) error {\n\treturn r.db.Save(token).Error\n}\n\n// GetActiveTokensCount returns the count of active tokens for a user\nfunc (r *RefreshTokenRepository) GetActiveTokensCount(userID uint) (int64, error) {\n\tvar count int64\n\terr := r.db.Model(\u0026domain.RefreshToken{}).\n\t\tWhere(\"user_id = ? AND expires_at \u003e ?\", userID, time.Now()).\n\t\tCount(\u0026count).Error\n\treturn count, err\n}\n\n// DeleteOldestTokensForUser deletes the oldest tokens for a user, keeping only the specified limit\nfunc (r *RefreshTokenRepository) DeleteOldestTokensForUser(userID uint, keepCount int) error {\n\t// Get tokens ordered by creation date (oldest first)\n\tvar tokens []*domain.RefreshToken\n\terr := r.db.Where(\"user_id = ?\", userID).\n\t\tOrder(\"created_at ASC\").\n\t\tFind(\u0026tokens).Error\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// If we have more tokens than the limit, delete the oldest ones\n\tif len(tokens) \u003e keepCount {\n\t\ttokensToDelete := tokens[:len(tokens)-keepCount]\n\t\tfor _, token := range tokensToDelete {\n\t\t\tif err := r.db.Delete(token).Error; err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t}\n\n\treturn nil\n}",
      "size": 2976,
      "hash": "dc09dd4e7a5e4bd143906f94ee58a2e5b85ff7016e4d78958a998aaad4ba283d",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/repository/user.go",
      "template": true,
      "content": "package repository\n\nimport (\n\t\"time\"\n\n\t\"gorm.io/gorm\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n)\n\n// UserRepository handles database operations for users\ntype UserRepository struct {\n\tdb *gorm.DB\n}\n\n// NewUserRepository creates a new user repository\nfunc NewUserRepository(db *gorm.DB) *UserRepository {\n\treturn \u0026UserRepository{\n\t\tdb: db,\n\t}\n}\n\n// Create creates a new user\nfunc (r *UserRepository) Create(user *domain.User) error {\n\treturn r.db.Create(user).Error\n}\n\n// GetByID gets a user by ID\nfunc (r *UserRepository) GetByID(id uint) (*domain.User, error) {\n\tvar user domain.User\n\terr := r.db.First(\u0026user, id).Error\n\tif err != nil {\n\t\tif err == gorm.ErrRecordNotFound {\n\t\t\treturn nil, domain.ErrUserNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\treturn \u0026user, nil\n}\n\n// GetByEmail gets a user by email\nfunc (r *UserRepository) GetByEmail(email string) (*domain.User, error) {\n\tvar user domain.User\n\terr := r.db.Where(\"email = ?\", email).First(\u0026user).Error\n\tif err != nil {\n\t\tif err == gorm.ErrRecordNotFound {\n\t\t\treturn nil, domain.ErrUserNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\treturn \u0026user, nil\n}\n\n// GetByEmailVerifyToken gets a user by email verification token\nfunc (r *UserRepository) GetByEmailVerifyToken(token string) (*domain.User, error) {\n\tvar user domain.User\n\terr := r.db.Where(\"email_verify_token = ?\", token).First(\u0026user).Error\n\tif err != nil {\n\t\tif err == gorm.ErrRecordNotFound {\n\t\t\treturn nil, domain.ErrUserNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\treturn \u0026user, nil\n}\n\n// Update updates a user\nfunc (r *UserRepository) Update(user *domain.User) error {\n\treturn r.db.Save(user).Error\n}\n\n// UpdateLastLogin updates the last login time for a user\nfunc (r *UserRepository) UpdateLastLogin(userID uint) error {\n\tnow := time.Now()\n\treturn r.db.Model(\u0026domain.User{}).Where(\"id = ?\", userID).Update(\"last_login_at\", \u0026now).Error\n}\n\n// Delete soft deletes a user\nfunc (r *UserRepository) Delete(id uint) error {\n\treturn r.db.Delete(\u0026domain.User{}, id).Error\n}\n\n// ExistsByEmail checks if a user exists by email\nfunc (r *UserRepository) ExistsByEmail(email string) (bool, error) {\n\tvar count int64\n\terr := r.db.Model(\u0026domain.User{}).Where(\"email = ?\", email).Count(\u0026count).Error\n\tif err != nil {\n\t\treturn false, err\n\t}\n\treturn count \u003e 0, nil\n}\n\n// CountUsers returns the total number of users\nfunc (r *UserRepository) CountUsers() (int64, error) {\n\tvar count int64\n\terr := r.db.Model(\u0026domain.User{}).Count(\u0026count).Error\n\treturn count, err\n}\n\n// GetUsers returns a paginated list of users\nfunc (r *UserRepository) GetUsers(limit, offset int) ([]*domain.User, error) {\n\tvar users []*domain.User\n\terr := r.db.Limit(limit).Offset(offset).Find(\u0026users).Error\n\treturn users, err\n}",
      "size": 2685,
      "hash": "3277fbed14a38b56bac92fff10d06075e62e0c16298ccfb83c5fcd8e7877077e",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/service/auth.go",
      "template": true,
      "content": "package service\n\nimport (\n\t\"fmt\"\n\t\"log/slog\"\n\t\"strings\"\n\t\"time\"\n\n\t\"golang.org/x/crypto/bcrypt\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/auth/repository\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n)\n\n// AuthService handles authentication operations\ntype AuthService struct {\n\tconfig                   *config.Config\n\tlogger                   *slog.Logger\n\tuserRepo                 *repository.UserRepository\n\trefreshTokenRepo         *repository.RefreshTokenRepository\n\tpasswordResetRepo        *repository.PasswordResetRepository\n\tjwtService               *JWTService\n\temailService             *EmailService\n}\n\n// NewAuthService creates a new authentication service\nfunc NewAuthService(\n\tconfig *config.Config,\n\tlogger *slog.Logger,\n\tuserRepo *repository.UserRepository,\n\trefreshTokenRepo *repository.RefreshTokenRepository,\n\tpasswordResetRepo *repository.PasswordResetRepository,\n\tjwtService *JWTService,\n\temailService *EmailService,\n) *AuthService {\n\treturn \u0026AuthService{\n\t\tconfig:            config,\n\t\tlogger:            logger,\n\t\tuserRepo:          userRepo,\n\t\trefreshTokenRepo:  refreshTokenRepo,\n\t\tpasswordResetRepo: passwordResetRepo,\n\t\tjwtService:        jwtService,\n\t\temailService:      emailService,\n\t}\n}\n\n// Register registers a new user\nfunc (s *AuthService) Register(req *domain.RegisterRequest) (*domain.AuthResponse, error) {\n\t// Check if user already exists\n\texists, err := s.userRepo.ExistsByEmail(req.Email)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to check if user exists\", \"email\", req.Email, \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to check user existence: %w\", err)\n\t}\n\tif exists {\n\t\treturn nil, domain.ErrUserAlreadyExists\n\t}\n\n\t// Validate password strength\n\tif err := s.validatePassword(req.Password); err != nil {\n\t\treturn nil, err\n\t}\n\n\t// Hash password\n\tpasswordHash, err := s.hashPassword(req.Password)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to hash password\", \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to hash password: %w\", err)\n\t}\n\n\t// Generate email verification token\n\temailVerifyToken, err := s.jwtService.GenerateRandomToken()\n\tif err != nil {\n\t\ts.logger.Error(\"failed to generate email verification token\", \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to generate email verification token: %w\", err)\n\t}\n\n\t// Create user\n\tuser := \u0026domain.User{\n\t\tEmail:            strings.ToLower(strings.TrimSpace(req.Email)),\n\t\tPasswordHash:     passwordHash,\n\t\tFirstName:        strings.TrimSpace(req.FirstName),\n\t\tLastName:         strings.TrimSpace(req.LastName),\n\t\tEmailVerified:    false,\n\t\tEmailVerifyToken: emailVerifyToken,\n\t\tStatus:           domain.StatusActive,\n\t}\n\n\tif err := s.userRepo.Create(user); err != nil {\n\t\ts.logger.Error(\"failed to create user\", \"email\", req.Email, \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to create user: %w\", err)\n\t}\n\n\t// Send email verification email\n\tif err := s.emailService.SendEmailVerification(user.Email, emailVerifyToken, user.FirstName); err != nil {\n\t\ts.logger.Error(\"failed to send email verification\", \"email\", user.Email, \"error\", err)\n\t\t// Don't fail registration if email fails to send\n\t}\n\n\t// Generate tokens\n\taccessToken, err := s.jwtService.GenerateAccessToken(user)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to generate access token\", \"user_id\", user.ID, \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to generate access token: %w\", err)\n\t}\n\n\trefreshToken, err := s.createRefreshToken(user.ID)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to create refresh token\", \"user_id\", user.ID, \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to create refresh token: %w\", err)\n\t}\n\n\ts.logger.Info(\"user registered successfully\", \"user_id\", user.ID, \"email\", user.Email)\n\n\treturn \u0026domain.AuthResponse{\n\t\tUser:         user.ToResponse(),\n\t\tAccessToken:  accessToken,\n\t\tRefreshToken: refreshToken,\n\t\tExpiresIn:    int64(s.jwtService.GetAccessTokenDuration().Seconds()),\n\t}, nil\n}\n\n// Login authenticates a user and returns tokens\nfunc (s *AuthService) Login(req *domain.LoginRequest) (*domain.AuthResponse, error) {\n\t// Get user by email\n\tuser, err := s.userRepo.GetByEmail(strings.ToLower(strings.TrimSpace(req.Email)))\n\tif err != nil {\n\t\tif err == domain.ErrUserNotFound {\n\t\t\treturn nil, domain.ErrInvalidCredentials\n\t\t}\n\t\ts.logger.Error(\"failed to get user by email\", \"email\", req.Email, \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to get user: %w\", err)\n\t}\n\n\t// Check if user is active\n\tif !user.IsActive() {\n\t\treturn nil, domain.ErrUserInactive\n\t}\n\n\t// Verify password\n\tif err := s.verifyPassword(req.Password, user.PasswordHash); err != nil {\n\t\treturn nil, domain.ErrInvalidCredentials\n\t}\n\n\t// Update last login time\n\tif err := s.userRepo.UpdateLastLogin(user.ID); err != nil {\n\t\ts.logger.Error(\"failed to update last login\", \"user_id\", user.ID, \"error\", err)\n\t\t// Don't fail login if this fails\n\t}\n\n\t// Generate tokens\n\taccessToken, err := s.jwtService.GenerateAccessToken(user)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to generate access token\", \"user_id\", user.ID, \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to generate access token: %w\", err)\n\t}\n\n\trefreshToken, err := s.createRefreshToken(user.ID)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to create refresh token\", \"user_id\", user.ID, \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to create refresh token: %w\", err)\n\t}\n\n\ts.logger.Info(\"user logged in successfully\", \"user_id\", user.ID, \"email\", user.Email)\n\n\treturn \u0026domain.AuthResponse{\n\t\tUser:         user.ToResponse(),\n\t\tAccessToken:  accessToken,\n\t\tRefreshToken: refreshToken,\n\t\tExpiresIn:    int64(s.jwtService.GetAccessTokenDuration().Seconds()),\n\t}, nil\n}\n\n// RefreshToken refreshes an access token using a refresh token\nfunc (s *AuthService) RefreshToken(req *domain.RefreshTokenRequest) (*domain.AuthResponse, error) {\n\t// Get refresh token from database\n\trefreshToken, err := s.refreshTokenRepo.GetByToken(req.RefreshToken)\n\tif err != nil {\n\t\treturn nil, domain.ErrInvalidToken\n\t}\n\n\t// Check if token is expired\n\tif refreshToken.IsExpired() {\n\t\t// Clean up expired token\n\t\t_ = s.refreshTokenRepo.Delete(refreshToken.Token)\n\t\treturn nil, domain.ErrTokenExpired\n\t}\n\n\t// Get user\n\tuser, err := s.userRepo.GetByID(refreshToken.UserID)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to get user: %w\", err)\n\t}\n\n\t// Check if user is active\n\tif !user.IsActive() {\n\t\treturn nil, domain.ErrUserInactive\n\t}\n\n\t// Generate new access token\n\taccessToken, err := s.jwtService.GenerateAccessToken(user)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to generate access token\", \"user_id\", user.ID, \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to generate access token: %w\", err)\n\t}\n\n\ts.logger.Info(\"token refreshed successfully\", \"user_id\", user.ID)\n\n\treturn \u0026domain.AuthResponse{\n\t\tUser:         user.ToResponse(),\n\t\tAccessToken:  accessToken,\n\t\tRefreshToken: refreshToken.Token, // Return the same refresh token\n\t\tExpiresIn:    int64(s.jwtService.GetAccessTokenDuration().Seconds()),\n\t}, nil\n}\n\n// Logout invalidates a refresh token\nfunc (s *AuthService) Logout(refreshToken string) error {\n\tif err := s.refreshTokenRepo.Delete(refreshToken); err != nil {\n\t\ts.logger.Error(\"failed to delete refresh token\", \"error\", err)\n\t\treturn fmt.Errorf(\"failed to logout: %w\", err)\n\t}\n\n\ts.logger.Info(\"user logged out successfully\")\n\treturn nil\n}\n\n// LogoutAll invalidates all refresh tokens for a user\nfunc (s *AuthService) LogoutAll(userID uint) error {\n\tif err := s.refreshTokenRepo.DeleteByUserID(userID); err != nil {\n\t\ts.logger.Error(\"failed to delete all refresh tokens\", \"user_id\", userID, \"error\", err)\n\t\treturn fmt.Errorf(\"failed to logout from all devices: %w\", err)\n\t}\n\n\ts.logger.Info(\"user logged out from all devices\", \"user_id\", userID)\n\treturn nil\n}\n\n// VerifyEmail verifies a user's email address\nfunc (s *AuthService) VerifyEmail(req *domain.EmailVerificationRequest) error {\n\t// Get user by email verification token\n\tuser, err := s.userRepo.GetByEmailVerifyToken(req.Token)\n\tif err != nil {\n\t\treturn domain.ErrInvalidToken\n\t}\n\n\t// Mark email as verified and clear token\n\tuser.EmailVerified = true\n\tuser.EmailVerifyToken = \"\"\n\n\tif err := s.userRepo.Update(user); err != nil {\n\t\ts.logger.Error(\"failed to update user email verification\", \"user_id\", user.ID, \"error\", err)\n\t\treturn fmt.Errorf(\"failed to verify email: %w\", err)\n\t}\n\n\t// Send welcome email\n\tif err := s.emailService.SendWelcomeEmail(user.Email, user.FirstName); err != nil {\n\t\ts.logger.Error(\"failed to send welcome email\", \"email\", user.Email, \"error\", err)\n\t\t// Don't fail verification if welcome email fails\n\t}\n\n\ts.logger.Info(\"email verified successfully\", \"user_id\", user.ID, \"email\", user.Email)\n\treturn nil\n}\n\n// ForgotPassword initiates password reset process\nfunc (s *AuthService) ForgotPassword(req *domain.ForgotPasswordRequest) error {\n\temail := strings.ToLower(strings.TrimSpace(req.Email))\n\n\t// Check if user exists\n\tuser, err := s.userRepo.GetByEmail(email)\n\tif err != nil {\n\t\tif err == domain.ErrUserNotFound {\n\t\t\t// Don't reveal if user exists or not for security\n\t\t\ts.logger.Info(\"password reset requested for non-existent email\", \"email\", email)\n\t\t\treturn nil\n\t\t}\n\t\ts.logger.Error(\"failed to get user by email\", \"email\", email, \"error\", err)\n\t\treturn fmt.Errorf(\"failed to process password reset request: %w\", err)\n\t}\n\n\t// Check rate limiting - don't allow too many reset requests\n\tcount, err := s.passwordResetRepo.GetValidTokensCount(email)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to get valid tokens count\", \"email\", email, \"error\", err)\n\t\treturn fmt.Errorf(\"failed to process password reset request: %w\", err)\n\t}\n\tif count \u003e= 3 {\n\t\ts.logger.Warn(\"too many password reset requests\", \"email\", email, \"count\", count)\n\t\treturn fmt.Errorf(\"too many password reset requests, please try again later\")\n\t}\n\n\t// Generate reset token\n\ttoken, err := s.jwtService.GenerateRandomToken()\n\tif err != nil {\n\t\ts.logger.Error(\"failed to generate reset token\", \"error\", err)\n\t\treturn fmt.Errorf(\"failed to generate reset token: %w\", err)\n\t}\n\n\t// Create password reset record\n\treset := \u0026domain.PasswordReset{\n\t\tEmail:     email,\n\t\tToken:     token,\n\t\tExpiresAt: time.Now().Add(24 * time.Hour), // 24 hours expiry\n\t\tUsed:      false,\n\t}\n\n\tif err := s.passwordResetRepo.Create(reset); err != nil {\n\t\ts.logger.Error(\"failed to create password reset\", \"email\", email, \"error\", err)\n\t\treturn fmt.Errorf(\"failed to create password reset: %w\", err)\n\t}\n\n\t// Send password reset email\n\tif err := s.emailService.SendPasswordReset(email, token, user.FirstName); err != nil {\n\t\ts.logger.Error(\"failed to send password reset email\", \"email\", email, \"error\", err)\n\t\treturn fmt.Errorf(\"failed to send password reset email: %w\", err)\n\t}\n\n\ts.logger.Info(\"password reset requested\", \"email\", email)\n\treturn nil\n}\n\n// ResetPassword resets a user's password using a reset token\nfunc (s *AuthService) ResetPassword(req *domain.ResetPasswordRequest) error {\n\t// Validate passwords match\n\tif req.Password != req.ConfirmPassword {\n\t\treturn domain.ErrPasswordsDoNotMatch\n\t}\n\n\t// Validate password strength\n\tif err := s.validatePassword(req.Password); err != nil {\n\t\treturn err\n\t}\n\n\t// Get password reset token\n\treset, err := s.passwordResetRepo.GetByToken(req.Token)\n\tif err != nil {\n\t\treturn domain.ErrInvalidToken\n\t}\n\n\t// Check if token is expired or used\n\tif reset.IsExpired() {\n\t\treturn domain.ErrTokenExpired\n\t}\n\tif reset.Used {\n\t\treturn domain.ErrTokenAlreadyUsed\n\t}\n\n\t// Get user\n\tuser, err := s.userRepo.GetByEmail(reset.Email)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to get user: %w\", err)\n\t}\n\n\t// Hash new password\n\tpasswordHash, err := s.hashPassword(req.Password)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to hash password\", \"error\", err)\n\t\treturn fmt.Errorf(\"failed to hash password: %w\", err)\n\t}\n\n\t// Update user password\n\tuser.PasswordHash = passwordHash\n\tif err := s.userRepo.Update(user); err != nil {\n\t\ts.logger.Error(\"failed to update user password\", \"user_id\", user.ID, \"error\", err)\n\t\treturn fmt.Errorf(\"failed to update password: %w\", err)\n\t}\n\n\t// Mark token as used\n\tif err := s.passwordResetRepo.MarkAsUsed(req.Token); err != nil {\n\t\ts.logger.Error(\"failed to mark reset token as used\", \"token\", req.Token, \"error\", err)\n\t\t// Don't fail if this fails\n\t}\n\n\t// Invalidate all refresh tokens to force re-login\n\tif err := s.refreshTokenRepo.DeleteByUserID(user.ID); err != nil {\n\t\ts.logger.Error(\"failed to invalidate refresh tokens\", \"user_id\", user.ID, \"error\", err)\n\t\t// Don't fail if this fails\n\t}\n\n\ts.logger.Info(\"password reset successfully\", \"user_id\", user.ID, \"email\", user.Email)\n\treturn nil\n}\n\n// ChangePassword changes a user's password\nfunc (s *AuthService) ChangePassword(userID uint, req *domain.ChangePasswordRequest) error {\n\t// Validate passwords match\n\tif req.NewPassword != req.ConfirmPassword {\n\t\treturn domain.ErrPasswordsDoNotMatch\n\t}\n\n\t// Validate password strength\n\tif err := s.validatePassword(req.NewPassword); err != nil {\n\t\treturn err\n\t}\n\n\t// Get user\n\tuser, err := s.userRepo.GetByID(userID)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to get user: %w\", err)\n\t}\n\n\t// Verify current password\n\tif err := s.verifyPassword(req.CurrentPassword, user.PasswordHash); err != nil {\n\t\treturn domain.ErrInvalidCredentials\n\t}\n\n\t// Hash new password\n\tpasswordHash, err := s.hashPassword(req.NewPassword)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to hash password\", \"error\", err)\n\t\treturn fmt.Errorf(\"failed to hash password: %w\", err)\n\t}\n\n\t// Update user password\n\tuser.PasswordHash = passwordHash\n\tif err := s.userRepo.Update(user); err != nil {\n\t\ts.logger.Error(\"failed to update user password\", \"user_id\", user.ID, \"error\", err)\n\t\treturn fmt.Errorf(\"failed to update password: %w\", err)\n\t}\n\n\ts.logger.Info(\"password changed successfully\", \"user_id\", user.ID)\n\treturn nil\n}\n\n// GetUserProfile gets a user's profile\nfunc (s *AuthService) GetUserProfile(userID uint) (*domain.UserResponse, error) {\n\tuser, err := s.userRepo.GetByID(userID)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to get user: %w\", err)\n\t}\n\n\treturn user.ToResponse(), nil\n}\n\n// ValidateAccessToken validates an access token and returns user claims\nfunc (s *AuthService) ValidateAccessToken(tokenString string) (*domain.JWTClaims, error) {\n\treturn s.jwtService.ValidateAccessToken(tokenString)\n}\n\n// ResendEmailVerification resends email verification email\nfunc (s *AuthService) ResendEmailVerification(userID uint) error {\n\tuser, err := s.userRepo.GetByID(userID)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to get user: %w\", err)\n\t}\n\n\tif user.EmailVerified {\n\t\treturn fmt.Errorf(\"email already verified\")\n\t}\n\n\t// Generate new verification token if empty\n\tif user.EmailVerifyToken == \"\" {\n\t\ttoken, err := s.jwtService.GenerateRandomToken()\n\t\tif err != nil {\n\t\t\ts.logger.Error(\"failed to generate email verification token\", \"error\", err)\n\t\t\treturn fmt.Errorf(\"failed to generate email verification token: %w\", err)\n\t\t}\n\t\tuser.EmailVerifyToken = token\n\t\tif err := s.userRepo.Update(user); err != nil {\n\t\t\ts.logger.Error(\"failed to update user email verification token\", \"user_id\", user.ID, \"error\", err)\n\t\t\treturn fmt.Errorf(\"failed to update user: %w\", err)\n\t\t}\n\t}\n\n\t// Send email verification\n\tif err := s.emailService.SendEmailVerification(user.Email, user.EmailVerifyToken, user.FirstName); err != nil {\n\t\ts.logger.Error(\"failed to send email verification\", \"email\", user.Email, \"error\", err)\n\t\treturn fmt.Errorf(\"failed to send email verification: %w\", err)\n\t}\n\n\ts.logger.Info(\"email verification resent\", \"user_id\", user.ID, \"email\", user.Email)\n\treturn nil\n}\n\n// Helper methods\n\nfunc (s *AuthService) createRefreshToken(userID uint) (string, error) {\n\t// Generate refresh token\n\ttokenStr, err := s.jwtService.GenerateRefreshToken()\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// Create refresh token record\n\trefreshToken := \u0026domain.RefreshToken{\n\t\tUserID:    userID,\n\t\tToken:     tokenStr,\n\t\tExpiresAt: time.Now().Add(s.jwtService.GetRefreshTokenDuration()),\n\t}\n\n\tif err := s.refreshTokenRepo.Create(refreshToken); err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// Clean up old tokens (keep max 5 per user)\n\tif err := s.refreshTokenRepo.DeleteOldestTokensForUser(userID, 5); err != nil {\n\t\ts.logger.Error(\"failed to clean up old refresh tokens\", \"user_id\", userID, \"error\", err)\n\t\t// Don't fail if cleanup fails\n\t}\n\n\treturn tokenStr, nil\n}\n\nfunc (s *AuthService) hashPassword(password string) (string, error) {\n\tbytes, err := bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost)\n\treturn string(bytes), err\n}\n\nfunc (s *AuthService) verifyPassword(password, hash string) error {\n\treturn bcrypt.CompareHashAndPassword([]byte(hash), []byte(password))\n}\n\nfunc (s *AuthService) validatePassword(password string) error {\n\tif len(password) \u003c 8 {\n\t\treturn domain.ErrWeakPassword\n\t}\n\t// Add more password strength validation as needed\n\treturn nil\n}\n\n// CleanupExpiredTokens removes expired tokens from the database\nfunc (s *AuthService) CleanupExpiredTokens() error {\n\tif err := s.refreshTokenRepo.DeleteExpired(); err != nil {\n\t\ts.logger.Error(\"failed to cleanup expired refresh tokens\", \"error\", err)\n\t\treturn err\n\t}\n\n\tif err := s.passwordResetRepo.DeleteExpired(); err != nil {\n\t\ts.logger.Error(\"failed to cleanup expired password reset tokens\", \"error\", err)\n\t\treturn err\n\t}\n\n\tif err := s.passwordResetRepo.DeleteUsed(); err != nil {\n\t\ts.logger.Error(\"failed to cleanup used password reset tokens\", \"error\", err)\n\t\treturn err\n\t}\n\n\ts.logger.Info(\"expired tokens cleaned up successfully\")\n\treturn nil\n}",
      "size": 17458,
      "hash": "4b1cdcda5123f4ce125df4ba240df95edde201f7cffe131abfc2e638a330e15b",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/service/email.go",
      "template": true,
      "content": "package service\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"html/template\"\n\t\"log/slog\"\n\n\t\"gopkg.in/gomail.v2\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n)\n\n// EmailService handles email sending operations\ntype EmailService struct {\n\tconfig *config.Config\n\tlogger *slog.Logger\n\tdialer *gomail.Dialer\n}\n\n// NewEmailService creates a new email service\nfunc NewEmailService(config *config.Config, logger *slog.Logger) *EmailService {\n\tvar dialer *gomail.Dialer\n\tif config.SMTPUsername != \"\" \u0026\u0026 config.SMTPPassword != \"\" {\n\t\tdialer = gomail.NewDialer(config.SMTPHost, config.SMTPPort, config.SMTPUsername, config.SMTPPassword)\n\t}\n\n\treturn \u0026EmailService{\n\t\tconfig: config,\n\t\tlogger: logger,\n\t\tdialer: dialer,\n\t}\n}\n\n// SendEmailVerification sends an email verification email\nfunc (e *EmailService) SendEmailVerification(email, token, firstName string) error {\n\tif e.dialer == nil {\n\t\te.logger.Warn(\"email service not configured, skipping email verification\", \"email\", email)\n\t\treturn nil\n\t}\n\n\tverificationURL := fmt.Sprintf(\"%s/verify-email?token=%s\", e.config.FrontendURL, token)\n\n\tsubject := \"Verify your email address\"\n\thtmlBody, err := e.renderEmailVerificationTemplate(firstName, verificationURL)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to render email template: %w\", err)\n\t}\n\n\ttextBody := fmt.Sprintf(`Hi %s,\n\nPlease verify your email address by clicking the link below:\n%s\n\nIf you didn't create an account, you can safely ignore this email.\n\nBest regards,\n%s Team`, firstName, verificationURL, e.config.EmailFromName)\n\n\treturn e.sendEmail(email, subject, htmlBody, textBody)\n}\n\n// SendPasswordReset sends a password reset email\nfunc (e *EmailService) SendPasswordReset(email, token, firstName string) error {\n\tif e.dialer == nil {\n\t\te.logger.Warn(\"email service not configured, skipping password reset email\", \"email\", email)\n\t\treturn nil\n\t}\n\n\tresetURL := fmt.Sprintf(\"%s/reset-password?token=%s\", e.config.FrontendURL, token)\n\n\tsubject := \"Reset your password\"\n\thtmlBody, err := e.renderPasswordResetTemplate(firstName, resetURL)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to render email template: %w\", err)\n\t}\n\n\ttextBody := fmt.Sprintf(`Hi %s,\n\nYou requested to reset your password. Click the link below to reset it:\n%s\n\nThis link will expire in 24 hours. If you didn't request this, you can safely ignore this email.\n\nBest regards,\n%s Team`, firstName, resetURL, e.config.EmailFromName)\n\n\treturn e.sendEmail(email, subject, htmlBody, textBody)\n}\n\n// SendWelcomeEmail sends a welcome email to new users\nfunc (e *EmailService) SendWelcomeEmail(email, firstName string) error {\n\tif e.dialer == nil {\n\t\te.logger.Warn(\"email service not configured, skipping welcome email\", \"email\", email)\n\t\treturn nil\n\t}\n\n\tsubject := fmt.Sprintf(\"Welcome to %s!\", e.config.EmailFromName)\n\thtmlBody, err := e.renderWelcomeTemplate(firstName)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to render email template: %w\", err)\n\t}\n\n\ttextBody := fmt.Sprintf(`Hi %s,\n\nWelcome to %s! Your account has been successfully created and verified.\n\nYou can now access all the features of our platform.\n\nBest regards,\n%s Team`, firstName, e.config.EmailFromName, e.config.EmailFromName)\n\n\treturn e.sendEmail(email, subject, htmlBody, textBody)\n}\n\n// sendEmail sends an email with both HTML and text content\nfunc (e *EmailService) sendEmail(to, subject, htmlBody, textBody string) error {\n\tm := gomail.NewMessage()\n\tm.SetHeader(\"From\", m.FormatAddress(e.config.EmailFrom, e.config.EmailFromName))\n\tm.SetHeader(\"To\", to)\n\tm.SetHeader(\"Subject\", subject)\n\tm.SetBody(\"text/plain\", textBody)\n\tm.AddAlternative(\"text/html\", htmlBody)\n\n\tif err := e.dialer.DialAndSend(m); err != nil {\n\t\te.logger.Error(\"failed to send email\", \"to\", to, \"subject\", subject, \"error\", err)\n\t\treturn fmt.Errorf(\"failed to send email: %w\", err)\n\t}\n\n\te.logger.Info(\"email sent successfully\", \"to\", to, \"subject\", subject)\n\treturn nil\n}\n\n// renderEmailVerificationTemplate renders the email verification template\nfunc (e *EmailService) renderEmailVerificationTemplate(firstName, verificationURL string) (string, error) {\n\ttmpl := `\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eVerify your email\u003c/title\u003e\n    \u003cstyle\u003e\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { text-align: center; margin-bottom: 30px; }\n        .button { display: inline-block; padding: 12px 24px; background-color: #007bff; color: white; text-decoration: none; border-radius: 4px; margin: 20px 0; }\n        .footer { margin-top: 30px; font-size: 12px; color: #666; }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"header\"\u003e\n            \u003ch1\u003eVerify your email address\u003c/h1\u003e\n        \u003c/div\u003e\n        \u003cp\u003eHi {{.FirstName}},\u003c/p\u003e\n        \u003cp\u003eThank you for creating an account! Please verify your email address by clicking the button below:\u003c/p\u003e\n        \u003cp style=\"text-align: center;\"\u003e\n            \u003ca href=\"{{.VerificationURL}}\" class=\"button\"\u003eVerify Email Address\u003c/a\u003e\n        \u003c/p\u003e\n        \u003cp\u003eIf the button doesn't work, you can copy and paste this link into your browser:\u003c/p\u003e\n        \u003cp\u003e\u003ca href=\"{{.VerificationURL}}\"\u003e{{.VerificationURL}}\u003c/a\u003e\u003c/p\u003e\n        \u003cp\u003eIf you didn't create an account, you can safely ignore this email.\u003c/p\u003e\n        \u003cdiv class=\"footer\"\u003e\n            \u003cp\u003eBest regards,\u003cbr\u003e{{.AppName}} Team\u003c/p\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/body\u003e\n\u003c/html\u003e`\n\n\tt, err := template.New(\"email_verification\").Parse(tmpl)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\tdata := struct {\n\t\tFirstName       string\n\t\tVerificationURL string\n\t\tAppName         string\n\t}{\n\t\tFirstName:       firstName,\n\t\tVerificationURL: verificationURL,\n\t\tAppName:         e.config.EmailFromName,\n\t}\n\n\tvar buf bytes.Buffer\n\tif err := t.Execute(\u0026buf, data); err != nil {\n\t\treturn \"\", err\n\t}\n\n\treturn buf.String(), nil\n}\n\n// renderPasswordResetTemplate renders the password reset template\nfunc (e *EmailService) renderPasswordResetTemplate(firstName, resetURL string) (string, error) {\n\ttmpl := `\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eReset your password\u003c/title\u003e\n    \u003cstyle\u003e\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { text-align: center; margin-bottom: 30px; }\n        .button { display: inline-block; padding: 12px 24px; background-color: #dc3545; color: white; text-decoration: none; border-radius: 4px; margin: 20px 0; }\n        .footer { margin-top: 30px; font-size: 12px; color: #666; }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"header\"\u003e\n            \u003ch1\u003eReset your password\u003c/h1\u003e\n        \u003c/div\u003e\n        \u003cp\u003eHi {{.FirstName}},\u003c/p\u003e\n        \u003cp\u003eYou requested to reset your password. Click the button below to reset it:\u003c/p\u003e\n        \u003cp style=\"text-align: center;\"\u003e\n            \u003ca href=\"{{.ResetURL}}\" class=\"button\"\u003eReset Password\u003c/a\u003e\n        \u003c/p\u003e\n        \u003cp\u003eIf the button doesn't work, you can copy and paste this link into your browser:\u003c/p\u003e\n        \u003cp\u003e\u003ca href=\"{{.ResetURL}}\"\u003e{{.ResetURL}}\u003c/a\u003e\u003c/p\u003e\n        \u003cp\u003e\u003cstrong\u003eThis link will expire in 24 hours.\u003c/strong\u003e\u003c/p\u003e\n        \u003cp\u003eIf you didn't request this password reset, you can safely ignore this email.\u003c/p\u003e\n        \u003cdiv class=\"footer\"\u003e\n            \u003cp\u003eBest regards,\u003cbr\u003e{{.AppName}} Team\u003c/p\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/body\u003e\n\u003c/html\u003e`\n\n\tt, err := template.New(\"password_reset\").Parse(tmpl)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\tdata := struct {\n\t\tFirstName string\n\t\tResetURL  string\n\t\tAppName   string\n\t}{\n\t\tFirstName: firstName,\n\t\tResetURL:  resetURL,\n\t\tAppName:   e.config.EmailFromName,\n\t}\n\n\tvar buf bytes.Buffer\n\tif err := t.Execute(\u0026buf, data); err != nil {\n\t\treturn \"\", err\n\t}\n\n\treturn buf.String(), nil\n}\n\n// renderWelcomeTemplate renders the welcome email template\nfunc (e *EmailService) renderWelcomeTemplate(firstName string) (string, error) {\n\ttmpl := `\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eWelcome!\u003c/title\u003e\n    \u003cstyle\u003e\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { text-align: center; margin-bottom: 30px; }\n        .footer { margin-top: 30px; font-size: 12px; color: #666; }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"header\"\u003e\n            \u003ch1\u003eWelcome to {{.AppName}}!\u003c/h1\u003e\n        \u003c/div\u003e\n        \u003cp\u003eHi {{.FirstName}},\u003c/p\u003e\n        \u003cp\u003eWelcome to {{.AppName}}! Your account has been successfully created and verified.\u003c/p\u003e\n        \u003cp\u003eYou can now access all the features of our platform. If you have any questions, feel free to reach out to our support team.\u003c/p\u003e\n        \u003cp\u003eThank you for joining us!\u003c/p\u003e\n        \u003cdiv class=\"footer\"\u003e\n            \u003cp\u003eBest regards,\u003cbr\u003e{{.AppName}} Team\u003c/p\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/body\u003e\n\u003c/html\u003e`\n\n\tt, err := template.New(\"welcome\").Parse(tmpl)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\tdata := struct {\n\t\tFirstName string\n\t\tAppName   string\n\t}{\n\t\tFirstName: firstName,\n\t\tAppName:   e.config.EmailFromName,\n\t}\n\n\tvar buf bytes.Buffer\n\tif err := t.Execute(\u0026buf, data); err != nil {\n\t\treturn \"\", err\n\t}\n\n\treturn buf.String(), nil\n}",
      "size": 9454,
      "hash": "b03dabbea75c8e7417102a7095d1b4bb2a992f081a294092edcf9e7cc30a0627",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/service/jwt.go",
      "template": true,
      "content": "package service\n\nimport (\n\t\"crypto/rand\"\n\t\"encoding/hex\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"github.com/golang-jwt/jwt/v5\"\n\t\"github.com/google/uuid\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n)\n\n// JWTService handles JWT token operations\ntype JWTService struct {\n\tconfig *config.Config\n}\n\n// NewJWTService creates a new JWT service\nfunc NewJWTService(config *config.Config) *JWTService {\n\treturn \u0026JWTService{\n\t\tconfig: config,\n\t}\n}\n\n// GenerateAccessToken generates a new access token for the user\nfunc (j *JWTService) GenerateAccessToken(user *domain.User) (string, error) {\n\tnow := time.Now()\n\texpiresAt := now.Add(j.config.JWTAccessTokenDurationParsed())\n\n\tclaims := \u0026domain.JWTClaims{\n\t\tUserID:    user.ID,\n\t\tEmail:     user.Email,\n\t\tRole:      user.Role, // Include role in JWT claims for stateless authorization\n\t\tTokenType: \"access\",\n\t\tRegisteredClaims: jwt.RegisteredClaims{\n\t\t\tExpiresAt: jwt.NewNumericDate(expiresAt),\n\t\t\tIssuedAt:  jwt.NewNumericDate(now),\n\t\t\tNotBefore: jwt.NewNumericDate(now),\n\t\t},\n\t}\n\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)\n\treturn token.SignedString([]byte(j.config.JWTSecret))\n}\n\n// GenerateRefreshToken generates a new refresh token\nfunc (j *JWTService) GenerateRefreshToken() (string, error) {\n\t// Generate a random UUID for the refresh token\n\ttokenUUID := uuid.New()\n\treturn tokenUUID.String(), nil\n}\n\n// ValidateAccessToken validates an access token and returns the claims\nfunc (j *JWTService) ValidateAccessToken(tokenString string) (*domain.JWTClaims, error) {\n\ttoken, err := jwt.ParseWithClaims(tokenString, \u0026domain.JWTClaims{}, func(token *jwt.Token) (interface{}, error) {\n\t\t// Make sure token method conforms to \"SigningMethodHMAC\"\n\t\tif _, ok := token.Method.(*jwt.SigningMethodHMAC); !ok {\n\t\t\treturn nil, fmt.Errorf(\"unexpected signing method: %v\", token.Header[\"alg\"])\n\t\t}\n\t\treturn []byte(j.config.JWTSecret), nil\n\t})\n\n\tif err != nil {\n\t\treturn nil, domain.ErrInvalidToken\n\t}\n\n\tclaims, ok := token.Claims.(*domain.JWTClaims)\n\tif !ok || !token.Valid {\n\t\treturn nil, domain.ErrInvalidToken\n\t}\n\n\t// Check if token type is access\n\tif claims.TokenType != \"access\" {\n\t\treturn nil, domain.ErrInvalidToken\n\t}\n\n\treturn claims, nil\n}\n\n// GenerateRandomToken generates a random token for email verification and password reset\nfunc (j *JWTService) GenerateRandomToken() (string, error) {\n\tbytes := make([]byte, 32)\n\tif _, err := rand.Read(bytes); err != nil {\n\t\treturn \"\", err\n\t}\n\treturn hex.EncodeToString(bytes), nil\n}\n\n// GetAccessTokenDuration returns the access token duration\nfunc (j *JWTService) GetAccessTokenDuration() time.Duration {\n\treturn j.config.JWTAccessTokenDurationParsed()\n}\n\n// GetRefreshTokenDuration returns the refresh token duration\nfunc (j *JWTService) GetRefreshTokenDuration() time.Duration {\n\treturn j.config.JWTRefreshTokenDurationParsed()\n}",
      "size": 2889,
      "hash": "8c31e0b4415ed8900deed96c3b4abfc87c846328e7f0f2a1ad02a12450815911",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/auth/transport/http.go",
      "template": true,
      "content": "package transport\n\nimport (\n\t\"log/slog\"\n\t\"net/http\"\n\t\"strings\"\n\n\t\"github.com/gin-gonic/gin\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/auth/service\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n)\n\n// AuthHandler handles HTTP requests for authentication\ntype AuthHandler struct {\n\tconfig      *config.Config\n\tlogger      *slog.Logger\n\tauthService *service.AuthService\n}\n\n// NewAuthHandler creates a new authentication handler\nfunc NewAuthHandler(config *config.Config, logger *slog.Logger, authService *service.AuthService) *AuthHandler {\n\treturn \u0026AuthHandler{\n\t\tconfig:      config,\n\t\tlogger:      logger,\n\t\tauthService: authService,\n\t}\n}\n\n// Register handles user registration\nfunc (h *AuthHandler) Register(c *gin.Context) {\n\tvar req domain.RegisterRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tresponse, err := h.authService.Register(\u0026req)\n\tif err != nil {\n\t\th.handleAuthError(c, err)\n\t\treturn\n\t}\n\n\t// Set HTTP-only cookies for tokens\n\th.setAuthCookies(c, response.AccessToken, response.RefreshToken)\n\n\tc.JSON(http.StatusCreated, response)\n}\n\n// Login handles user login\nfunc (h *AuthHandler) Login(c *gin.Context) {\n\tvar req domain.LoginRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tresponse, err := h.authService.Login(\u0026req)\n\tif err != nil {\n\t\th.handleAuthError(c, err)\n\t\treturn\n\t}\n\n\t// Set HTTP-only cookies for tokens\n\th.setAuthCookies(c, response.AccessToken, response.RefreshToken)\n\n\tc.JSON(http.StatusOK, response)\n}\n\n// RefreshToken handles token refresh\nfunc (h *AuthHandler) RefreshToken(c *gin.Context) {\n\t// Try to get refresh token from cookie first, then from request body\n\trefreshToken, err := c.Cookie(\"refresh_token\")\n\tif err != nil || refreshToken == \"\" {\n\t\tvar req domain.RefreshTokenRequest\n\t\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\t\th.handleValidationError(c, err)\n\t\t\treturn\n\t\t}\n\t\trefreshToken = req.RefreshToken\n\t}\n\n\tif refreshToken == \"\" {\n\t\tc.JSON(http.StatusBadRequest, domain.ErrorResponse{\n\t\t\tError: \"refresh token is required\",\n\t\t})\n\t\treturn\n\t}\n\n\treq := \u0026domain.RefreshTokenRequest{RefreshToken: refreshToken}\n\tresponse, err := h.authService.RefreshToken(req)\n\tif err != nil {\n\t\th.handleAuthError(c, err)\n\t\treturn\n\t}\n\n\t// Set HTTP-only cookies for tokens\n\th.setAuthCookies(c, response.AccessToken, response.RefreshToken)\n\n\tc.JSON(http.StatusOK, response)\n}\n\n// Logout handles user logout\nfunc (h *AuthHandler) Logout(c *gin.Context) {\n\t// Get refresh token from cookie\n\trefreshToken, err := c.Cookie(\"refresh_token\")\n\tif err != nil || refreshToken == \"\" {\n\t\t// Clear cookies anyway\n\t\th.clearAuthCookies(c)\n\t\tc.JSON(http.StatusOK, domain.MessageResponse{Message: \"logged out successfully\"})\n\t\treturn\n\t}\n\n\tif err := h.authService.Logout(refreshToken); err != nil {\n\t\th.logger.Error(\"failed to logout\", \"error\", err)\n\t\t// Still clear cookies even if logout fails\n\t}\n\n\th.clearAuthCookies(c)\n\tc.JSON(http.StatusOK, domain.MessageResponse{Message: \"logged out successfully\"})\n}\n\n// LogoutAll handles logout from all devices\nfunc (h *AuthHandler) LogoutAll(c *gin.Context) {\n\tuserID, exists := c.Get(\"user_id\")\n\tif !exists {\n\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tuid, ok := userID.(uint)\n\tif !ok {\n\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{Error: \"invalid user ID\"})\n\t\treturn\n\t}\n\n\tif err := h.authService.LogoutAll(uid); err != nil {\n\t\th.logger.Error(\"failed to logout from all devices\", \"user_id\", uid, \"error\", err)\n\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{Error: \"failed to logout from all devices\"})\n\t\treturn\n\t}\n\n\th.clearAuthCookies(c)\n\tc.JSON(http.StatusOK, domain.MessageResponse{Message: \"logged out from all devices successfully\"})\n}\n\n// VerifyEmail handles email verification\nfunc (h *AuthHandler) VerifyEmail(c *gin.Context) {\n\tvar req domain.EmailVerificationRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tif err := h.authService.VerifyEmail(\u0026req); err != nil {\n\t\th.handleAuthError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, domain.MessageResponse{Message: \"email verified successfully\"})\n}\n\n// ForgotPassword handles forgot password requests\nfunc (h *AuthHandler) ForgotPassword(c *gin.Context) {\n\tvar req domain.ForgotPasswordRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tif err := h.authService.ForgotPassword(\u0026req); err != nil {\n\t\th.logger.Error(\"forgot password error\", \"error\", err)\n\t\t// Don't reveal specific errors for security\n\t\tc.JSON(http.StatusOK, domain.MessageResponse{\n\t\t\tMessage: \"if the email exists, a password reset link has been sent\",\n\t\t})\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, domain.MessageResponse{\n\t\tMessage: \"if the email exists, a password reset link has been sent\",\n\t})\n}\n\n// ResetPassword handles password reset\nfunc (h *AuthHandler) ResetPassword(c *gin.Context) {\n\tvar req domain.ResetPasswordRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tif err := h.authService.ResetPassword(\u0026req); err != nil {\n\t\th.handleAuthError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, domain.MessageResponse{Message: \"password reset successfully\"})\n}\n\n// ChangePassword handles password change\nfunc (h *AuthHandler) ChangePassword(c *gin.Context) {\n\tuserID, exists := c.Get(\"user_id\")\n\tif !exists {\n\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tuid, ok := userID.(uint)\n\tif !ok {\n\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{Error: \"invalid user ID\"})\n\t\treturn\n\t}\n\n\tvar req domain.ChangePasswordRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tif err := h.authService.ChangePassword(uid, \u0026req); err != nil {\n\t\th.handleAuthError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, domain.MessageResponse{Message: \"password changed successfully\"})\n}\n\n// GetProfile handles getting user profile\nfunc (h *AuthHandler) GetProfile(c *gin.Context) {\n\tuserID, exists := c.Get(\"user_id\")\n\tif !exists {\n\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tuid, ok := userID.(uint)\n\tif !ok {\n\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{Error: \"invalid user ID\"})\n\t\treturn\n\t}\n\n\tprofile, err := h.authService.GetUserProfile(uid)\n\tif err != nil {\n\t\th.logger.Error(\"failed to get user profile\", \"user_id\", uid, \"error\", err)\n\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{Error: \"failed to get profile\"})\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, profile)\n}\n\n// ResendEmailVerification handles resending email verification\nfunc (h *AuthHandler) ResendEmailVerification(c *gin.Context) {\n\tuserID, exists := c.Get(\"user_id\")\n\tif !exists {\n\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tuid, ok := userID.(uint)\n\tif !ok {\n\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{Error: \"invalid user ID\"})\n\t\treturn\n\t}\n\n\tif err := h.authService.ResendEmailVerification(uid); err != nil {\n\t\th.logger.Error(\"failed to resend email verification\", \"user_id\", uid, \"error\", err)\n\t\tc.JSON(http.StatusBadRequest, domain.ErrorResponse{Error: err.Error()})\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, domain.MessageResponse{Message: \"verification email sent\"})\n}\n\n// CheckAuth handles checking authentication status\nfunc (h *AuthHandler) CheckAuth(c *gin.Context) {\n\tuserID, exists := c.Get(\"user_id\")\n\tif !exists {\n\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tuid, ok := userID.(uint)\n\tif !ok {\n\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{Error: \"invalid user ID\"})\n\t\treturn\n\t}\n\n\tprofile, err := h.authService.GetUserProfile(uid)\n\tif err != nil {\n\t\th.logger.Error(\"failed to get user profile\", \"user_id\", uid, \"error\", err)\n\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{Error: \"failed to get profile\"})\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, gin.H{\n\t\t\"authenticated\": true,\n\t\t\"user\":          profile,\n\t})\n}\n\n// Helper methods\n\nfunc (h *AuthHandler) setAuthCookies(c *gin.Context, accessToken, refreshToken string) {\n\t// Set access token cookie (shorter expiry)\n\tc.SetCookie(\n\t\t\"access_token\",\n\t\taccessToken,\n\t\tint(h.config.JWTAccessTokenDurationParsed().Seconds()),\n\t\t\"/\",\n\t\t\"\",\n\t\t!h.config.IsDevelopment(), // secure in production\n\t\ttrue,                      // httpOnly\n\t)\n\n\t// Set refresh token cookie (longer expiry)\n\tc.SetCookie(\n\t\t\"refresh_token\",\n\t\trefreshToken,\n\t\tint(h.config.JWTRefreshTokenDurationParsed().Seconds()),\n\t\t\"/\",\n\t\t\"\",\n\t\t!h.config.IsDevelopment(), // secure in production\n\t\ttrue,                      // httpOnly\n\t)\n}\n\nfunc (h *AuthHandler) clearAuthCookies(c *gin.Context) {\n\tc.SetCookie(\"access_token\", \"\", -1, \"/\", \"\", !h.config.IsDevelopment(), true)\n\tc.SetCookie(\"refresh_token\", \"\", -1, \"/\", \"\", !h.config.IsDevelopment(), true)\n}\n\nfunc (h *AuthHandler) handleValidationError(c *gin.Context, err error) {\n\th.logger.Warn(\"validation error\", \"error\", err)\n\tc.JSON(http.StatusBadRequest, domain.ErrorResponse{\n\t\tError: \"validation failed\",\n\t\tDetails: map[string]string{\n\t\t\t\"message\": err.Error(),\n\t\t},\n\t})\n}\n\nfunc (h *AuthHandler) handleAuthError(c *gin.Context, err error) {\n\tswitch err {\n\tcase domain.ErrInvalidCredentials:\n\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{Error: \"invalid credentials\"})\n\tcase domain.ErrUserAlreadyExists:\n\t\tc.JSON(http.StatusConflict, domain.ErrorResponse{Error: \"user already exists\"})\n\tcase domain.ErrEmailNotVerified:\n\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{Error: \"email not verified\"})\n\tcase domain.ErrUserInactive:\n\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{Error: \"user account is inactive\"})\n\tcase domain.ErrInvalidToken, domain.ErrTokenNotFound:\n\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{Error: \"invalid token\"})\n\tcase domain.ErrTokenExpired:\n\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{Error: \"token expired\"})\n\tcase domain.ErrTokenAlreadyUsed:\n\t\tc.JSON(http.StatusBadRequest, domain.ErrorResponse{Error: \"token already used\"})\n\tcase domain.ErrPasswordsDoNotMatch:\n\t\tc.JSON(http.StatusBadRequest, domain.ErrorResponse{Error: \"passwords do not match\"})\n\tcase domain.ErrWeakPassword:\n\t\tc.JSON(http.StatusBadRequest, domain.ErrorResponse{Error: \"password is too weak\"})\n\tcase domain.ErrUnauthorized:\n\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{Error: \"unauthorized\"})\n\tcase domain.ErrForbidden:\n\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{Error: \"forbidden\"})\n\tdefault:\n\t\tif strings.Contains(err.Error(), \"too many\") {\n\t\t\tc.JSON(http.StatusTooManyRequests, domain.ErrorResponse{Error: err.Error()})\n\t\t} else {\n\t\t\th.logger.Error(\"auth service error\", \"error\", err)\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{Error: \"internal server error\"})\n\t\t}\n\t}\n}\n\n// RegisterRoutes registers all authentication routes\nfunc (h *AuthHandler) RegisterRoutes(router *gin.RouterGroup) {\n\tauth := router.Group(\"/auth\")\n\t{\n\t\tauth.POST(\"/register\", h.Register)\n\t\tauth.POST(\"/login\", h.Login)\n\t\tauth.POST(\"/refresh\", h.RefreshToken)\n\t\tauth.POST(\"/logout\", h.Logout)\n\t\tauth.POST(\"/verify-email\", h.VerifyEmail)\n\t\tauth.POST(\"/forgot-password\", h.ForgotPassword)\n\t\tauth.POST(\"/reset-password\", h.ResetPassword)\n\t\tauth.GET(\"/check\", h.CheckAuth) // This will require auth middleware\n\t}\n\n\t// Protected routes (require authentication middleware)\n\tprotected := router.Group(\"/auth\")\n\t{\n\t\tprotected.POST(\"/logout-all\", h.LogoutAll)\n\t\tprotected.POST(\"/change-password\", h.ChangePassword)\n\t\tprotected.GET(\"/profile\", h.GetProfile)\n\t\tprotected.POST(\"/resend-verification\", h.ResendEmailVerification)\n\t}\n}",
      "size": 11827,
      "hash": "9c69ee74229df7a65e33612dc01e62661612bcbc780a2fc90807cc04db7896d9",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/health/domain/types.go",
      "template": true,
      "content": "package domain\n\nimport \"time\"\n\ntype HealthStatus struct {\n\tStatus    string                 `json:\"status\"`\n\tTimestamp time.Time              `json:\"timestamp\"`\n\tVersion   string                 `json:\"version\"`\n\tServices  map[string]interface{} `json:\"services\"`\n}",
      "size": 265,
      "hash": "3a451f787ded27773bee527296a9e5f51a3251666b871ab963d789167ff2804b",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/health/service/health.go",
      "template": true,
      "content": "package service\n\nimport (\n\t\"log/slog\"\n\t\"time\"\n\n\t\"github.com/acheevo/fullstack-template/internal/health/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/database\"\n)\n\ntype HealthService struct {\n\tconfig *config.Config\n\tdb     *database.DB\n\tlogger *slog.Logger\n}\n\nfunc NewHealthService(config *config.Config, db *database.DB, logger *slog.Logger) *HealthService {\n\treturn \u0026HealthService{\n\t\tconfig: config,\n\t\tdb:     db,\n\t\tlogger: logger,\n\t}\n}\n\nfunc (s *HealthService) GetHealth() *domain.HealthStatus {\n\tservices := make(map[string]interface{})\n\n\tdbStatus := \"healthy\"\n\tif err := s.db.Ping(); err != nil {\n\t\tdbStatus = \"unhealthy\"\n\t\ts.logger.Error(\"database health check failed\", \"error\", err)\n\t}\n\tservices[\"database\"] = map[string]string{\"status\": dbStatus}\n\n\toverallStatus := \"healthy\"\n\tif dbStatus != \"healthy\" {\n\t\toverallStatus = \"unhealthy\"\n\t}\n\n\treturn \u0026domain.HealthStatus{\n\t\tStatus:    overallStatus,\n\t\tTimestamp: time.Now().UTC(),\n\t\tVersion:   \"1.0.0\",\n\t\tServices:  services,\n\t}\n}",
      "size": 1064,
      "hash": "1ed877520c8e1eeb5545d0b37a19d1adbbfadcedc8ff5524a6f0d3bfdd88bb43",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/health/transport/http.go",
      "template": true,
      "content": "package transport\n\nimport (\n\t\"net/http\"\n\n\t\"github.com/acheevo/fullstack-template/internal/health/service\"\n\t\"github.com/gin-gonic/gin\"\n)\n\ntype HealthHandler struct {\n\tservice *service.HealthService\n}\n\nfunc NewHealthHandler(service *service.HealthService) *HealthHandler {\n\treturn \u0026HealthHandler{\n\t\tservice: service,\n\t}\n}\n\nfunc (h *HealthHandler) GetHealth(c *gin.Context) {\n\thealth := h.service.GetHealth()\n\t\n\tstatusCode := http.StatusOK\n\tif health.Status != \"healthy\" {\n\t\tstatusCode = http.StatusServiceUnavailable\n\t}\n\t\n\tc.JSON(statusCode, health)\n}",
      "size": 549,
      "hash": "fa2f34a503a699f118dd9357584a5641f8d4ee30e28a991da88f8881e8494f7d",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/http/server.go",
      "template": true,
      "content": "package http\n\nimport (\n\t\"context\"\n\t\"log/slog\"\n\t\"net/http\"\n\t\"path/filepath\"\n\n\tadmintransport \"github.com/acheevo/fullstack-template/internal/admin/transport\"\n\tauthtransport \"github.com/acheevo/fullstack-template/internal/auth/transport\"\n\thealthtransport \"github.com/acheevo/fullstack-template/internal/health/transport\"\n\tinfotransport \"github.com/acheevo/fullstack-template/internal/info/transport\"\n\t\"github.com/acheevo/fullstack-template/internal/middleware\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\tusertransport \"github.com/acheevo/fullstack-template/internal/user/transport\"\n\t\"github.com/gin-gonic/gin\"\n)\n\ntype Server struct {\n\tconfig         *config.Config\n\tlogger         *slog.Logger\n\thealthHandler  *healthtransport.HealthHandler\n\tinfoHandler    *infotransport.InfoHandler\n\tauthHandler    *authtransport.AuthHandler\n\tuserHandler    *usertransport.UserHandler\n\tadminHandler   *admintransport.AdminHandler\n\tauthMiddleware *middleware.AuthMiddleware\n\trbacMiddleware *middleware.RBACMiddleware\n\trateLimiter    *middleware.RateLimiter\n\trouter         *gin.Engine\n\tserver         *http.Server\n}\n\nfunc NewServer(\n\tconfig *config.Config,\n\tlogger *slog.Logger,\n\thealthHandler *healthtransport.HealthHandler,\n\tinfoHandler *infotransport.InfoHandler,\n\tauthHandler *authtransport.AuthHandler,\n\tuserHandler *usertransport.UserHandler,\n\tadminHandler *admintransport.AdminHandler,\n\tauthMiddleware *middleware.AuthMiddleware,\n\trbacMiddleware *middleware.RBACMiddleware,\n\trateLimiter *middleware.RateLimiter,\n) *Server {\n\tif !config.IsDevelopment() {\n\t\tgin.SetMode(gin.ReleaseMode)\n\t}\n\n\trouter := gin.New()\n\t\n\ts := \u0026Server{\n\t\tconfig:         config,\n\t\tlogger:         logger,\n\t\thealthHandler:  healthHandler,\n\t\tinfoHandler:    infoHandler,\n\t\tauthHandler:    authHandler,\n\t\tuserHandler:    userHandler,\n\t\tadminHandler:   adminHandler,\n\t\tauthMiddleware: authMiddleware,\n\t\trbacMiddleware: rbacMiddleware,\n\t\trateLimiter:    rateLimiter,\n\t\trouter:         router,\n\t}\n\n\ts.setupMiddleware()\n\ts.setupRoutes()\n\n\ts.server = \u0026http.Server{\n\t\tAddr:    \":\" + config.Port,\n\t\tHandler: router,\n\t}\n\n\treturn s\n}\n\nfunc (s *Server) setupMiddleware() {\n\ts.router.Use(middleware.Logger(s.logger))\n\ts.router.Use(middleware.Recovery(s.logger))\n\ts.router.Use(middleware.CORS())\n}\n\nfunc (s *Server) setupRoutes() {\n\tapi := s.router.Group(\"/api\")\n\t{\n\t\t// Health and info endpoints\n\t\tapi.GET(\"/health\", s.healthHandler.GetHealth)\n\t\tapi.GET(\"/info\", s.infoHandler.GetInfo)\n\t\t\n\t\t// Authentication routes with rate limiting\n\t\tauthGroup := api.Group(\"/auth\")\n\t\tauthGroup.Use(s.rateLimiter.AuthRateLimit())\n\t\t\n\t\t// Login with specific rate limiting\n\t\tauthGroup.POST(\"/login\", s.authHandler.Login)\n\t\t\n\t\t// Other auth routes\n\t\tauthGroup.POST(\"/register\", s.authHandler.Register)\n\t\tauthGroup.POST(\"/refresh\", s.authHandler.RefreshToken)\n\t\tauthGroup.POST(\"/logout\", s.authHandler.Logout)\n\t\tauthGroup.POST(\"/verify-email\", s.authHandler.VerifyEmail)\n\t\tauthGroup.POST(\"/forgot-password\", s.authHandler.ForgotPassword)\n\t\tauthGroup.POST(\"/reset-password\", s.authHandler.ResetPassword)\n\t\t\n\t\t// Protected auth routes\n\t\tprotectedAuth := authGroup.Group(\"/\")\n\t\tprotectedAuth.Use(s.authMiddleware.RequireAuth())\n\t\t{\n\t\t\tprotectedAuth.GET(\"/check\", s.authHandler.CheckAuth)\n\t\t\tprotectedAuth.POST(\"/logout-all\", s.authHandler.LogoutAll)\n\t\t\tprotectedAuth.POST(\"/change-password\", s.authHandler.ChangePassword)\n\t\t\tprotectedAuth.GET(\"/profile\", s.authHandler.GetProfile)\n\t\t\tprotectedAuth.POST(\"/resend-verification\", s.authHandler.ResendEmailVerification)\n\t\t}\n\n\t\t// User management routes (require authentication, active user, and profile permissions)\n\t\tuserGroup := api.Group(\"/user\")\n\t\tuserGroup.Use(s.authMiddleware.RequireAuth(), s.authMiddleware.RequireActiveUser())\n\t\t{\n\t\t\tuserGroup.GET(\"/profile\", s.rbacMiddleware.RequirePermission(\"profile:read\"), s.userHandler.GetProfile)\n\t\t\tuserGroup.PUT(\"/profile\", s.rbacMiddleware.RequirePermission(\"profile:update\"), s.userHandler.UpdateProfile)\n\t\t\tuserGroup.GET(\"/preferences\", s.rbacMiddleware.RequirePermission(\"profile:read\"), s.userHandler.GetPreferences)\n\t\t\tuserGroup.PUT(\"/preferences\", s.rbacMiddleware.RequirePermission(\"profile:update\"), s.userHandler.UpdatePreferences)\n\t\t\tuserGroup.POST(\"/change-email\", s.rbacMiddleware.RequirePermission(\"profile:update\"), s.userHandler.ChangeEmail)\n\t\t\tuserGroup.GET(\"/dashboard\", s.rbacMiddleware.RequirePermission(\"profile:read\"), s.userHandler.GetDashboard)\n\t\t}\n\n\t\t// Admin routes (require authentication, active status, and specific permissions)\n\t\tadminGroup := api.Group(\"/admin\")\n\t\tadminGroup.Use(s.authMiddleware.RequireAuth(), s.authMiddleware.RequireActiveUser(), s.rbacMiddleware.RequireAdminAccess())\n\t\t{\n\t\t\t// User management (require user management permissions)\n\t\t\tadminGroup.GET(\"/users\", s.rbacMiddleware.RequireUserRead(), s.adminHandler.ListUsers)\n\t\t\tadminGroup.GET(\"/users/:id\", s.rbacMiddleware.RequireUserRead(), s.adminHandler.GetUserDetails)\n\t\t\tadminGroup.PUT(\"/users/:id\", s.rbacMiddleware.RequireUserManagement(), s.adminHandler.UpdateUser)\n\t\t\tadminGroup.PUT(\"/users/:id/role\", s.rbacMiddleware.RequireUserManagement(), s.adminHandler.UpdateUserRole)\n\t\t\tadminGroup.PUT(\"/users/:id/status\", s.rbacMiddleware.RequireUserManagement(), s.adminHandler.UpdateUserStatus)\n\t\t\tadminGroup.DELETE(\"/users\", s.rbacMiddleware.RequirePermission(\"user:delete\"), s.adminHandler.DeleteUsers)\n\t\t\tadminGroup.POST(\"/users/bulk\", s.rbacMiddleware.RequireUserManagement(), s.adminHandler.BulkUpdateUsers)\n\n\t\t\t// Admin dashboard and monitoring\n\t\t\tadminGroup.GET(\"/stats\", s.rbacMiddleware.RequirePermission(\"admin:read\"), s.adminHandler.GetStats)\n\t\t\tadminGroup.GET(\"/audit-logs\", s.rbacMiddleware.RequireAuditAccess(), s.adminHandler.GetAuditLogs)\n\t\t}\n\t}\n\n\ts.setupStaticRoutes()\n}\n\nfunc (s *Server) setupStaticRoutes() {\n\tfrontendPath := \"./frontend/dist\"\n\t\n\ts.router.Static(\"/assets\", filepath.Join(frontendPath, \"assets\"))\n\t\n\ts.router.StaticFile(\"/favicon.ico\", filepath.Join(frontendPath, \"favicon.ico\"))\n\t\n\ts.router.NoRoute(func(c *gin.Context) {\n\t\tindexPath := filepath.Join(frontendPath, \"index.html\")\n\t\tc.File(indexPath)\n\t})\n}\n\nfunc (s *Server) Start() error {\n\ts.logger.Info(\"starting server\", \"port\", s.config.Port)\n\treturn s.server.ListenAndServe()\n}\n\nfunc (s *Server) Stop(ctx context.Context) error {\n\ts.logger.Info(\"stopping server\")\n\treturn s.server.Shutdown(ctx)\n}",
      "size": 6338,
      "hash": "47da7ce53867ba97a3722f901a4c77dab2b60de1880683fb8ca6310be373f22f",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/info/domain/types.go",
      "template": true,
      "content": "package domain\n\ntype Info struct {\n\tName        string `json:\"name\"`\n\tVersion     string `json:\"version\"`\n\tEnvironment string `json:\"environment\"`\n\tBuildTime   string `json:\"build_time\"`\n}",
      "size": 188,
      "hash": "2a0446091d779978edf6e33df204fa08356314da5976b5f06f244e7c59826707",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/info/service/info.go",
      "template": true,
      "content": "package service\n\nimport (\n\t\"log/slog\"\n\t\"time\"\n\n\t\"github.com/acheevo/fullstack-template/internal/info/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/database\"\n)\n\ntype InfoService struct {\n\tconfig *config.Config\n\tdb     *database.DB\n\tlogger *slog.Logger\n}\n\nfunc NewInfoService(config *config.Config, db *database.DB, logger *slog.Logger) *InfoService {\n\treturn \u0026InfoService{\n\t\tconfig: config,\n\t\tdb:     db,\n\t\tlogger: logger,\n\t}\n}\n\nfunc (s *InfoService) GetInfo() *domain.Info {\n\treturn \u0026domain.Info{\n\t\tName:        \"Fullstack Template API\",\n\t\tVersion:     \"1.0.0\",\n\t\tEnvironment: s.config.Environment,\n\t\tBuildTime:   time.Now().UTC().Format(time.RFC3339),\n\t}\n}",
      "size": 739,
      "hash": "4b11f0bf160d8809c4aa49fdd48b342242a0cad0368fdedeef097d0cd2e363e5",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/info/transport/http.go",
      "template": true,
      "content": "package transport\n\nimport (\n\t\"net/http\"\n\n\t\"github.com/acheevo/fullstack-template/internal/info/service\"\n\t\"github.com/gin-gonic/gin\"\n)\n\ntype InfoHandler struct {\n\tservice *service.InfoService\n}\n\nfunc NewInfoHandler(service *service.InfoService) *InfoHandler {\n\treturn \u0026InfoHandler{\n\t\tservice: service,\n\t}\n}\n\nfunc (h *InfoHandler) GetInfo(c *gin.Context) {\n\tinfo := h.service.GetInfo()\n\tc.JSON(http.StatusOK, info)\n}",
      "size": 414,
      "hash": "0499650be48780023e84952c6e93c3535a8b1607c36270365e49fbe0b2909d6c",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/middleware/auth.go",
      "template": true,
      "content": "package middleware\n\nimport (\n\t\"log/slog\"\n\t\"net/http\"\n\t\"strings\"\n\n\t\"github.com/gin-gonic/gin\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/auth/service\"\n)\n\n// AuthMiddleware provides authentication middleware\ntype AuthMiddleware struct {\n\tlogger      *slog.Logger\n\tauthService *service.AuthService\n}\n\n// NewAuthMiddleware creates a new authentication middleware\nfunc NewAuthMiddleware(logger *slog.Logger, authService *service.AuthService) *AuthMiddleware {\n\treturn \u0026AuthMiddleware{\n\t\tlogger:      logger,\n\t\tauthService: authService,\n\t}\n}\n\n// RequireAuth middleware that requires valid authentication\nfunc (m *AuthMiddleware) RequireAuth() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\ttoken := m.extractToken(c)\n\t\tif token == \"\" {\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tclaims, err := m.authService.ValidateAccessToken(token)\n\t\tif err != nil {\n\t\t\tm.logger.Warn(\"invalid access token\", \"error\", err)\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"invalid or expired token\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Set user information in context\n\t\tc.Set(\"user_id\", claims.UserID)\n\t\tc.Set(\"user_email\", claims.Email)\n\t\tc.Set(\"user_role\", claims.Role)\n\t\tc.Set(\"token_type\", claims.TokenType)\n\t\tc.Set(\"jwt_claims\", claims)\n\n\t\tc.Next()\n\t}\n}\n\n// OptionalAuth middleware that optionally authenticates if token is present\nfunc (m *AuthMiddleware) OptionalAuth() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\ttoken := m.extractToken(c)\n\t\tif token == \"\" {\n\t\t\tc.Next()\n\t\t\treturn\n\t\t}\n\n\t\tclaims, err := m.authService.ValidateAccessToken(token)\n\t\tif err != nil {\n\t\t\t// Don't abort for optional auth, just continue without user context\n\t\t\tm.logger.Debug(\"invalid access token in optional auth\", \"error\", err)\n\t\t\tc.Next()\n\t\t\treturn\n\t\t}\n\n\t\t// Set user information in context\n\t\tc.Set(\"user_id\", claims.UserID)\n\t\tc.Set(\"user_email\", claims.Email)\n\t\tc.Set(\"user_role\", claims.Role)\n\t\tc.Set(\"token_type\", claims.TokenType)\n\t\tc.Set(\"jwt_claims\", claims)\n\n\t\tc.Next()\n\t}\n}\n\n// RequireEmailVerified middleware that requires email to be verified\nfunc (m *AuthMiddleware) RequireEmailVerified() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserID, exists := c.Get(\"user_id\")\n\t\tif !exists {\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tuid, ok := userID.(uint)\n\t\tif !ok {\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{\n\t\t\t\tError: \"invalid user ID\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Get user profile to check email verification status\n\t\tprofile, err := m.authService.GetUserProfile(uid)\n\t\tif err != nil {\n\t\t\tm.logger.Error(\"failed to get user profile for email verification check\", \"user_id\", uid, \"error\", err)\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{\n\t\t\t\tError: \"failed to verify user status\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tif !profile.EmailVerified {\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"email verification required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// RequireActiveUser middleware that requires user to be active\nfunc (m *AuthMiddleware) RequireActiveUser() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserID, exists := c.Get(\"user_id\")\n\t\tif !exists {\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tuid, ok := userID.(uint)\n\t\tif !ok {\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{\n\t\t\t\tError: \"invalid user ID\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Get user profile to check active status\n\t\tprofile, err := m.authService.GetUserProfile(uid)\n\t\tif err != nil {\n\t\t\tm.logger.Error(\"failed to get user profile for active check\", \"user_id\", uid, \"error\", err)\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{\n\t\t\t\tError: \"failed to verify user status\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tif profile.Status != domain.StatusActive {\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"user account is inactive\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// extractToken extracts the token from the request\n// Checks in order: Authorization header, access_token cookie\nfunc (m *AuthMiddleware) extractToken(c *gin.Context) string {\n\t// Check Authorization header first\n\tauthHeader := c.GetHeader(\"Authorization\")\n\tif authHeader != \"\" {\n\t\t// Bearer token format: \"Bearer \u003ctoken\u003e\"\n\t\tif strings.HasPrefix(authHeader, \"Bearer \") {\n\t\t\treturn strings.TrimPrefix(authHeader, \"Bearer \")\n\t\t}\n\t}\n\n\t// Check access_token cookie\n\ttoken, err := c.Cookie(\"access_token\")\n\tif err == nil \u0026\u0026 token != \"\" {\n\t\treturn token\n\t}\n\n\treturn \"\"\n}\n\n// RequireRole middleware that requires a specific role\nfunc (m *AuthMiddleware) RequireRole(role domain.UserRole) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserID, exists := c.Get(\"user_id\")\n\t\tif !exists {\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tuid, ok := userID.(uint)\n\t\tif !ok {\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{\n\t\t\t\tError: \"invalid user ID\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Get user profile to check role\n\t\tprofile, err := m.authService.GetUserProfile(uid)\n\t\tif err != nil {\n\t\t\tm.logger.Error(\"failed to get user profile for role check\", \"user_id\", uid, \"error\", err)\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{\n\t\t\t\tError: \"failed to verify user role\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tif profile.Role != role {\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"insufficient permissions\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Set user profile in context for convenience\n\t\tc.Set(\"user_profile\", profile)\n\n\t\tc.Next()\n\t}\n}\n\n// RequireAdmin middleware that requires admin role\nfunc (m *AuthMiddleware) RequireAdmin() gin.HandlerFunc {\n\treturn m.RequireRole(domain.RoleAdmin)\n}\n\n// RequireUserRole middleware that requires user role or higher\nfunc (m *AuthMiddleware) RequireUserRole() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserID, exists := c.Get(\"user_id\")\n\t\tif !exists {\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tuid, ok := userID.(uint)\n\t\tif !ok {\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{\n\t\t\t\tError: \"invalid user ID\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Get user profile to check role\n\t\tprofile, err := m.authService.GetUserProfile(uid)\n\t\tif err != nil {\n\t\t\tm.logger.Error(\"failed to get user profile for role check\", \"user_id\", uid, \"error\", err)\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{\n\t\t\t\tError: \"failed to verify user role\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Check if user has valid role (user or admin)\n\t\tif profile.Role != domain.RoleUser \u0026\u0026 profile.Role != domain.RoleAdmin {\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"insufficient permissions\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Set user profile in context for convenience\n\t\tc.Set(\"user_profile\", profile)\n\n\t\tc.Next()\n\t}\n}\n\n// RequireActiveUserWithRole combines active user check with role validation\nfunc (m *AuthMiddleware) RequireActiveUserWithRole(role domain.UserRole) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserID, exists := c.Get(\"user_id\")\n\t\tif !exists {\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tuid, ok := userID.(uint)\n\t\tif !ok {\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{\n\t\t\t\tError: \"invalid user ID\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Get user profile to check status and role\n\t\tprofile, err := m.authService.GetUserProfile(uid)\n\t\tif err != nil {\n\t\t\tm.logger.Error(\"failed to get user profile for active role check\", \"user_id\", uid, \"error\", err)\n\t\t\tc.JSON(http.StatusInternalServerError, domain.ErrorResponse{\n\t\t\t\tError: \"failed to verify user status\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Check if user is active\n\t\tif profile.Status != domain.StatusActive {\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"user account is inactive\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Check role\n\t\tif profile.Role != role {\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"insufficient permissions\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Set user profile in context for convenience\n\t\tc.Set(\"user_profile\", profile)\n\n\t\tc.Next()\n\t}\n}\n\n// RequireActiveAdmin combines active user and admin role checks\nfunc (m *AuthMiddleware) RequireActiveAdmin() gin.HandlerFunc {\n\treturn m.RequireActiveUserWithRole(domain.RoleAdmin)\n}\n\n// Helper functions\n\n// GetCurrentUserID is a helper function to get the current user ID from context\nfunc GetCurrentUserID(c *gin.Context) (uint, bool) {\n\tuserID, exists := c.Get(\"user_id\")\n\tif !exists {\n\t\treturn 0, false\n\t}\n\n\tuid, ok := userID.(uint)\n\treturn uid, ok\n}\n\n// GetCurrentUserEmail is a helper function to get the current user email from context\nfunc GetCurrentUserEmail(c *gin.Context) (string, bool) {\n\temail, exists := c.Get(\"user_email\")\n\tif !exists {\n\t\treturn \"\", false\n\t}\n\n\tuserEmail, ok := email.(string)\n\treturn userEmail, ok\n}\n\n// GetCurrentUserProfile is a helper function to get the current user profile from context\nfunc GetCurrentUserProfile(c *gin.Context) (*domain.UserResponse, bool) {\n\tprofile, exists := c.Get(\"user_profile\")\n\tif !exists {\n\t\treturn nil, false\n\t}\n\n\tuserProfile, ok := profile.(*domain.UserResponse)\n\treturn userProfile, ok\n}\n\n// IsAuthenticated checks if the current request is authenticated\nfunc IsAuthenticated(c *gin.Context) bool {\n\t_, exists := c.Get(\"user_id\")\n\treturn exists\n}\n\n// IsAdmin checks if the current user has admin role\nfunc IsAdmin(c *gin.Context) bool {\n\tprofile, exists := GetCurrentUserProfile(c)\n\tif !exists {\n\t\treturn false\n\t}\n\treturn profile.Role == domain.RoleAdmin\n}\n\n// IsActiveUser checks if the current user is active\nfunc IsActiveUser(c *gin.Context) bool {\n\tprofile, exists := GetCurrentUserProfile(c)\n\tif !exists {\n\t\treturn false\n\t}\n\treturn profile.Status == domain.StatusActive\n}",
      "size": 10290,
      "hash": "836dc31d877dd6d419563abe9dcbbb98b67027bd9950643ddc9b34e6c4790834",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/middleware/cors.go",
      "template": true,
      "content": "package middleware\n\nimport (\n\t\"net/http\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc CORS() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\torigin := c.Request.Header.Get(\"Origin\")\n\t\tc.Header(\"Access-Control-Allow-Origin\", origin)\n\t\tc.Header(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, OPTIONS\")\n\t\tc.Header(\"Access-Control-Allow-Headers\", \"Origin, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization\")\n\t\tc.Header(\"Access-Control-Expose-Headers\", \"Content-Length\")\n\t\tc.Header(\"Access-Control-Allow-Credentials\", \"true\")\n\n\t\tif c.Request.Method == \"OPTIONS\" {\n\t\t\tc.AbortWithStatus(http.StatusNoContent)\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}",
      "size": 662,
      "hash": "e11b0a321f0dede93d3e1d525b02a050baf6e7ed5df9bc3c4e846e88f0b0650d",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/middleware/logger.go",
      "template": true,
      "content": "package middleware\n\nimport (\n\t\"log/slog\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc Logger(logger *slog.Logger) gin.HandlerFunc {\n\treturn gin.LoggerWithFormatter(func(param gin.LogFormatterParams) string {\n\t\tlogger.Info(\"HTTP request\",\n\t\t\t\"method\", param.Method,\n\t\t\t\"path\", param.Path,\n\t\t\t\"status\", param.StatusCode,\n\t\t\t\"latency\", param.Latency,\n\t\t\t\"client_ip\", param.ClientIP,\n\t\t\t\"user_agent\", param.Request.UserAgent(),\n\t\t)\n\t\treturn \"\"\n\t})\n}",
      "size": 437,
      "hash": "7d07786c83816612555ae0125b317eb09350d76fbe9e07f5de2c8e03262c1349",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/middleware/rate_limit.go",
      "template": true,
      "content": "package middleware\n\nimport (\n\t\"fmt\"\n\t\"log/slog\"\n\t\"net/http\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n)\n\n// RateLimiter implements a simple in-memory rate limiter\ntype RateLimiter struct {\n\tlogger   *slog.Logger\n\tvisitors map[string]*visitor\n\tmu       sync.RWMutex\n\trate     int           // requests per window\n\twindow   time.Duration // time window\n\tcleanupInterval time.Duration // cleanup interval\n}\n\ntype visitor struct {\n\tcount      int\n\tlastSeen   time.Time\n\tresetTime  time.Time\n}\n\n// NewRateLimiter creates a new rate limiter\nfunc NewRateLimiter(logger *slog.Logger, rate int, window time.Duration) *RateLimiter {\n\trl := \u0026RateLimiter{\n\t\tlogger:          logger,\n\t\tvisitors:        make(map[string]*visitor),\n\t\trate:            rate,\n\t\twindow:          window,\n\t\tcleanupInterval: time.Minute * 5, // cleanup every 5 minutes\n\t}\n\n\t// Start cleanup goroutine\n\tgo rl.cleanupRoutine()\n\n\treturn rl\n}\n\n// AuthRateLimit creates a rate limiter middleware for authentication endpoints\nfunc (rl *RateLimiter) AuthRateLimit() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tkey := rl.getKey(c)\n\t\t\n\t\tif !rl.allow(key) {\n\t\t\trl.logger.Warn(\"rate limit exceeded\", \"ip\", c.ClientIP(), \"key\", key)\n\t\t\tc.JSON(http.StatusTooManyRequests, domain.ErrorResponse{\n\t\t\t\tError: \"too many requests, please try again later\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// LoginRateLimit creates a specific rate limiter for login attempts\nfunc (rl *RateLimiter) LoginRateLimit() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\t// Apply IP-based rate limiting for login attempts\n\t\t// We don't parse the JSON here to avoid consuming the request body\n\t\tipKey := fmt.Sprintf(\"login:%s\", c.ClientIP())\n\t\tif !rl.allow(ipKey) {\n\t\t\trl.logger.Warn(\"login rate limit exceeded by IP\", \"ip\", c.ClientIP())\n\t\t\tc.JSON(http.StatusTooManyRequests, domain.ErrorResponse{\n\t\t\t\tError: \"too many login attempts, please try again later\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// PasswordResetRateLimit creates a rate limiter for password reset requests\nfunc (rl *RateLimiter) PasswordResetRateLimit() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\t// Apply IP-based rate limiting for password reset requests\n\t\t// We don't parse the JSON here to avoid consuming the request body\n\t\tipKey := fmt.Sprintf(\"password_reset:%s\", c.ClientIP())\n\t\tif !rl.allow(ipKey) {\n\t\t\trl.logger.Warn(\"password reset rate limit exceeded by IP\", \"ip\", c.ClientIP())\n\t\t\tc.JSON(http.StatusTooManyRequests, domain.ErrorResponse{\n\t\t\t\tError: \"too many password reset requests, please try again later\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// allow checks if a request is allowed based on the rate limit\nfunc (rl *RateLimiter) allow(key string) bool {\n\trl.mu.Lock()\n\tdefer rl.mu.Unlock()\n\n\tv, exists := rl.visitors[key]\n\tnow := time.Now()\n\n\tif !exists {\n\t\trl.visitors[key] = \u0026visitor{\n\t\t\tcount:     1,\n\t\t\tlastSeen:  now,\n\t\t\tresetTime: now.Add(rl.window),\n\t\t}\n\t\treturn true\n\t}\n\n\t// Reset count if window has passed\n\tif now.After(v.resetTime) {\n\t\tv.count = 1\n\t\tv.resetTime = now.Add(rl.window)\n\t\tv.lastSeen = now\n\t\treturn true\n\t}\n\n\t// Check if rate limit exceeded\n\tif v.count \u003e= rl.rate {\n\t\tv.lastSeen = now\n\t\treturn false\n\t}\n\n\t// Increment count and allow\n\tv.count++\n\tv.lastSeen = now\n\treturn true\n}\n\n// getKey generates a key for the rate limiter based on IP\nfunc (rl *RateLimiter) getKey(c *gin.Context) string {\n\treturn fmt.Sprintf(\"auth:%s\", c.ClientIP())\n}\n\n// cleanupRoutine removes old entries from the visitors map\nfunc (rl *RateLimiter) cleanupRoutine() {\n\tticker := time.NewTicker(rl.cleanupInterval)\n\tdefer ticker.Stop()\n\n\tfor {\n\t\tselect {\n\t\tcase \u003c-ticker.C:\n\t\t\trl.cleanupExpiredEntries()\n\t\t}\n\t}\n}\n\n// cleanupExpiredEntries removes expired entries from the visitors map\nfunc (rl *RateLimiter) cleanupExpiredEntries() {\n\trl.mu.Lock()\n\tdefer rl.mu.Unlock()\n\n\tnow := time.Now()\n\tcutoff := now.Add(-rl.window * 2) // Keep entries for 2 windows\n\n\tfor key, v := range rl.visitors {\n\t\tif v.lastSeen.Before(cutoff) {\n\t\t\tdelete(rl.visitors, key)\n\t\t}\n\t}\n}\n\n// GetRemainingRequests returns the number of remaining requests for a key\nfunc (rl *RateLimiter) GetRemainingRequests(key string) int {\n\trl.mu.RLock()\n\tdefer rl.mu.RUnlock()\n\n\tv, exists := rl.visitors[key]\n\tif !exists {\n\t\treturn rl.rate\n\t}\n\n\t// If window has passed, return full rate\n\tif time.Now().After(v.resetTime) {\n\t\treturn rl.rate\n\t}\n\n\tremaining := rl.rate - v.count\n\tif remaining \u003c 0 {\n\t\treturn 0\n\t}\n\treturn remaining\n}\n\n// GetResetTime returns when the rate limit will reset for a key\nfunc (rl *RateLimiter) GetResetTime(key string) time.Time {\n\trl.mu.RLock()\n\tdefer rl.mu.RUnlock()\n\n\tv, exists := rl.visitors[key]\n\tif !exists {\n\t\treturn time.Now()\n\t}\n\n\treturn v.resetTime\n}",
      "size": 4776,
      "hash": "33adf61f5e5374c2e70f306fb7a0be1aad34a5354a237dba27f0520e37dc1481",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/middleware/rbac.go",
      "template": true,
      "content": "package middleware\n\nimport (\n\t\"log/slog\"\n\t\"net/http\"\n\t\"strconv\"\n\n\t\"github.com/gin-gonic/gin\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/auth/service\"\n)\n\n// RBACMiddleware provides role-based access control middleware\ntype RBACMiddleware struct {\n\tlogger      *slog.Logger\n\tauthService *service.AuthService\n}\n\n// NewRBACMiddleware creates a new RBAC middleware\nfunc NewRBACMiddleware(logger *slog.Logger, authService *service.AuthService) *RBACMiddleware {\n\treturn \u0026RBACMiddleware{\n\t\tlogger:      logger,\n\t\tauthService: authService,\n\t}\n}\n\n// RequirePermission middleware that requires a specific permission\nfunc (m *RBACMiddleware) RequirePermission(permission domain.Permission) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\t// Get user role from context (set by auth middleware)\n\t\tuserRole, exists := m.getUserRole(c)\n\t\tif !exists {\n\t\t\tm.logger.Warn(\"permission check failed: no user role in context\", \"permission\", permission)\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Check permission\n\t\tif !domain.HasPermission(userRole, permission) {\n\t\t\tuserID, _ := c.Get(\"user_id\")\n\t\t\tm.logger.Warn(\"permission denied\",\n\t\t\t\t\"user_id\", userID,\n\t\t\t\t\"user_role\", userRole,\n\t\t\t\t\"required_permission\", permission,\n\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t)\n\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"insufficient permissions\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// RequireAnyPermission middleware that requires any of the specified permissions\nfunc (m *RBACMiddleware) RequireAnyPermission(permissions []domain.Permission) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserRole, exists := m.getUserRole(c)\n\t\tif !exists {\n\t\t\tm.logger.Warn(\"permission check failed: no user role in context\", \"permissions\", permissions)\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tif !domain.HasAnyPermission(userRole, permissions) {\n\t\t\tuserID, _ := c.Get(\"user_id\")\n\t\t\tm.logger.Warn(\"permission denied\",\n\t\t\t\t\"user_id\", userID,\n\t\t\t\t\"user_role\", userRole,\n\t\t\t\t\"required_permissions\", permissions,\n\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t)\n\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"insufficient permissions\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// RequireAllPermissions middleware that requires all of the specified permissions\nfunc (m *RBACMiddleware) RequireAllPermissions(permissions []domain.Permission) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserRole, exists := m.getUserRole(c)\n\t\tif !exists {\n\t\t\tm.logger.Warn(\"permission check failed: no user role in context\", \"permissions\", permissions)\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tif !domain.HasAllPermissions(userRole, permissions) {\n\t\t\tuserID, _ := c.Get(\"user_id\")\n\t\t\tm.logger.Warn(\"permission denied\",\n\t\t\t\t\"user_id\", userID,\n\t\t\t\t\"user_role\", userRole,\n\t\t\t\t\"required_permissions\", permissions,\n\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t)\n\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"insufficient permissions\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// RequireResourceAccess middleware that requires access to a specific resource with an action\nfunc (m *RBACMiddleware) RequireResourceAccess(resource domain.Resource, action domain.Action) gin.HandlerFunc {\n\tpermission := domain.BuildPermission(resource, action)\n\treturn m.RequirePermission(permission)\n}\n\n// RequireUserManagement middleware for user management operations\nfunc (m *RBACMiddleware) RequireUserManagement() gin.HandlerFunc {\n\treturn m.RequirePermission(domain.PermissionUserManage)\n}\n\n// RequireAdminAccess middleware for admin-only operations\nfunc (m *RBACMiddleware) RequireAdminAccess() gin.HandlerFunc {\n\treturn m.RequireRole(domain.RoleAdmin)\n}\n\n// RequireRole middleware that requires a specific role (enhanced version)\nfunc (m *RBACMiddleware) RequireRole(role domain.UserRole) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserRole, exists := m.getUserRole(c)\n\t\tif !exists {\n\t\t\tm.logger.Warn(\"role check failed: no user role in context\", \"required_role\", role)\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tif userRole != role {\n\t\t\tuserID, _ := c.Get(\"user_id\")\n\t\t\tm.logger.Warn(\"role check failed\",\n\t\t\t\t\"user_id\", userID,\n\t\t\t\t\"user_role\", userRole,\n\t\t\t\t\"required_role\", role,\n\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t)\n\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"insufficient role permissions\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// RequireMinimumRole middleware that requires at least the specified role level\nfunc (m *RBACMiddleware) RequireMinimumRole(minRole domain.UserRole) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserRole, exists := m.getUserRole(c)\n\t\tif !exists {\n\t\t\tm.logger.Warn(\"role check failed: no user role in context\", \"minimum_role\", minRole)\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Check if user role is equal to or higher than minimum role\n\t\tif userRole != minRole \u0026\u0026 !domain.IsRoleHigherThan(userRole, minRole) {\n\t\t\tuserID, _ := c.Get(\"user_id\")\n\t\t\tm.logger.Warn(\"minimum role check failed\",\n\t\t\t\t\"user_id\", userID,\n\t\t\t\t\"user_role\", userRole,\n\t\t\t\t\"minimum_role\", minRole,\n\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t)\n\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"insufficient role level\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// RequireOwnResourceOrPermission middleware for operations on own resources or with specific permission\nfunc (m *RBACMiddleware) RequireOwnResourceOrPermission(permission domain.Permission) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserID, exists := m.getCurrentUserID(c)\n\t\tif !exists {\n\t\t\tc.JSON(http.StatusUnauthorized, domain.ErrorResponse{\n\t\t\t\tError: \"authentication required\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tuserRole, _ := m.getUserRole(c)\n\n\t\t// Get target user ID from URL parameter\n\t\ttargetIDStr := c.Param(\"id\")\n\t\tif targetIDStr == \"\" {\n\t\t\tc.JSON(http.StatusBadRequest, domain.ErrorResponse{\n\t\t\t\tError: \"missing user ID parameter\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\ttargetID, err := strconv.ParseUint(targetIDStr, 10, 32)\n\t\tif err != nil {\n\t\t\tc.JSON(http.StatusBadRequest, domain.ErrorResponse{\n\t\t\t\tError: \"invalid user ID parameter\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\t// Allow if accessing own resource\n\t\tif userID == uint(targetID) {\n\t\t\tc.Next()\n\t\t\treturn\n\t\t}\n\n\t\t// Otherwise, check for required permission\n\t\tif !domain.HasPermission(userRole, permission) {\n\t\t\tm.logger.Warn(\"resource access denied\",\n\t\t\t\t\"user_id\", userID,\n\t\t\t\t\"target_id\", targetID,\n\t\t\t\t\"user_role\", userRole,\n\t\t\t\t\"required_permission\", permission,\n\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t)\n\n\t\t\tc.JSON(http.StatusForbidden, domain.ErrorResponse{\n\t\t\t\tError: \"insufficient permissions\",\n\t\t\t})\n\t\t\tc.Abort()\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// WithPermissionLogging middleware that logs permission checks for auditing\nfunc (m *RBACMiddleware) WithPermissionLogging() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tuserID, _ := m.getCurrentUserID(c)\n\t\tuserRole, _ := m.getUserRole(c)\n\n\t\tm.logger.Info(\"API access\",\n\t\t\t\"user_id\", userID,\n\t\t\t\"user_role\", userRole,\n\t\t\t\"method\", c.Request.Method,\n\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t\"ip\", c.ClientIP(),\n\t\t\t\"user_agent\", c.Request.UserAgent(),\n\t\t)\n\n\t\tc.Next()\n\t}\n}\n\n// Helper functions\n\n// getUserRole gets the user role from the context\nfunc (m *RBACMiddleware) getUserRole(c *gin.Context) (domain.UserRole, bool) {\n\t// First try to get from JWT claims if available\n\tif claims, exists := c.Get(\"jwt_claims\"); exists {\n\t\tif jwtClaims, ok := claims.(*domain.JWTClaims); ok {\n\t\t\treturn jwtClaims.Role, true\n\t\t}\n\t}\n\n\t// Fallback to getting from user profile (set by auth middleware)\n\tif profile, exists := c.Get(\"user_profile\"); exists {\n\t\tif userProfile, ok := profile.(*domain.UserResponse); ok {\n\t\t\treturn userProfile.Role, true\n\t\t}\n\t}\n\n\t// If no user profile in context, try to fetch it\n\tuserID, exists := m.getCurrentUserID(c)\n\tif !exists {\n\t\treturn \"\", false\n\t}\n\n\tprofile, err := m.authService.GetUserProfile(userID)\n\tif err != nil {\n\t\tm.logger.Error(\"failed to get user profile for role check\", \"user_id\", userID, \"error\", err)\n\t\treturn \"\", false\n\t}\n\n\t// Set in context for future use\n\tc.Set(\"user_profile\", profile)\n\treturn profile.Role, true\n}\n\n// getCurrentUserID gets the current user ID from context\nfunc (m *RBACMiddleware) getCurrentUserID(c *gin.Context) (uint, bool) {\n\tuserID, exists := c.Get(\"user_id\")\n\tif !exists {\n\t\treturn 0, false\n\t}\n\n\tuid, ok := userID.(uint)\n\tif !ok {\n\t\treturn 0, false\n\t}\n\n\treturn uid, true\n}\n\n// SetRoleInContext sets the user role in context (used by auth middleware)\nfunc SetRoleInContext(c *gin.Context, role domain.UserRole) {\n\tc.Set(\"user_role\", role)\n}\n\n// GetRoleFromContext gets the user role from context\nfunc GetRoleFromContext(c *gin.Context) (domain.UserRole, bool) {\n\trole, exists := c.Get(\"user_role\")\n\tif !exists {\n\t\treturn \"\", false\n\t}\n\n\tuserRole, ok := role.(domain.UserRole)\n\tif !ok {\n\t\treturn \"\", false\n\t}\n\n\treturn userRole, true\n}\n\n// HasCurrentUserPermission checks if the current user has a specific permission\nfunc HasCurrentUserPermission(c *gin.Context, permission domain.Permission) bool {\n\trole, exists := GetRoleFromContext(c)\n\tif !exists {\n\t\treturn false\n\t}\n\treturn domain.HasPermission(role, permission)\n}\n\n// IsCurrentUserAdmin checks if the current user is an admin\nfunc IsCurrentUserAdmin(c *gin.Context) bool {\n\trole, exists := GetRoleFromContext(c)\n\tif !exists {\n\t\treturn false\n\t}\n\treturn role == domain.RoleAdmin\n}\n\n// Convenience middleware functions\n\n// RequireUserRead requires user read permission\nfunc (m *RBACMiddleware) RequireUserRead() gin.HandlerFunc {\n\treturn m.RequirePermission(domain.PermissionUserRead)\n}\n\n// RequireUserWrite requires user write permission\nfunc (m *RBACMiddleware) RequireUserWrite() gin.HandlerFunc {\n\treturn m.RequirePermission(domain.PermissionUserWrite)\n}\n\n// RequireProfileAccess requires profile access (own profile or admin permission)\nfunc (m *RBACMiddleware) RequireProfileAccess() gin.HandlerFunc {\n\treturn m.RequireOwnResourceOrPermission(domain.PermissionUserRead)\n}\n\n// RequireAuditAccess requires audit log access\nfunc (m *RBACMiddleware) RequireAuditAccess() gin.HandlerFunc {\n\treturn m.RequirePermission(domain.PermissionAuditRead)\n}",
      "size": 10644,
      "hash": "930b380dc06d2be2f56d40671c0fd4b1b86e3fe7a479e8e8daf62c3898e50235",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/middleware/recovery.go",
      "template": true,
      "content": "package middleware\n\nimport (\n\t\"log/slog\"\n\t\"net/http\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc Recovery(logger *slog.Logger) gin.HandlerFunc {\n\treturn gin.CustomRecovery(func(c *gin.Context, recovered interface{}) {\n\t\tlogger.Error(\"panic recovered\",\n\t\t\t\"error\", recovered,\n\t\t\t\"method\", c.Request.Method,\n\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t\"client_ip\", c.ClientIP(),\n\t\t)\n\t\t\n\t\tc.JSON(http.StatusInternalServerError, gin.H{\n\t\t\t\"error\": \"Internal server error\",\n\t\t})\n\t})\n}",
      "size": 462,
      "hash": "f3b979bcb60447027961c5a147a6ae4bd1a0daa8aec7469d9d98b102da530559",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/middleware/security.go",
      "template": true,
      "content": "package middleware\n\nimport (\n\t\"crypto/subtle\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"log/slog\"\n\t\"net/http\"\n\t\"strings\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/google/uuid\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/errors\"\n)\n\n// SecurityHeaders adds security headers to responses\nfunc SecurityHeaders(config *config.Config) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\t// Prevent MIME type sniffing\n\t\tc.Header(\"X-Content-Type-Options\", \"nosniff\")\n\t\t\n\t\t// Prevent clickjacking\n\t\tc.Header(\"X-Frame-Options\", \"DENY\")\n\t\t\n\t\t// Enable XSS protection\n\t\tc.Header(\"X-XSS-Protection\", \"1; mode=block\")\n\t\t\n\t\t// Prevent downloading of files with dangerous extensions\n\t\tc.Header(\"X-Download-Options\", \"noopen\")\n\t\t\n\t\t// Prevent content from being embedded in frames from other origins\n\t\tc.Header(\"Content-Security-Policy\", generateCSP(config))\n\t\t\n\t\t// Force HTTPS in production\n\t\tif config.IsProduction() {\n\t\t\t// HTTP Strict Transport Security (HSTS)\n\t\t\tc.Header(\"Strict-Transport-Security\", \"max-age=31536000; includeSubDomains; preload\")\n\t\t\t\n\t\t\t// Prevent HTTP access in production\n\t\t\tif c.Request.Header.Get(\"X-Forwarded-Proto\") != \"https\" \u0026\u0026 c.Request.TLS == nil {\n\t\t\t\tredirectURL := \"https://\" + c.Request.Host + c.Request.RequestURI\n\t\t\t\tc.Redirect(http.StatusMovedPermanently, redirectURL)\n\t\t\t\tc.Abort()\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Referrer policy\n\t\tc.Header(\"Referrer-Policy\", \"strict-origin-when-cross-origin\")\n\t\t\n\t\t// Feature policy / Permissions policy\n\t\tc.Header(\"Permissions-Policy\", \"camera=(), microphone=(), geolocation=(), interest-cohort=()\")\n\t\t\n\t\tc.Next()\n\t}\n}\n\n// generateCSP generates a Content Security Policy header\nfunc generateCSP(config *config.Config) string {\n\tpolicies := []string{\n\t\t\"default-src 'self'\",\n\t\t\"script-src 'self' 'unsafe-inline' 'unsafe-eval'\", // Note: 'unsafe-inline' and 'unsafe-eval' should be removed in production with proper nonce/hash\n\t\t\"style-src 'self' 'unsafe-inline' https://fonts.googleapis.com\",\n\t\t\"font-src 'self' https://fonts.gstatic.com\",\n\t\t\"img-src 'self' data: https:\",\n\t\t\"connect-src 'self'\",\n\t\t\"frame-ancestors 'none'\",\n\t\t\"base-uri 'self'\",\n\t\t\"form-action 'self'\",\n\t}\n\t\n\t// Add frontend URL to connect-src for API calls\n\tif config.FrontendURL != \"\" {\n\t\tpolicies = append(policies, fmt.Sprintf(\"connect-src 'self' %s\", config.FrontendURL))\n\t}\n\t\n\treturn strings.Join(policies, \"; \")\n}\n\n// CSRFProtection provides CSRF protection using double-submit cookie pattern\nfunc CSRFProtection(config *config.Config, logger *slog.Logger) gin.HandlerFunc {\n\tif !config.IsFeatureEnabled(\"csrf_protection\") {\n\t\tlogger.Info(\"CSRF protection disabled by feature flag\")\n\t\treturn func(c *gin.Context) { c.Next() }\n\t}\n\n\treturn func(c *gin.Context) {\n\t\t// Skip CSRF protection for safe methods\n\t\tif isSafeMethod(c.Request.Method) {\n\t\t\tc.Next()\n\t\t\treturn\n\t\t}\n\n\t\t// Skip CSRF protection for API endpoints with proper authentication\n\t\tif isAPIEndpoint(c.Request.URL.Path) \u0026\u0026 hasValidAPIAuth(c) {\n\t\t\tc.Next()\n\t\t\treturn\n\t\t}\n\n\t\ttoken := getCSRFToken(c, config)\n\t\tif token == \"\" {\n\t\t\tlogger.Warn(\"CSRF token missing\",\n\t\t\t\t\"method\", c.Request.Method,\n\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t\t\"ip\", c.ClientIP(),\n\t\t\t)\n\t\t\terrors.AbortWithError(c, errors.New(errors.CodeForbidden, \"CSRF token required\"))\n\t\t\treturn\n\t\t}\n\n\t\tif !validateCSRFToken(c, token, config) {\n\t\t\tlogger.Warn(\"CSRF token validation failed\",\n\t\t\t\t\"method\", c.Request.Method,\n\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t\t\"ip\", c.ClientIP(),\n\t\t\t\t\"user_agent\", c.Request.UserAgent(),\n\t\t\t)\n\t\t\terrors.AbortWithError(c, errors.New(errors.CodeForbidden, \"CSRF token invalid\"))\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// getCSRFToken extracts CSRF token from request\nfunc getCSRFToken(c *gin.Context, config *config.Config) string {\n\t// Try header first\n\ttoken := c.GetHeader(\"X-CSRF-Token\")\n\tif token != \"\" {\n\t\treturn token\n\t}\n\n\t// Try form field\n\ttoken = c.PostForm(\"_csrf_token\")\n\tif token != \"\" {\n\t\treturn token\n\t}\n\n\t// Try query parameter (less secure, only for specific cases)\n\treturn c.Query(\"_csrf_token\")\n}\n\n// validateCSRFToken validates a CSRF token\nfunc validateCSRFToken(c *gin.Context, token string, config *config.Config) bool {\n\t// Get the expected token from cookie\n\tcookie, err := c.Request.Cookie(\"_csrf_token\")\n\tif err != nil {\n\t\treturn false\n\t}\n\n\t// Use constant-time comparison to prevent timing attacks\n\treturn subtle.ConstantTimeCompare([]byte(token), []byte(cookie.Value)) == 1\n}\n\n// GenerateCSRFToken generates a new CSRF token\nfunc GenerateCSRFToken(c *gin.Context, config *config.Config) string {\n\t// Generate a random token\n\ttoken := generateSecureToken()\n\t\n\t// Set cookie with the token\n\tc.SetCookie(\n\t\t\"_csrf_token\",\n\t\ttoken,\n\t\t3600, // 1 hour\n\t\t\"/\",\n\t\t\"\", // domain\n\t\tconfig.IsProduction(), // secure\n\t\ttrue, // httpOnly\n\t)\n\t\n\treturn token\n}\n\n// isSafeMethod checks if HTTP method is safe (doesn't modify state)\nfunc isSafeMethod(method string) bool {\n\tsafeMethods := []string{\"GET\", \"HEAD\", \"OPTIONS\", \"TRACE\"}\n\tfor _, safe := range safeMethods {\n\t\tif method == safe {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// isAPIEndpoint checks if the path is an API endpoint\nfunc isAPIEndpoint(path string) bool {\n\treturn strings.HasPrefix(path, \"/api/\")\n}\n\n// hasValidAPIAuth checks if request has valid API authentication\nfunc hasValidAPIAuth(c *gin.Context) bool {\n\t// Check for Bearer token\n\tauth := c.GetHeader(\"Authorization\")\n\tif strings.HasPrefix(auth, \"Bearer \") {\n\t\treturn true\n\t}\n\t\n\t// Check for API key\n\tapiKey := c.GetHeader(\"X-API-Key\")\n\tif apiKey != \"\" {\n\t\treturn true\n\t}\n\t\n\treturn false\n}\n\n// generateSecureToken generates a cryptographically secure random token\nfunc generateSecureToken() string {\n\treturn base64.URLEncoding.EncodeToString([]byte(uuid.New().String()))\n}\n\n// RequestID middleware adds a unique request ID to each request\nfunc RequestID() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\t// Check if request ID is already provided\n\t\trequestID := c.GetHeader(\"X-Request-ID\")\n\t\tif requestID == \"\" {\n\t\t\trequestID = uuid.New().String()\n\t\t}\n\t\t\n\t\t// Set in context and response header\n\t\tc.Set(\"request_id\", requestID)\n\t\tc.Header(\"X-Request-ID\", requestID)\n\t\t\n\t\tc.Next()\n\t}\n}\n\n// TraceID middleware adds a trace ID for distributed tracing\nfunc TraceID() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\t// Check if trace ID is already provided\n\t\ttraceID := c.GetHeader(\"X-Trace-ID\")\n\t\tif traceID == \"\" {\n\t\t\ttraceID = uuid.New().String()\n\t\t}\n\t\t\n\t\t// Set in context and response header\n\t\tc.Set(\"trace_id\", traceID)\n\t\tc.Header(\"X-Trace-ID\", traceID)\n\t\t\n\t\tc.Next()\n\t}\n}\n\n// TrustedProxies middleware validates trusted proxy headers\nfunc TrustedProxies(config *config.Config, logger *slog.Logger) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\t// In production, validate that proxy headers come from trusted sources\n\t\tif config.IsProduction() {\n\t\t\t// Check X-Forwarded-For header for suspicious values\n\t\t\tif xff := c.GetHeader(\"X-Forwarded-For\"); xff != \"\" {\n\t\t\t\t// Log for monitoring\n\t\t\t\tlogger.Debug(\"Request with X-Forwarded-For header\",\n\t\t\t\t\t\"xff\", xff,\n\t\t\t\t\t\"remote_addr\", c.Request.RemoteAddr,\n\t\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t\t// Check X-Real-IP header\n\t\t\tif xri := c.GetHeader(\"X-Real-IP\"); xri != \"\" {\n\t\t\t\tlogger.Debug(\"Request with X-Real-IP header\",\n\t\t\t\t\t\"real_ip\", xri,\n\t\t\t\t\t\"remote_addr\", c.Request.RemoteAddr,\n\t\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t\n\t\tc.Next()\n\t}\n}\n\n// InputSanitization middleware provides basic input sanitization\nfunc InputSanitization(logger *slog.Logger) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\t// Check for potentially malicious patterns in query parameters\n\t\tfor key, values := range c.Request.URL.Query() {\n\t\t\tfor _, value := range values {\n\t\t\t\tif containsSuspiciousContent(value) {\n\t\t\t\t\tlogger.Warn(\"Suspicious query parameter detected\",\n\t\t\t\t\t\t\"key\", key,\n\t\t\t\t\t\t\"value\", value,\n\t\t\t\t\t\t\"ip\", c.ClientIP(),\n\t\t\t\t\t\t\"user_agent\", c.Request.UserAgent(),\n\t\t\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\t\terrors.AbortWithError(c, errors.BadRequest(\"Invalid request parameters\"))\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Check User-Agent for suspicious patterns\n\t\tuserAgent := c.Request.UserAgent()\n\t\tif containsSuspiciousUserAgent(userAgent) {\n\t\t\tlogger.Warn(\"Suspicious User-Agent detected\",\n\t\t\t\t\"user_agent\", userAgent,\n\t\t\t\t\"ip\", c.ClientIP(),\n\t\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t)\n\t\t}\n\t\t\n\t\tc.Next()\n\t}\n}\n\n// containsSuspiciousContent checks for common attack patterns\nfunc containsSuspiciousContent(content string) bool {\n\tsuspiciousPatterns := []string{\n\t\t\"\u003cscript\",\n\t\t\"javascript:\",\n\t\t\"onload=\",\n\t\t\"onerror=\",\n\t\t\"eval(\",\n\t\t\"alert(\",\n\t\t\"document.cookie\",\n\t\t\"document.write\",\n\t\t\"../\",\n\t\t\"..\\\\\",\n\t\t\"\u003ciframe\",\n\t\t\"\u003cobject\",\n\t\t\"\u003cembed\",\n\t\t\"data:text/html\",\n\t\t\"vbscript:\",\n\t}\n\t\n\tlowerContent := strings.ToLower(content)\n\tfor _, pattern := range suspiciousPatterns {\n\t\tif strings.Contains(lowerContent, pattern) {\n\t\t\treturn true\n\t\t}\n\t}\n\t\n\treturn false\n}\n\n// containsSuspiciousUserAgent checks for suspicious user agents\nfunc containsSuspiciousUserAgent(userAgent string) bool {\n\tsuspiciousPatterns := []string{\n\t\t\"nikto\",\n\t\t\"sqlmap\",\n\t\t\"nmap\",\n\t\t\"masscan\",\n\t\t\"zap\",\n\t\t\"burp\",\n\t\t\"acunetix\",\n\t\t\"nessus\",\n\t\t\"openvas\",\n\t\t\"w3af\",\n\t\t\"havij\",\n\t\t\"grabber\",\n\t}\n\t\n\tlowerUA := strings.ToLower(userAgent)\n\tfor _, pattern := range suspiciousPatterns {\n\t\tif strings.Contains(lowerUA, pattern) {\n\t\t\treturn true\n\t\t}\n\t}\n\t\n\treturn false\n}\n\n// CORS middleware with security considerations\nfunc SecureCORS(config *config.Config) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\torigin := c.Request.Header.Get(\"Origin\")\n\t\t\n\t\t// Check if origin is allowed\n\t\tif isAllowedOrigin(origin, config.GetCORSOrigins()) {\n\t\t\tc.Header(\"Access-Control-Allow-Origin\", origin)\n\t\t} else if config.IsDevelopment() {\n\t\t\t// In development, be more permissive\n\t\t\tc.Header(\"Access-Control-Allow-Origin\", \"*\")\n\t\t}\n\t\t\n\t\tc.Header(\"Access-Control-Allow-Credentials\", \"true\")\n\t\tc.Header(\"Access-Control-Allow-Headers\", \"Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-API-Key\")\n\t\tc.Header(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, PUT, DELETE, PATCH\")\n\t\tc.Header(\"Access-Control-Expose-Headers\", \"X-Request-ID, X-Trace-ID\")\n\t\tc.Header(\"Access-Control-Max-Age\", \"86400\") // 24 hours\n\t\t\n\t\t// Handle preflight requests\n\t\tif c.Request.Method == \"OPTIONS\" {\n\t\t\tc.AbortWithStatus(http.StatusNoContent)\n\t\t\treturn\n\t\t}\n\t\t\n\t\tc.Next()\n\t}\n}\n\n// isAllowedOrigin checks if an origin is in the allowed list\nfunc isAllowedOrigin(origin string, allowedOrigins []string) bool {\n\tfor _, allowed := range allowedOrigins {\n\t\tif allowed == \"*\" || allowed == origin {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// ContentLengthLimit middleware limits request body size\nfunc ContentLengthLimit(maxBytes int64) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tif c.Request.ContentLength \u003e maxBytes {\n\t\t\terrors.AbortWithError(c, errors.New(errors.CodeRequestTooLarge, \n\t\t\t\tfmt.Sprintf(\"Request body too large (max: %d bytes)\", maxBytes)))\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// Also set a limit on the request body reader\n\t\tc.Request.Body = http.MaxBytesReader(c.Writer, c.Request.Body, maxBytes)\n\t\t\n\t\tc.Next()\n\t}\n}\n\n// SecurityHeaders middleware that combines multiple security measures\nfunc ComprehensiveSecurity(config *config.Config, logger *slog.Logger) gin.HandlerFunc {\n\treturn gin.HandlerFunc(func(c *gin.Context) {\n\t\t// Apply security headers\n\t\tSecurityHeaders(config)(c)\n\t\t\n\t\t// Apply request/trace IDs\n\t\tRequestID()(c)\n\t\tTraceID()(c)\n\t\t\n\t\t// Apply input sanitization\n\t\tInputSanitization(logger)(c)\n\t\t\n\t\t// Apply trusted proxies validation\n\t\tTrustedProxies(config, logger)(c)\n\t\t\n\t\t// Apply content length limit (10MB default)\n\t\tContentLengthLimit(10 * 1024 * 1024)(c)\n\t\t\n\t\tc.Next()\n\t})\n}",
      "size": 11739,
      "hash": "e0277b924ae3ef26dec5f0dacf4c128fab2e45b6d1ebf66533ff7c5b8fa99a23",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/bootstrap/service.go",
      "template": true,
      "content": "package bootstrap\n\nimport (\n\t\"errors\"\n\t\"log/slog\"\n\n\t\"golang.org/x/crypto/bcrypt\"\n\t\"gorm.io/gorm\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n)\n\n// Service handles bootstrap operations for the application\ntype Service struct {\n\tconfig *config.Config\n\tdb     *gorm.DB\n\tlogger *slog.Logger\n}\n\n// NewService creates a new bootstrap service\nfunc NewService(cfg *config.Config, db *gorm.DB, logger *slog.Logger) *Service {\n\treturn \u0026Service{\n\t\tconfig: cfg,\n\t\tdb:     db,\n\t\tlogger: logger,\n\t}\n}\n\n// Bootstrap runs all bootstrap operations\nfunc (s *Service) Bootstrap() error {\n\tif !s.config.BootstrapEnabled {\n\t\ts.logger.Info(\"bootstrap disabled, skipping\")\n\t\treturn nil\n\t}\n\n\ts.logger.Info(\"starting bootstrap process\")\n\n\tif err := s.createDemoUsers(); err != nil {\n\t\ts.logger.Error(\"failed to create demo users\", \"error\", err)\n\t\treturn err\n\t}\n\n\ts.logger.Info(\"bootstrap process completed successfully\")\n\treturn nil\n}\n\n// createDemoUsers creates the demo admin and user accounts\nfunc (s *Service) createDemoUsers() error {\n\t// Create admin user\n\tif err := s.createUserIfNotExists(\n\t\ts.config.AdminEmail,\n\t\ts.config.AdminPassword,\n\t\t\"Admin\",\n\t\t\"User\",\n\t\tdomain.RoleAdmin,\n\t); err != nil {\n\t\treturn err\n\t}\n\n\t// Create demo user\n\tif err := s.createUserIfNotExists(\n\t\ts.config.DemoUserEmail,\n\t\ts.config.DemoUserPassword,\n\t\t\"Demo\",\n\t\t\"User\",\n\t\tdomain.RoleUser,\n\t); err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\n// createUserIfNotExists creates a user if they don't already exist\nfunc (s *Service) createUserIfNotExists(email, password, firstName, lastName string, role domain.UserRole) error {\n\t// Check if user already exists\n\tvar existingUser domain.User\n\terr := s.db.Where(\"email = ?\", email).First(\u0026existingUser).Error\n\tif err == nil {\n\t\t// User exists, check if role matches\n\t\tif existingUser.Role != role {\n\t\t\ts.logger.Info(\"updating user role\", \"email\", email, \"old_role\", existingUser.Role, \"new_role\", role)\n\t\t\tif err := s.db.Model(\u0026existingUser).Update(\"role\", role).Error; err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t} else {\n\t\t\ts.logger.Debug(\"user already exists\", \"email\", email, \"role\", role)\n\t\t}\n\t\treturn nil\n\t}\n\n\t// If error is not \"record not found\", return the error\n\tif !errors.Is(err, gorm.ErrRecordNotFound) {\n\t\treturn err\n\t}\n\n\t// Hash password\n\thashedPassword, err := bcrypt.GenerateFromPassword([]byte(password), bcrypt.DefaultCost)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Create new user\n\tuser := \u0026domain.User{\n\t\tEmail:        email,\n\t\tPasswordHash: string(hashedPassword),\n\t\tFirstName:    firstName,\n\t\tLastName:     lastName,\n\t\tRole:         role,\n\t\tStatus:       domain.StatusActive,\n\t\tEmailVerified: true, // Bootstrap users are auto-verified\n\t\tPreferences: domain.UserPreferences{\n\t\t\tTheme:    \"light\",\n\t\t\tLanguage: \"en\",\n\t\t\tTimezone: \"UTC\",\n\t\t\tNotifications: domain.NotificationPrefs{\n\t\t\t\tEmail: true,\n\t\t\t\tSMS:   false,\n\t\t\t\tPush:  true,\n\t\t\t},\n\t\t\tPrivacy: domain.PrivacyPrefs{\n\t\t\t\tProfileVisible: true,\n\t\t\t\tShowEmail:      false,\n\t\t\t},\n\t\t\tCustom: make(map[string]any),\n\t\t},\n\t}\n\n\tif err := s.db.Create(user).Error; err != nil {\n\t\treturn err\n\t}\n\n\ts.logger.Info(\"created bootstrap user\", \"email\", email, \"role\", role, \"id\", user.ID)\n\treturn nil\n}\n\n// DropDemoUsers removes demo users (useful for testing)\nfunc (s *Service) DropDemoUsers() error {\n\temails := []string{s.config.AdminEmail, s.config.DemoUserEmail}\n\t\n\tfor _, email := range emails {\n\t\tif err := s.db.Where(\"email = ?\", email).Delete(\u0026domain.User{}).Error; err != nil {\n\t\t\ts.logger.Error(\"failed to delete demo user\", \"email\", email, \"error\", err)\n\t\t\treturn err\n\t\t}\n\t\ts.logger.Info(\"deleted demo user\", \"email\", email)\n\t}\n\t\n\treturn nil\n}",
      "size": 3683,
      "hash": "4009a92d15992c9837bd2021d7ff4197ad3ebff3c4c6debabaa13065db6f3dc4",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/config/config.go",
      "template": true,
      "content": "package config\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/go-playground/validator/v10\"\n\t\"github.com/kelseyhightower/envconfig\"\n)\n\ntype Config struct {\n\t// Application Settings\n\tEnvironment string `envconfig:\"ENVIRONMENT\" default:\"development\" validate:\"oneof=development staging production\"`\n\tPort        string `envconfig:\"PORT\" default:\"8080\" validate:\"numeric\"`\n\tLogLevel    string `envconfig:\"LOG_LEVEL\" default:\"info\" validate:\"oneof=debug info warn error\"`\n\tAppName     string `envconfig:\"APP_NAME\" default:\"Fullstack Template\"`\n\tVersion     string `envconfig:\"APP_VERSION\" default:\"1.0.0\"`\n\n\t// Database Configuration\n\tDatabaseHost     string `envconfig:\"DATABASE_HOST\" default:\"localhost\" validate:\"required\"`\n\tDatabasePort     string `envconfig:\"DATABASE_PORT\" default:\"5432\" validate:\"numeric\"`\n\tDatabaseUser     string `envconfig:\"DATABASE_USER\" default:\"postgres\" validate:\"required\"`\n\tDatabasePassword string `envconfig:\"DATABASE_PASSWORD\" default:\"postgres\"`\n\tDatabaseName     string `envconfig:\"DATABASE_NAME\" default:\"fullstack_template\" validate:\"required\"`\n\tDatabaseSSLMode  string `envconfig:\"DATABASE_SSL_MODE\" default:\"disable\" validate:\"oneof=disable require verify-ca verify-full\"`\n\n\t// Database Pool Configuration\n\tDBMaxIdleConns     int    `envconfig:\"DB_MAX_IDLE_CONNS\" default:\"10\" validate:\"min=1,max=100\"`\n\tDBMaxOpenConns     int    `envconfig:\"DB_MAX_OPEN_CONNS\" default:\"100\" validate:\"min=1,max=1000\"`\n\tDBConnMaxLifetime  string `envconfig:\"DB_CONN_MAX_LIFETIME\" default:\"1h\" validate:\"required\"`\n\tDBConnMaxIdleTime  string `envconfig:\"DB_CONN_MAX_IDLE_TIME\" default:\"30m\"`\n\n\t// JWT Configuration\n\tJWTSecret               string `envconfig:\"JWT_SECRET\" default:\"dev-secret-change-in-production\" validate:\"min=32\"`\n\tJWTAccessTokenDuration  string `envconfig:\"JWT_ACCESS_TOKEN_DURATION\" default:\"15m\" validate:\"required\"`\n\tJWTRefreshTokenDuration string `envconfig:\"JWT_REFRESH_TOKEN_DURATION\" default:\"7d\" validate:\"required\"`\n\tJWTIssuer               string `envconfig:\"JWT_ISSUER\" default:\"fullstack-template\"`\n\n\t// Email Configuration\n\tEmailProvider string `envconfig:\"EMAIL_PROVIDER\" default:\"smtp\" validate:\"oneof=smtp sendgrid postmark mailgun\"`\n\tEmailFrom     string `envconfig:\"EMAIL_FROM\" default:\"noreply@localhost\" validate:\"email\"`\n\tEmailFromName string `envconfig:\"EMAIL_FROM_NAME\" default:\"App\"`\n\n\t// SMTP Configuration\n\tSMTPHost      string `envconfig:\"SMTP_HOST\" default:\"localhost\"`\n\tSMTPPort      int    `envconfig:\"SMTP_PORT\" default:\"587\" validate:\"min=1,max=65535\"`\n\tSMTPUsername  string `envconfig:\"SMTP_USERNAME\"`\n\tSMTPPassword  string `envconfig:\"SMTP_PASSWORD\"`\n\tSMTPUseTLS    bool   `envconfig:\"SMTP_USE_TLS\" default:\"true\"`\n\n\t// Email Service Provider Keys\n\tSendGridAPIKey string `envconfig:\"SENDGRID_API_KEY\"`\n\tPostmarkAPIKey string `envconfig:\"POSTMARK_API_KEY\"`\n\tMailgunAPIKey  string `envconfig:\"MAILGUN_API_KEY\"`\n\tMailgunDomain  string `envconfig:\"MAILGUN_DOMAIN\"`\n\n\t// Application URLs\n\tFrontendURL string `envconfig:\"FRONTEND_URL\" default:\"http://localhost:3000\" validate:\"url\"`\n\tBackendURL  string `envconfig:\"BACKEND_URL\" default:\"http://localhost:8080\" validate:\"url\"`\n\n\t// Security Configuration\n\tCSRFSecret       string `envconfig:\"CSRF_SECRET\" default:\"dev-csrf-secret-change-in-production\" validate:\"min=32\"`\n\tCORSOrigins      string `envconfig:\"CORS_ORIGINS\" default:\"http://localhost:3000,http://localhost:8080\"`\n\tSecureHeaders    bool   `envconfig:\"SECURE_HEADERS\" default:\"true\"`\n\tRateLimitEnabled bool   `envconfig:\"RATE_LIMIT_ENABLED\" default:\"true\"`\n\n\t// Feature Flags\n\tFeatureFlags FeatureFlags `envconfig:\"FEATURES\"`\n\n\t// Monitoring Configuration\n\tMetricsEnabled   bool   `envconfig:\"METRICS_ENABLED\" default:\"true\"`\n\tMetricsPort      string `envconfig:\"METRICS_PORT\" default:\"9090\"`\n\tHealthCheckPath  string `envconfig:\"HEALTH_CHECK_PATH\" default:\"/api/health\"`\n\tSentryDSN        string `envconfig:\"SENTRY_DSN\"`\n\tTracingEnabled   bool   `envconfig:\"TRACING_ENABLED\" default:\"false\"`\n\n\t// Cache Configuration\n\tRedisURL      string `envconfig:\"REDIS_URL\" default:\"redis://localhost:6379/0\"`\n\tCacheEnabled  bool   `envconfig:\"CACHE_ENABLED\" default:\"true\"`\n\tCachePrefix   string `envconfig:\"CACHE_PREFIX\" default:\"ft:\"`\n\tCacheTTL      string `envconfig:\"CACHE_TTL\" default:\"1h\"`\n\n\t// File Storage Configuration\n\tStorageProvider string `envconfig:\"STORAGE_PROVIDER\" default:\"local\" validate:\"oneof=local s3 gcs\"`\n\tS3Bucket        string `envconfig:\"S3_BUCKET\"`\n\tS3Region        string `envconfig:\"S3_REGION\" default:\"us-east-1\"`\n\tGCSBucket       string `envconfig:\"GCS_BUCKET\"`\n\tLocalStoragePath string `envconfig:\"LOCAL_STORAGE_PATH\" default:\"./uploads\"`\n\n\t// Bootstrap Configuration\n\tBootstrapEnabled bool   `envconfig:\"BOOTSTRAP_ENABLED\" default:\"true\"`\n\tAdminEmail       string `envconfig:\"ADMIN_EMAIL\" default:\"admin@example.com\"`\n\tAdminPassword    string `envconfig:\"ADMIN_PASSWORD\" default:\"admin123\"`\n\tDemoUserEmail    string `envconfig:\"DEMO_USER_EMAIL\" default:\"user@example.com\"`\n\tDemoUserPassword string `envconfig:\"DEMO_USER_PASSWORD\" default:\"user1234\"`\n}\n\n// FeatureFlags represents application feature flags\ntype FeatureFlags struct {\n\tEmailVerification bool `envconfig:\"EMAIL_VERIFICATION\" default:\"true\"`\n\tTwoFactorAuth     bool `envconfig:\"TWO_FACTOR_AUTH\" default:\"false\"`\n\tAdminAPI          bool `envconfig:\"ADMIN_API\" default:\"true\"`\n\tMetrics           bool `envconfig:\"METRICS\" default:\"true\"`\n\tFileUploads       bool `envconfig:\"FILE_UPLOADS\" default:\"true\"`\n\tSocialLogin       bool `envconfig:\"SOCIAL_LOGIN\" default:\"false\"`\n\tEmailTemplates    bool `envconfig:\"EMAIL_TEMPLATES\" default:\"true\"`\n\tRateLimiting      bool `envconfig:\"RATE_LIMITING\" default:\"true\"`\n\tCSRFProtection    bool `envconfig:\"CSRF_PROTECTION\" default:\"true\"`\n\tSecurityHeaders   bool `envconfig:\"SECURITY_HEADERS\" default:\"true\"`\n}\n\n// Load loads and validates the application configuration\nfunc Load() (*Config, error) {\n\tvar cfg Config\n\tif err := envconfig.Process(\"\", \u0026cfg); err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to process environment config: %w\", err)\n\t}\n\n\t// Validate configuration\n\tif err := cfg.Validate(); err != nil {\n\t\treturn nil, fmt.Errorf(\"configuration validation failed: %w\", err)\n\t}\n\n\t// Apply environment-specific defaults\n\tcfg.applyEnvironmentDefaults()\n\n\t// Validate critical production settings\n\tif cfg.IsProduction() {\n\t\tif err := cfg.validateProductionSettings(); err != nil {\n\t\t\treturn nil, fmt.Errorf(\"production validation failed: %w\", err)\n\t\t}\n\t}\n\n\treturn \u0026cfg, nil\n}\n\n// Validate validates the configuration using struct tags\nfunc (c *Config) Validate() error {\n\tvalidate := validator.New()\n\treturn validate.Struct(c)\n}\n\n// applyEnvironmentDefaults applies environment-specific configuration defaults\nfunc (c *Config) applyEnvironmentDefaults() {\n\tswitch c.Environment {\n\tcase \"production\":\n\t\t// Production defaults\n\t\tif c.LogLevel == \"debug\" {\n\t\t\tc.LogLevel = \"info\"\n\t\t}\n\t\tc.SecureHeaders = true\n\t\tc.RateLimitEnabled = true\n\t\tc.FeatureFlags.CSRFProtection = true\n\t\tc.FeatureFlags.SecurityHeaders = true\n\n\tcase \"staging\":\n\t\t// Staging defaults\n\t\tc.SecureHeaders = true\n\t\tc.RateLimitEnabled = true\n\n\tcase \"development\":\n\t\t// Development defaults - already set in struct tags\n\t\tbreak\n\t}\n}\n\n// validateProductionSettings validates critical production configuration\nfunc (c *Config) validateProductionSettings() error {\n\tvar errors []string\n\n\t// Check for default secrets in production\n\tif strings.Contains(c.JWTSecret, \"dev-\") {\n\t\terrors = append(errors, \"JWT_SECRET must be changed from default value in production\")\n\t}\n\n\tif strings.Contains(c.CSRFSecret, \"dev-\") {\n\t\terrors = append(errors, \"CSRF_SECRET must be changed from default value in production\")\n\t}\n\n\t// Check database SSL mode\n\tif c.DatabaseSSLMode == \"disable\" {\n\t\terrors = append(errors, \"DATABASE_SSL_MODE should not be 'disable' in production\")\n\t}\n\n\t// Check email configuration\n\tif c.EmailProvider == \"smtp\" \u0026\u0026 c.SMTPHost == \"localhost\" {\n\t\terrors = append(errors, \"SMTP_HOST should not be 'localhost' in production\")\n\t}\n\n\tif len(errors) \u003e 0 {\n\t\treturn fmt.Errorf(\"production configuration errors: %s\", strings.Join(errors, \"; \"))\n\t}\n\n\treturn nil\n}\n\nfunc (c *Config) IsDevelopment() bool {\n\treturn c.Environment == \"development\"\n}\n\nfunc (c *Config) DatabaseDSN() string {\n\treturn \"host=\" + c.DatabaseHost +\n\t\t\" port=\" + c.DatabasePort +\n\t\t\" user=\" + c.DatabaseUser +\n\t\t\" password=\" + c.DatabasePassword +\n\t\t\" dbname=\" + c.DatabaseName +\n\t\t\" sslmode=\" + c.DatabaseSSLMode\n}\n\nfunc (c *Config) DBConnMaxLifetimeDuration() time.Duration {\n\tduration, err := time.ParseDuration(c.DBConnMaxLifetime)\n\tif err != nil {\n\t\treturn time.Hour\n\t}\n\treturn duration\n}\n\nfunc (c *Config) JWTAccessTokenDurationParsed() time.Duration {\n\tduration, err := time.ParseDuration(c.JWTAccessTokenDuration)\n\tif err != nil {\n\t\treturn 15 * time.Minute\n\t}\n\treturn duration\n}\n\nfunc (c *Config) JWTRefreshTokenDurationParsed() time.Duration {\n\tduration, err := time.ParseDuration(c.JWTRefreshTokenDuration)\n\tif err != nil {\n\t\treturn 7 * 24 * time.Hour\n\t}\n\treturn duration\n}\n\n// IsProduction returns true if the environment is production\nfunc (c *Config) IsProduction() bool {\n\treturn c.Environment == \"production\"\n}\n\n// IsStaging returns true if the environment is staging\nfunc (c *Config) IsStaging() bool {\n\treturn c.Environment == \"staging\"\n}\n\n// IsTest returns true if the environment is test\nfunc (c *Config) IsTest() bool {\n\treturn c.Environment == \"test\"\n}\n\n// DBConnMaxIdleTimeDuration parses the DB connection max idle time duration\nfunc (c *Config) DBConnMaxIdleTimeDuration() time.Duration {\n\tduration, err := time.ParseDuration(c.DBConnMaxIdleTime)\n\tif err != nil {\n\t\treturn 30 * time.Minute\n\t}\n\treturn duration\n}\n\n// CacheTTLDuration parses the cache TTL duration\nfunc (c *Config) CacheTTLDuration() time.Duration {\n\tduration, err := time.ParseDuration(c.CacheTTL)\n\tif err != nil {\n\t\treturn time.Hour\n\t}\n\treturn duration\n}\n\n// GetCORSOrigins returns the CORS origins as a slice\nfunc (c *Config) GetCORSOrigins() []string {\n\tif c.CORSOrigins == \"\" {\n\t\treturn []string{\"*\"}\n\t}\n\treturn strings.Split(c.CORSOrigins, \",\")\n}\n\n// GetEmailConfig returns email configuration based on provider\nfunc (c *Config) GetEmailConfig() map[string]interface{} {\n\tconfig := map[string]interface{}{\n\t\t\"provider\":   c.EmailProvider,\n\t\t\"from\":       c.EmailFrom,\n\t\t\"from_name\":  c.EmailFromName,\n\t}\n\n\tswitch c.EmailProvider {\n\tcase \"smtp\":\n\t\tconfig[\"host\"] = c.SMTPHost\n\t\tconfig[\"port\"] = c.SMTPPort\n\t\tconfig[\"username\"] = c.SMTPUsername\n\t\tconfig[\"password\"] = c.SMTPPassword\n\t\tconfig[\"use_tls\"] = c.SMTPUseTLS\n\tcase \"sendgrid\":\n\t\tconfig[\"api_key\"] = c.SendGridAPIKey\n\tcase \"postmark\":\n\t\tconfig[\"api_key\"] = c.PostmarkAPIKey\n\tcase \"mailgun\":\n\t\tconfig[\"api_key\"] = c.MailgunAPIKey\n\t\tconfig[\"domain\"] = c.MailgunDomain\n\t}\n\n\treturn config\n}\n\n// IsFeatureEnabled checks if a specific feature is enabled\nfunc (c *Config) IsFeatureEnabled(feature string) bool {\n\tswitch feature {\n\tcase \"email_verification\":\n\t\treturn c.FeatureFlags.EmailVerification\n\tcase \"two_factor_auth\":\n\t\treturn c.FeatureFlags.TwoFactorAuth\n\tcase \"admin_api\":\n\t\treturn c.FeatureFlags.AdminAPI\n\tcase \"metrics\":\n\t\treturn c.FeatureFlags.Metrics\n\tcase \"file_uploads\":\n\t\treturn c.FeatureFlags.FileUploads\n\tcase \"social_login\":\n\t\treturn c.FeatureFlags.SocialLogin\n\tcase \"email_templates\":\n\t\treturn c.FeatureFlags.EmailTemplates\n\tcase \"rate_limiting\":\n\t\treturn c.FeatureFlags.RateLimiting\n\tcase \"csrf_protection\":\n\t\treturn c.FeatureFlags.CSRFProtection\n\tcase \"security_headers\":\n\t\treturn c.FeatureFlags.SecurityHeaders\n\tdefault:\n\t\treturn false\n\t}\n}\n\n// GetDatabaseConfig returns database configuration map\nfunc (c *Config) GetDatabaseConfig() map[string]interface{} {\n\treturn map[string]interface{}{\n\t\t\"host\":               c.DatabaseHost,\n\t\t\"port\":               c.DatabasePort,\n\t\t\"user\":               c.DatabaseUser,\n\t\t\"password\":           c.DatabasePassword,\n\t\t\"name\":               c.DatabaseName,\n\t\t\"ssl_mode\":           c.DatabaseSSLMode,\n\t\t\"max_idle_conns\":     c.DBMaxIdleConns,\n\t\t\"max_open_conns\":     c.DBMaxOpenConns,\n\t\t\"conn_max_lifetime\":  c.DBConnMaxLifetime,\n\t\t\"conn_max_idle_time\": c.DBConnMaxIdleTime,\n\t}\n}\n\n// MaskSensitiveData returns a copy of the config with sensitive data masked\nfunc (c *Config) MaskSensitiveData() *Config {\n\tmasked := *c\n\tmasked.DatabasePassword = \"***\"\n\tmasked.JWTSecret = \"***\"\n\tmasked.CSRFSecret = \"***\"\n\tmasked.SMTPPassword = \"***\"\n\tmasked.SendGridAPIKey = \"***\"\n\tmasked.PostmarkAPIKey = \"***\"\n\tmasked.MailgunAPIKey = \"***\"\n\treturn \u0026masked\n}",
      "size": 12485,
      "hash": "eaa05d5593614821fc61c33775710eafc4a4f647c6659eed96d11a510e4dba12",
      "mappings": [
        {
          "find": "ServiceName    string `envconfig:\"SERVICE_NAME\" default:\"fullstack-template\"`",
          "replace": "ServiceName    string `envconfig:\"SERVICE_NAME\" default:\"{{.ProjectName | kebab}}\"`"
        },
        {
          "find": "DBName            string `envconfig:\"DB_NAME\" default:\"fullstack_template\"`",
          "replace": "DBName            string `envconfig:\"DB_NAME\" default:\"{{.ProjectName | snake}}\"`"
        }
      ]
    },
    {
      "path": "internal/shared/config/config_test.go",
      "template": true,
      "content": "package config\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestConfigValidation(t *testing.T) {\n\tcfg := \u0026Config{\n\t\tEnvironment:               \"development\",\n\t\tPort:                     \"8080\",\n\t\tLogLevel:                 \"info\",\n\t\tDatabaseHost:             \"localhost\",\n\t\tDatabasePort:             \"5432\",\n\t\tDatabaseUser:             \"test\",\n\t\tDatabasePassword:         \"test\",\n\t\tDatabaseName:             \"test\",\n\t\tDatabaseSSLMode:          \"disable\",\n\t\tDBMaxIdleConns:           10,\n\t\tDBMaxOpenConns:           100,\n\t\tDBConnMaxLifetime:        \"1h\",\n\t\tDBConnMaxIdleTime:        \"30m\",\n\t\tJWTSecret:                \"test-secret-key-for-testing-only-32chars\",\n\t\tJWTAccessTokenDuration:   \"15m\",\n\t\tJWTRefreshTokenDuration:  \"7d\",\n\t\tJWTIssuer:                \"test\",\n\t\tEmailProvider:            \"smtp\",\n\t\tEmailFrom:                \"test@example.com\",\n\t\tEmailFromName:            \"Test App\",\n\t\tSMTPHost:                 \"localhost\",\n\t\tSMTPPort:                 587,\n\t\tFrontendURL:              \"http://localhost:3000\",\n\t\tBackendURL:               \"http://localhost:8080\",\n\t\tCSRFSecret:               \"test-csrf-secret-32-characters-long\",\n\t\tStorageProvider:          \"local\",\n\t}\n\n\terr := cfg.Validate()\n\tassert.NoError(t, err)\n}\n\nfunc TestConfigHelperMethods(t *testing.T) {\n\tcfg := \u0026Config{\n\t\tEnvironment:               \"development\",\n\t\tJWTAccessTokenDuration:    \"15m\",\n\t\tJWTRefreshTokenDuration:   \"7d\",\n\t\tDBConnMaxLifetime:         \"1h\",\n\t\tDBConnMaxIdleTime:         \"30m\",\n\t\tDatabaseHost:              \"localhost\",\n\t\tDatabasePort:              \"5432\",\n\t\tDatabaseUser:              \"test\",\n\t\tDatabasePassword:          \"test\",\n\t\tDatabaseName:              \"test_db\",\n\t\tDatabaseSSLMode:           \"disable\",\n\t}\n\n\tassert.True(t, cfg.IsDevelopment())\n\tassert.False(t, cfg.IsProduction())\n\tassert.Contains(t, cfg.DatabaseDSN(), \"test_db\")\n\tassert.Equal(t, \"15m0s\", cfg.JWTAccessTokenDurationParsed().String())\n}\n\nfunc TestDatabaseDSN(t *testing.T) {\n\tcfg := \u0026Config{\n\t\tDatabaseHost:     \"localhost\",\n\t\tDatabasePort:     \"5432\",\n\t\tDatabaseUser:     \"testuser\",\n\t\tDatabasePassword: \"testpass\",\n\t\tDatabaseName:     \"testdb\",\n\t\tDatabaseSSLMode:  \"disable\",\n\t}\n\n\tdsn := cfg.DatabaseDSN()\n\tassert.Contains(t, dsn, \"localhost\")\n\tassert.Contains(t, dsn, \"5432\")\n\tassert.Contains(t, dsn, \"testdb\")\n\tassert.Contains(t, dsn, \"sslmode=disable\")\n}",
      "size": 2354,
      "hash": "7d433a5e50067bebd5147453a8e025dc6d4c1499e7ca29fc12254fa5a5ccf740",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/database/database.go",
      "template": true,
      "content": "package database\n\nimport (\n\t\"context\"\n\t\"database/sql\"\n\t\"log/slog\"\n\t\"time\"\n\n\t\"gorm.io/driver/postgres\"\n\t\"gorm.io/gorm\"\n\tgormlogger \"gorm.io/gorm/logger\"\n\n\t\"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\temaildomain \"github.com/acheevo/fullstack-template/internal/shared/email/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/database/migrations\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/database/seed\"\n)\n\ntype DB struct {\n\t*gorm.DB\n\tsqlDB    *sql.DB\n\tmigrator *migrations.Migrator\n\tseeder   *seed.Seeder\n\tlogger   *slog.Logger\n}\n\nfunc New(dsn string, isDevelopment bool, logger *slog.Logger, environment string) (*DB, error) {\n\tlogLevel := gormlogger.Silent\n\tif isDevelopment {\n\t\tlogLevel = gormlogger.Info\n\t}\n\n\tgormDB, err := gorm.Open(postgres.Open(dsn), \u0026gorm.Config{\n\t\tLogger: gormlogger.Default.LogMode(logLevel),\n\t})\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tsqlDB, err := gormDB.DB()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tdb := \u0026DB{\n\t\tDB:       gormDB,\n\t\tsqlDB:    sqlDB,\n\t\tmigrator: migrations.NewMigrator(gormDB),\n\t\tseeder:   seed.NewSeeder(gormDB, environment),\n\t\tlogger:   logger,\n\t}\n\n\t// Initialize migrations\n\tdb.initializeMigrations()\n\n\t// Initialize seeders\n\tdb.initializeSeeders()\n\n\t// Auto-migrate authentication tables (legacy support)\n\tif err := db.migrate(); err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn db, nil\n}\n\nfunc (db *DB) SetConnectionPool(maxIdleConns, maxOpenConns int, maxLifetime time.Duration) error {\n\tdb.sqlDB.SetMaxIdleConns(maxIdleConns)\n\tdb.sqlDB.SetMaxOpenConns(maxOpenConns)\n\tdb.sqlDB.SetConnMaxLifetime(maxLifetime)\n\treturn nil\n}\n\nfunc (db *DB) Close() error {\n\treturn db.sqlDB.Close()\n}\n\nfunc (db *DB) Ping() error {\n\treturn db.sqlDB.Ping()\n}\n\n// migrate runs database migrations for all models (legacy support)\nfunc (db *DB) migrate() error {\n\treturn db.AutoMigrate(\n\t\t\u0026domain.User{},\n\t\t\u0026domain.RefreshToken{},\n\t\t\u0026domain.PasswordReset{},\n\t\t\u0026domain.AuditLog{},\n\t\t\u0026emaildomain.QueuedEmail{},\n\t\t\u0026emaildomain.EmailDeliveryEvent{},\n\t)\n}\n\n// GetMigrator returns the database migrator\nfunc (db *DB) GetMigrator() *migrations.Migrator {\n\treturn db.migrator\n}\n\n// GetSeeder returns the database seeder\nfunc (db *DB) GetSeeder() *seed.Seeder {\n\treturn db.seeder\n}\n\n// Migrate runs all pending migrations\nfunc (db *DB) Migrate(ctx context.Context) error {\n\tdb.logger.Info(\"Running database migrations...\")\n\tif err := db.migrator.ApplyMigrations(ctx); err != nil {\n\t\tdb.logger.Error(\"Failed to run migrations\", \"error\", err)\n\t\treturn err\n\t}\n\tdb.logger.Info(\"Database migrations completed successfully\")\n\treturn nil\n}\n\n// Seed runs all applicable seeders\nfunc (db *DB) Seed(ctx context.Context) error {\n\tdb.logger.Info(\"Running database seeders...\")\n\tif err := db.seeder.SeedAll(ctx); err != nil {\n\t\tdb.logger.Error(\"Failed to run seeders\", \"error\", err)\n\t\treturn err\n\t}\n\tdb.logger.Info(\"Database seeders completed successfully\")\n\treturn nil\n}\n\n// CheckHealth performs a comprehensive health check on the database\nfunc (db *DB) CheckHealth(ctx context.Context) error {\n\t// Check basic connectivity\n\tif err := db.Ping(); err != nil {\n\t\treturn err\n\t}\n\n\t// Check if we can perform a simple query\n\tvar result int\n\tif err := db.WithContext(ctx).Raw(\"SELECT 1\").Scan(\u0026result).Error; err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\n// GetConnectionStats returns database connection statistics\nfunc (db *DB) GetConnectionStats() sql.DBStats {\n\treturn db.sqlDB.Stats()\n}\n\n// initializeMigrations registers all application migrations\nfunc (db *DB) initializeMigrations() {\n\t// Example migration - you can add more as needed\n\tdb.migrator.AddMigration(migrations.MigrationDefinition{\n\t\tVersion:     \"20240101_000001\",\n\t\tDescription: \"Create initial auth tables\",\n\t\tUp: func(ctx context.Context, db *gorm.DB) error {\n\t\t\t// This migration is handled by AutoMigrate for now\n\t\t\t// You can add custom migration logic here\n\t\t\treturn nil\n\t\t},\n\t\tDown: func(ctx context.Context, db *gorm.DB) error {\n\t\t\t// Rollback logic\n\t\t\treturn nil\n\t\t},\n\t})\n}\n\n// initializeSeeders registers all application seeders\nfunc (db *DB) initializeSeeders() {\n\t// Development user seeder\n\tdb.seeder.AddSeeder(seed.SeederDefinition{\n\t\tName:        \"dev_users\",\n\t\tDescription: \"Create development users\",\n\t\tEnvironment: []string{\"development\"},\n\t\tFn: func(ctx context.Context, db *gorm.DB) error {\n\t\t\t// Check if admin user already exists\n\t\t\tvar count int64\n\t\t\tif err := db.Model(\u0026domain.User{}).Where(\"email = ?\", \"admin@localhost\").Count(\u0026count).Error; err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tif count \u003e 0 {\n\t\t\t\treturn nil // User already exists\n\t\t\t}\n\n\t\t\t// Create admin user\n\t\t\tadmin := \u0026domain.User{\n\t\t\t\tEmail:         \"admin@localhost\",\n\t\t\t\tFirstName:     \"Admin\",\n\t\t\t\tLastName:      \"User\",\n\t\t\t\tEmailVerified: true,\n\t\t\t\tRole:          domain.RoleAdmin,\n\t\t\t\tPasswordHash:  \"$2a$12$example_hashed_password\", // bcrypt hash of \"password\"\n\t\t\t}\n\n\t\t\treturn db.Create(admin).Error\n\t\t},\n\t})\n\n\t// Production setup seeder\n\tdb.seeder.AddSeeder(seed.SeederDefinition{\n\t\tName:        \"production_setup\",\n\t\tDescription: \"Setup production environment defaults\",\n\t\tEnvironment: []string{\"production\"},\n\t\tFn: func(ctx context.Context, db *gorm.DB) error {\n\t\t\t// Add any production-specific setup here\n\t\t\treturn nil\n\t\t},\n\t})\n}",
      "size": 5233,
      "hash": "f4c70c06f0b85aec313f6cce7d5c4131d954489c6efd96db8103e145283ced01",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/database/migrations/errors.go",
      "template": true,
      "content": "package migrations\n\nimport \"errors\"\n\nvar (\n\t// ErrMigrationNotFound is returned when a migration is not found\n\tErrMigrationNotFound = errors.New(\"migration not found\")\n\n\t// ErrMigrationAlreadyApplied is returned when trying to apply an already applied migration\n\tErrMigrationAlreadyApplied = errors.New(\"migration already applied\")\n\n\t// ErrNoMigrationsToRollback is returned when there are no migrations to rollback\n\tErrNoMigrationsToRollback = errors.New(\"no migrations to rollback\")\n\n\t// ErrInvalidMigrationVersion is returned when migration version is invalid\n\tErrInvalidMigrationVersion = errors.New(\"invalid migration version\")\n)",
      "size": 634,
      "hash": "2610d20c2e2e0396e263b3cbe98996a1a0c13d838b28a9fe80248714c78b81bd",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/database/migrations/types.go",
      "template": true,
      "content": "package migrations\n\nimport (\n\t\"context\"\n\t\"time\"\n\n\t\"gorm.io/gorm\"\n)\n\n// Migration represents a database migration\ntype Migration struct {\n\tID          uint      `gorm:\"primarykey\"`\n\tVersion     string    `gorm:\"uniqueIndex;not null\"`\n\tDescription string    `gorm:\"not null\"`\n\tApplied     bool      `gorm:\"not null;default:false\"`\n\tAppliedAt   *time.Time\n\tChecksum    string    `gorm:\"not null\"`\n\tCreatedAt   time.Time\n\tUpdatedAt   time.Time\n}\n\n// MigrationFunc represents a function that performs a migration\ntype MigrationFunc func(ctx context.Context, db *gorm.DB) error\n\n// MigrationDefinition defines a migration with its up and down functions\ntype MigrationDefinition struct {\n\tVersion     string\n\tDescription string\n\tUp          MigrationFunc\n\tDown        MigrationFunc\n}\n\n// Migrator handles database migrations\ntype Migrator struct {\n\tdb         *gorm.DB\n\tmigrations []MigrationDefinition\n}\n\n// NewMigrator creates a new migrator instance\nfunc NewMigrator(db *gorm.DB) *Migrator {\n\treturn \u0026Migrator{\n\t\tdb:         db,\n\t\tmigrations: make([]MigrationDefinition, 0),\n\t}\n}\n\n// AddMigration adds a migration to the migrator\nfunc (m *Migrator) AddMigration(migration MigrationDefinition) {\n\tm.migrations = append(m.migrations, migration)\n}\n\n// GetPendingMigrations returns migrations that haven't been applied\nfunc (m *Migrator) GetPendingMigrations(ctx context.Context) ([]MigrationDefinition, error) {\n\t// Ensure migrations table exists\n\tif err := m.db.AutoMigrate(\u0026Migration{}); err != nil {\n\t\treturn nil, err\n\t}\n\n\tvar appliedMigrations []Migration\n\tif err := m.db.WithContext(ctx).Where(\"applied = ?\", true).Find(\u0026appliedMigrations).Error; err != nil {\n\t\treturn nil, err\n\t}\n\n\tappliedVersions := make(map[string]bool)\n\tfor _, migration := range appliedMigrations {\n\t\tappliedVersions[migration.Version] = true\n\t}\n\n\tvar pending []MigrationDefinition\n\tfor _, migration := range m.migrations {\n\t\tif !appliedVersions[migration.Version] {\n\t\t\tpending = append(pending, migration)\n\t\t}\n\t}\n\n\treturn pending, nil\n}\n\n// ApplyMigrations applies all pending migrations\nfunc (m *Migrator) ApplyMigrations(ctx context.Context) error {\n\tpending, err := m.GetPendingMigrations(ctx)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tfor _, migration := range pending {\n\t\tif err := m.applyMigration(ctx, migration); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\treturn nil\n}\n\n// applyMigration applies a single migration\nfunc (m *Migrator) applyMigration(ctx context.Context, migration MigrationDefinition) error {\n\treturn m.db.Transaction(func(tx *gorm.DB) error {\n\t\t// Run the migration\n\t\tif err := migration.Up(ctx, tx); err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t// Record the migration as applied\n\t\tnow := time.Now()\n\t\tmigrationRecord := Migration{\n\t\t\tVersion:     migration.Version,\n\t\t\tDescription: migration.Description,\n\t\t\tApplied:     true,\n\t\t\tAppliedAt:   \u0026now,\n\t\t\tChecksum:    generateChecksum(migration.Version + migration.Description),\n\t\t}\n\n\t\treturn tx.WithContext(ctx).Create(\u0026migrationRecord).Error\n\t})\n}\n\n// RollbackMigration rolls back the last applied migration\nfunc (m *Migrator) RollbackMigration(ctx context.Context) error {\n\tvar lastMigration Migration\n\tif err := m.db.WithContext(ctx).\n\t\tWhere(\"applied = ?\", true).\n\t\tOrder(\"applied_at DESC\").\n\t\tFirst(\u0026lastMigration).Error; err != nil {\n\t\treturn err\n\t}\n\n\t// Find the migration definition\n\tvar migrationDef *MigrationDefinition\n\tfor _, migration := range m.migrations {\n\t\tif migration.Version == lastMigration.Version {\n\t\t\tmigrationDef = \u0026migration\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif migrationDef == nil {\n\t\treturn ErrMigrationNotFound\n\t}\n\n\treturn m.db.Transaction(func(tx *gorm.DB) error {\n\t\t// Run the rollback\n\t\tif err := migrationDef.Down(ctx, tx); err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t// Mark migration as not applied\n\t\treturn tx.WithContext(ctx).\n\t\t\tModel(\u0026lastMigration).\n\t\t\tUpdates(map[string]interface{}{\n\t\t\t\t\"applied\":    false,\n\t\t\t\t\"applied_at\": nil,\n\t\t\t}).Error\n\t})\n}\n\n// generateChecksum generates a simple checksum for migration tracking\nfunc generateChecksum(data string) string {\n\t// Simple hash function for demonstration\n\t// In production, you might want to use a proper hash function\n\thash := uint32(0)\n\tfor _, c := range data {\n\t\thash = hash*31 + uint32(c)\n\t}\n\treturn string(rune(hash))\n}",
      "size": 4214,
      "hash": "571785fa1c2ed9cf66314c66a85695855f030b820949d333a998641c43eacc55",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/database/seed/errors.go",
      "template": true,
      "content": "package seed\n\nimport \"errors\"\n\nvar (\n\t// ErrSeederNotFound is returned when a seeder is not found\n\tErrSeederNotFound = errors.New(\"seeder not found\")\n\n\t// ErrSeederAlreadyApplied is returned when trying to apply an already applied seeder\n\tErrSeederAlreadyApplied = errors.New(\"seeder already applied\")\n\n\t// ErrCircularDependency is returned when there's a circular dependency in seeders\n\tErrCircularDependency = errors.New(\"circular dependency detected in seeders\")\n\n\t// ErrDependencyNotFound is returned when a dependency seeder is not found\n\tErrDependencyNotFound = errors.New(\"dependency seeder not found\")\n)",
      "size": 611,
      "hash": "b3c7c24569da49d17db49c2ff17ac845dbc8980d5d25c7cb62074f64f9bf18cc",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/database/seed/types.go",
      "template": true,
      "content": "package seed\n\nimport (\n\t\"context\"\n\t\"time\"\n\n\t\"gorm.io/gorm\"\n)\n\n// Seed represents a database seed\ntype Seed struct {\n\tID        uint      `gorm:\"primarykey\"`\n\tName      string    `gorm:\"uniqueIndex;not null\"`\n\tApplied   bool      `gorm:\"not null;default:false\"`\n\tAppliedAt *time.Time\n\tChecksum  string    `gorm:\"not null\"`\n\tCreatedAt time.Time\n\tUpdatedAt time.Time\n}\n\n// SeederFunc represents a function that performs seeding\ntype SeederFunc func(ctx context.Context, db *gorm.DB) error\n\n// SeederDefinition defines a seeder with its function\ntype SeederDefinition struct {\n\tName        string\n\tDescription string\n\tFn          SeederFunc\n\t// Dependencies list other seeders this one depends on\n\tDependencies []string\n\t// Environment specifies which environments this seeder should run in\n\t// If empty, runs in all environments\n\tEnvironment []string\n}\n\n// Seeder handles database seeding\ntype Seeder struct {\n\tdb      *gorm.DB\n\tseeders map[string]SeederDefinition\n\tenv     string\n}\n\n// NewSeeder creates a new seeder instance\nfunc NewSeeder(db *gorm.DB, environment string) *Seeder {\n\treturn \u0026Seeder{\n\t\tdb:      db,\n\t\tseeders: make(map[string]SeederDefinition),\n\t\tenv:     environment,\n\t}\n}\n\n// AddSeeder adds a seeder to the seeder registry\nfunc (s *Seeder) AddSeeder(seeder SeederDefinition) {\n\ts.seeders[seeder.Name] = seeder\n}\n\n// SeedAll runs all applicable seeders for the current environment\nfunc (s *Seeder) SeedAll(ctx context.Context) error {\n\t// Ensure seeds table exists\n\tif err := s.db.AutoMigrate(\u0026Seed{}); err != nil {\n\t\treturn err\n\t}\n\n\t// Get all applicable seeders for current environment\n\tapplicable := s.getApplicableSeeders()\n\t\n\t// Resolve dependencies and get execution order\n\tordered, err := s.resolveDependencies(applicable)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Get already applied seeds\n\tapplied, err := s.getAppliedSeeds(ctx)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Run pending seeders\n\tfor _, seederName := range ordered {\n\t\tif applied[seederName] {\n\t\t\tcontinue\n\t\t}\n\n\t\tseeder := s.seeders[seederName]\n\t\tif err := s.runSeeder(ctx, seeder); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\treturn nil\n}\n\n// SeedSpecific runs a specific seeder by name\nfunc (s *Seeder) SeedSpecific(ctx context.Context, name string) error {\n\tseeder, exists := s.seeders[name]\n\tif !exists {\n\t\treturn ErrSeederNotFound\n\t}\n\n\t// Check if already applied\n\tapplied, err := s.getAppliedSeeds(ctx)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tif applied[name] {\n\t\treturn ErrSeederAlreadyApplied\n\t}\n\n\treturn s.runSeeder(ctx, seeder)\n}\n\n// getApplicableSeeders returns seeders that should run in current environment\nfunc (s *Seeder) getApplicableSeeders() []string {\n\tvar applicable []string\n\tfor name, seeder := range s.seeders {\n\t\tif len(seeder.Environment) == 0 {\n\t\t\t// Run in all environments\n\t\t\tapplicable = append(applicable, name)\n\t\t\tcontinue\n\t\t}\n\n\t\tfor _, env := range seeder.Environment {\n\t\t\tif env == s.env {\n\t\t\t\tapplicable = append(applicable, name)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\treturn applicable\n}\n\n// resolveDependencies resolves seeder dependencies and returns execution order\nfunc (s *Seeder) resolveDependencies(seeders []string) ([]string, error) {\n\tvisited := make(map[string]bool)\n\tvisiting := make(map[string]bool)\n\tvar result []string\n\n\tvar visit func(string) error\n\tvisit = func(name string) error {\n\t\tif visiting[name] {\n\t\t\treturn ErrCircularDependency\n\t\t}\n\t\tif visited[name] {\n\t\t\treturn nil\n\t\t}\n\n\t\tvisiting[name] = true\n\n\t\tseeder, exists := s.seeders[name]\n\t\tif !exists {\n\t\t\treturn ErrSeederNotFound\n\t\t}\n\n\t\tfor _, dep := range seeder.Dependencies {\n\t\t\tif err := visit(dep); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\n\t\tvisiting[name] = false\n\t\tvisited[name] = true\n\t\tresult = append(result, name)\n\n\t\treturn nil\n\t}\n\n\tfor _, name := range seeders {\n\t\tif err := visit(name); err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t}\n\n\treturn result, nil\n}\n\n// getAppliedSeeds returns a map of applied seed names\nfunc (s *Seeder) getAppliedSeeds(ctx context.Context) (map[string]bool, error) {\n\tvar seeds []Seed\n\tif err := s.db.WithContext(ctx).Where(\"applied = ?\", true).Find(\u0026seeds).Error; err != nil {\n\t\treturn nil, err\n\t}\n\n\tapplied := make(map[string]bool)\n\tfor _, seed := range seeds {\n\t\tapplied[seed.Name] = true\n\t}\n\n\treturn applied, nil\n}\n\n// runSeeder executes a seeder and records it as applied\nfunc (s *Seeder) runSeeder(ctx context.Context, seeder SeederDefinition) error {\n\treturn s.db.Transaction(func(tx *gorm.DB) error {\n\t\t// Run the seeder\n\t\tif err := seeder.Fn(ctx, tx); err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t// Record as applied\n\t\tnow := time.Now()\n\t\tseedRecord := Seed{\n\t\t\tName:      seeder.Name,\n\t\t\tApplied:   true,\n\t\t\tAppliedAt: \u0026now,\n\t\t\tChecksum:  generateChecksum(seeder.Name + seeder.Description),\n\t\t}\n\n\t\treturn tx.WithContext(ctx).Create(\u0026seedRecord).Error\n\t})\n}\n\n// generateChecksum generates a simple checksum for seed tracking\nfunc generateChecksum(data string) string {\n\thash := uint32(0)\n\tfor _, c := range data {\n\t\thash = hash*31 + uint32(c)\n\t}\n\treturn string(rune(hash))\n}",
      "size": 4960,
      "hash": "028836678cd0bd23c5054f194167f33a89fa65f7c860b6f84fad8d5259cb9b83",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/email/domain/errors.go",
      "template": true,
      "content": "package domain\n\nimport \"errors\"\n\nvar (\n\t// ErrEmailProviderNotConfigured is returned when the email provider is not properly configured\n\tErrEmailProviderNotConfigured = errors.New(\"email provider not configured\")\n\n\t// ErrTemplateNotFound is returned when a template is not found\n\tErrTemplateNotFound = errors.New(\"email template not found\")\n\n\t// ErrTemplateInvalid is returned when a template is invalid\n\tErrTemplateInvalid = errors.New(\"email template is invalid\")\n\n\t// ErrTemplateMissingVariables is returned when required template variables are missing\n\tErrTemplateMissingVariables = errors.New(\"required template variables are missing\")\n\n\t// ErrInvalidEmailAddress is returned when an email address is invalid\n\tErrInvalidEmailAddress = errors.New(\"invalid email address\")\n\n\t// ErrEmailQueueFull is returned when the email queue is full\n\tErrEmailQueueFull = errors.New(\"email queue is full\")\n\n\t// ErrEmailNotFound is returned when an email is not found in the queue\n\tErrEmailNotFound = errors.New(\"email not found\")\n\n\t// ErrMaxRetriesExceeded is returned when maximum retry attempts are exceeded\n\tErrMaxRetriesExceeded = errors.New(\"maximum retry attempts exceeded\")\n\n\t// ErrEmailTooLarge is returned when an email exceeds size limits\n\tErrEmailTooLarge = errors.New(\"email exceeds size limits\")\n\n\t// ErrAttachmentTooLarge is returned when an attachment exceeds size limits\n\tErrAttachmentTooLarge = errors.New(\"attachment exceeds size limits\")\n\n\t// ErrProviderRateLimit is returned when the provider rate limit is exceeded\n\tErrProviderRateLimit = errors.New(\"provider rate limit exceeded\")\n\n\t// ErrProviderTemporaryFailure is returned when the provider has a temporary failure\n\tErrProviderTemporaryFailure = errors.New(\"provider temporary failure\")\n\n\t// ErrProviderPermanentFailure is returned when the provider has a permanent failure\n\tErrProviderPermanentFailure = errors.New(\"provider permanent failure\")\n\n\t// ErrWebhookSignatureInvalid is returned when a webhook signature is invalid\n\tErrWebhookSignatureInvalid = errors.New(\"webhook signature is invalid\")\n\n\t// ErrDeliveryTracking is returned when delivery tracking fails\n\tErrDeliveryTracking = errors.New(\"delivery tracking failed\")\n)",
      "size": 2192,
      "hash": "876675aea8cd9b3654f448abda3f28728e1574f6887ca20edeee5aa01399a128",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/email/domain/types.go",
      "template": true,
      "content": "package domain\n\nimport (\n\t\"context\"\n\t\"time\"\n)\n\n// EmailProvider represents the different email service providers\ntype EmailProvider string\n\nconst (\n\tProviderSMTP     EmailProvider = \"smtp\"\n\tProviderSendGrid EmailProvider = \"sendgrid\"\n\tProviderPostmark EmailProvider = \"postmark\"\n\tProviderMailgun  EmailProvider = \"mailgun\"\n)\n\n// EmailPriority represents the priority of an email\ntype EmailPriority int\n\nconst (\n\tPriorityLow EmailPriority = iota\n\tPriorityNormal\n\tPriorityHigh\n\tPriorityCritical\n)\n\n// EmailStatus represents the status of an email\ntype EmailStatus string\n\nconst (\n\tStatusPending   EmailStatus = \"pending\"\n\tStatusSending   EmailStatus = \"sending\"\n\tStatusSent      EmailStatus = \"sent\"\n\tStatusFailed    EmailStatus = \"failed\"\n\tStatusRetrying  EmailStatus = \"retrying\"\n\tStatusCancelled EmailStatus = \"cancelled\"\n)\n\n// EmailTemplate represents an email template\ntype EmailTemplate struct {\n\tID          string            `json:\"id\"`\n\tName        string            `json:\"name\"`\n\tSubject     string            `json:\"subject\"`\n\tHTMLBody    string            `json:\"html_body\"`\n\tTextBody    string            `json:\"text_body\"`\n\tVariables   []string          `json:\"variables\"`\n\tMetadata    map[string]string `json:\"metadata\"`\n\tCreatedAt   time.Time         `json:\"created_at\"`\n\tUpdatedAt   time.Time         `json:\"updated_at\"`\n}\n\n// EmailMessage represents an email message\ntype EmailMessage struct {\n\tID          string                 `json:\"id\"`\n\tFrom        string                 `json:\"from\"`\n\tFromName    string                 `json:\"from_name\"`\n\tTo          []string               `json:\"to\"`\n\tCC          []string               `json:\"cc,omitempty\"`\n\tBCC         []string               `json:\"bcc,omitempty\"`\n\tReplyTo     string                 `json:\"reply_to,omitempty\"`\n\tSubject     string                 `json:\"subject\"`\n\tHTMLBody    string                 `json:\"html_body,omitempty\"`\n\tTextBody    string                 `json:\"text_body,omitempty\"`\n\tTemplateID  string                 `json:\"template_id,omitempty\"`\n\tVariables   map[string]interface{} `json:\"variables,omitempty\"`\n\tAttachments []EmailAttachment      `json:\"attachments,omitempty\"`\n\tHeaders     map[string]string      `json:\"headers,omitempty\"`\n\tTags        []string               `json:\"tags,omitempty\"`\n\tMetadata    map[string]string      `json:\"metadata,omitempty\"`\n\tPriority    EmailPriority          `json:\"priority\"`\n\tScheduledAt *time.Time             `json:\"scheduled_at,omitempty\"`\n\tCreatedAt   time.Time              `json:\"created_at\"`\n}\n\n// EmailAttachment represents an email attachment\ntype EmailAttachment struct {\n\tName        string `json:\"name\"`\n\tContentType string `json:\"content_type\"`\n\tData        []byte `json:\"data\"`\n\tInline      bool   `json:\"inline\"`\n\tContentID   string `json:\"content_id,omitempty\"`\n}\n\n// QueuedEmail represents an email in the queue\ntype QueuedEmail struct {\n\tID          string        `json:\"id\" gorm:\"primarykey\"`\n\tMessageID   string        `json:\"message_id\" gorm:\"uniqueIndex;not null\"`\n\tFrom        string        `json:\"from\" gorm:\"not null\"`\n\tFromName    string        `json:\"from_name\"`\n\tTo          string        `json:\"to\" gorm:\"not null\"` // JSON array as string\n\tCC          string        `json:\"cc\"`                 // JSON array as string\n\tBCC         string        `json:\"bcc\"`                // JSON array as string\n\tReplyTo     string        `json:\"reply_to\"`\n\tSubject     string        `json:\"subject\" gorm:\"not null\"`\n\tHTMLBody    string        `json:\"html_body\" gorm:\"type:text\"`\n\tTextBody    string        `json:\"text_body\" gorm:\"type:text\"`\n\tTemplateID  string        `json:\"template_id\"`\n\tVariables   string        `json:\"variables\" gorm:\"type:text\"` // JSON as string\n\tAttachments string        `json:\"attachments\" gorm:\"type:text\"` // JSON as string\n\tHeaders     string        `json:\"headers\" gorm:\"type:text\"` // JSON as string\n\tTags        string        `json:\"tags\"`                     // JSON array as string\n\tMetadata    string        `json:\"metadata\" gorm:\"type:text\"` // JSON as string\n\tPriority    EmailPriority `json:\"priority\" gorm:\"default:1\"`\n\tStatus      EmailStatus   `json:\"status\" gorm:\"default:'pending'\"`\n\tProvider    EmailProvider `json:\"provider\"`\n\tAttemptCount int          `json:\"attempt_count\" gorm:\"default:0\"`\n\tMaxRetries  int           `json:\"max_retries\" gorm:\"default:3\"`\n\tLastError   string        `json:\"last_error\" gorm:\"type:text\"`\n\tScheduledAt *time.Time    `json:\"scheduled_at\"`\n\tSentAt      *time.Time    `json:\"sent_at\"`\n\tCreatedAt   time.Time     `json:\"created_at\"`\n\tUpdatedAt   time.Time     `json:\"updated_at\"`\n}\n\n// EmailDeliveryEvent represents an email delivery event\ntype EmailDeliveryEvent struct {\n\tID        string            `json:\"id\" gorm:\"primarykey\"`\n\tEmailID   string            `json:\"email_id\" gorm:\"not null;index\"`\n\tEvent     string            `json:\"event\" gorm:\"not null\"` // sent, delivered, opened, clicked, bounced, complained\n\tData      string            `json:\"data\" gorm:\"type:text\"` // JSON data specific to event\n\tProvider  EmailProvider     `json:\"provider\"`\n\tTimestamp time.Time         `json:\"timestamp\"`\n\tCreatedAt time.Time         `json:\"created_at\"`\n}\n\n// EmailStats represents email statistics\ntype EmailStats struct {\n\tTotalSent      int64   `json:\"total_sent\"`\n\tTotalDelivered int64   `json:\"total_delivered\"`\n\tTotalOpened    int64   `json:\"total_opened\"`\n\tTotalClicked   int64   `json:\"total_clicked\"`\n\tTotalBounced   int64   `json:\"total_bounced\"`\n\tTotalFailed    int64   `json:\"total_failed\"`\n\tDeliveryRate   float64 `json:\"delivery_rate\"`\n\tOpenRate       float64 `json:\"open_rate\"`\n\tClickRate      float64 `json:\"click_rate\"`\n\tBounceRate     float64 `json:\"bounce_rate\"`\n}\n\n// EmailProvider interface defines the contract for email providers\ntype EmailProviderInterface interface {\n\tSend(ctx context.Context, message *EmailMessage) (*EmailResult, error)\n\tSendTemplate(ctx context.Context, templateID string, to []string, variables map[string]interface{}) (*EmailResult, error)\n\tGetDeliveryStatus(ctx context.Context, messageID string) (*EmailDeliveryStatus, error)\n\tSupportsTemplates() bool\n\tSupportsWebhooks() bool\n\tGetProviderName() EmailProvider\n}\n\n// EmailResult represents the result of sending an email\ntype EmailResult struct {\n\tMessageID    string            `json:\"message_id\"`\n\tProviderID   string            `json:\"provider_id\"`\n\tStatus       EmailStatus       `json:\"status\"`\n\tMessage      string            `json:\"message,omitempty\"`\n\tMetadata     map[string]string `json:\"metadata,omitempty\"`\n}\n\n// EmailDeliveryStatus represents the delivery status of an email\ntype EmailDeliveryStatus struct {\n\tMessageID   string      `json:\"message_id\"`\n\tStatus      EmailStatus `json:\"status\"`\n\tDeliveredAt *time.Time  `json:\"delivered_at,omitempty\"`\n\tOpenedAt    *time.Time  `json:\"opened_at,omitempty\"`\n\tClickedAt   *time.Time  `json:\"clicked_at,omitempty\"`\n\tBouncedAt   *time.Time  `json:\"bounced_at,omitempty\"`\n\tError       string      `json:\"error,omitempty\"`\n\tEvents      []EmailDeliveryEvent `json:\"events,omitempty\"`\n}\n\n// EmailQueue interface defines the contract for email queuing\ntype EmailQueueInterface interface {\n\tEnqueue(ctx context.Context, message *EmailMessage) error\n\tDequeue(ctx context.Context, limit int) ([]*QueuedEmail, error)\n\tMarkSent(ctx context.Context, emailID string, result *EmailResult) error\n\tMarkFailed(ctx context.Context, emailID string, err error) error\n\tRetryFailed(ctx context.Context, maxRetries int) error\n\tGetStats(ctx context.Context) (*QueueStats, error)\n\tPurgeOld(ctx context.Context, olderThan time.Duration) error\n}\n\n// QueueStats represents queue statistics\ntype QueueStats struct {\n\tPending   int64 `json:\"pending\"`\n\tSending   int64 `json:\"sending\"`\n\tSent      int64 `json:\"sent\"`\n\tFailed    int64 `json:\"failed\"`\n\tRetrying  int64 `json:\"retrying\"`\n\tScheduled int64 `json:\"scheduled\"`\n}\n\n// EmailTemplateEngine interface defines the contract for template engines\ntype EmailTemplateEngine interface {\n\tRender(templateID string, variables map[string]interface{}) (*RenderedTemplate, error)\n\tRegisterTemplate(template *EmailTemplate) error\n\tGetTemplate(templateID string) (*EmailTemplate, error)\n\tListTemplates() ([]*EmailTemplate, error)\n\tValidateTemplate(template *EmailTemplate) error\n}\n\n// RenderedTemplate represents a rendered email template\ntype RenderedTemplate struct {\n\tSubject  string `json:\"subject\"`\n\tHTMLBody string `json:\"html_body\"`\n\tTextBody string `json:\"text_body\"`\n}\n\n// EmailService interface defines the main email service contract\ntype EmailServiceInterface interface {\n\t// Basic sending\n\tSend(ctx context.Context, message *EmailMessage) error\n\tSendTemplate(ctx context.Context, templateID string, to []string, variables map[string]interface{}) error\n\tSendImmediate(ctx context.Context, message *EmailMessage) (*EmailResult, error)\n\t\n\t// Scheduling\n\tSchedule(ctx context.Context, message *EmailMessage, scheduledAt time.Time) error\n\t\n\t// Template management\n\tRegisterTemplate(template *EmailTemplate) error\n\tGetTemplate(templateID string) (*EmailTemplate, error)\n\t\n\t// Queue management\n\tProcessQueue(ctx context.Context) error\n\tGetQueueStats(ctx context.Context) (*QueueStats, error)\n\t\n\t// Delivery tracking\n\tGetDeliveryStatus(ctx context.Context, messageID string) (*EmailDeliveryStatus, error)\n\tGetEmailStats(ctx context.Context) (*EmailStats, error)\n\t\n\t// Health check\n\tHealthCheck(ctx context.Context) error\n}",
      "size": 9428,
      "hash": "c9072b88dbdde140559ed81b421c7313ff29ac850622a4dbc334ff509584fc2b",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/email/providers/smtp.go",
      "template": true,
      "content": "package providers\n\nimport (\n\t\"context\"\n\t\"crypto/tls\"\n\t\"fmt\"\n\t\"io\"\n\t\"net/smtp\"\n\t\"time\"\n\n\t\"gopkg.in/gomail.v2\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/email/domain\"\n)\n\n// SMTPProvider implements the EmailProvider interface for SMTP\ntype SMTPProvider struct {\n\tconfig *config.Config\n\tdialer *gomail.Dialer\n}\n\n// NewSMTPProvider creates a new SMTP email provider\nfunc NewSMTPProvider(cfg *config.Config) *SMTPProvider {\n\tdialer := gomail.NewDialer(\n\t\tcfg.SMTPHost,\n\t\tcfg.SMTPPort,\n\t\tcfg.SMTPUsername,\n\t\tcfg.SMTPPassword,\n\t)\n\t\n\t// Configure TLS\n\tif cfg.SMTPUseTLS {\n\t\tdialer.TLSConfig = \u0026tls.Config{\n\t\t\tServerName:         cfg.SMTPHost,\n\t\t\tInsecureSkipVerify: cfg.IsDevelopment(), // Only skip in development\n\t\t}\n\t}\n\n\t// Set authentication method\n\tif cfg.SMTPUsername != \"\" \u0026\u0026 cfg.SMTPPassword != \"\" {\n\t\tdialer.Auth = smtp.PlainAuth(\"\", cfg.SMTPUsername, cfg.SMTPPassword, cfg.SMTPHost)\n\t}\n\n\treturn \u0026SMTPProvider{\n\t\tconfig: cfg,\n\t\tdialer: dialer,\n\t}\n}\n\n// Send sends an email message via SMTP\nfunc (p *SMTPProvider) Send(ctx context.Context, message *domain.EmailMessage) (*domain.EmailResult, error) {\n\tif p.dialer == nil {\n\t\treturn nil, domain.ErrEmailProviderNotConfigured\n\t}\n\n\t// Create the email message\n\tm := gomail.NewMessage()\n\t\n\t// Set headers\n\tif message.FromName != \"\" {\n\t\tm.SetHeader(\"From\", m.FormatAddress(message.From, message.FromName))\n\t} else {\n\t\tm.SetHeader(\"From\", message.From)\n\t}\n\t\n\tm.SetHeader(\"To\", message.To...)\n\tm.SetHeader(\"Subject\", message.Subject)\n\t\n\tif len(message.CC) \u003e 0 {\n\t\tm.SetHeader(\"Cc\", message.CC...)\n\t}\n\t\n\tif len(message.BCC) \u003e 0 {\n\t\tm.SetHeader(\"Bcc\", message.BCC...)\n\t}\n\t\n\tif message.ReplyTo != \"\" {\n\t\tm.SetHeader(\"Reply-To\", message.ReplyTo)\n\t}\n\n\t// Set custom headers\n\tfor key, value := range message.Headers {\n\t\tm.SetHeader(key, value)\n\t}\n\n\t// Set message ID header for tracking\n\tm.SetHeader(\"Message-ID\", fmt.Sprintf(\"\u003c%s@%s\u003e\", message.ID, p.config.SMTPHost))\n\n\t// Set body\n\tif message.TextBody != \"\" {\n\t\tm.SetBody(\"text/plain\", message.TextBody)\n\t}\n\t\n\tif message.HTMLBody != \"\" {\n\t\tif message.TextBody != \"\" {\n\t\t\tm.AddAlternative(\"text/html\", message.HTMLBody)\n\t\t} else {\n\t\t\tm.SetBody(\"text/html\", message.HTMLBody)\n\t\t}\n\t}\n\n\t// Add attachments\n\tfor _, attachment := range message.Attachments {\n\t\tif attachment.Inline {\n\t\t\tm.Embed(attachment.Name, gomail.SetCopyFunc(func(w io.Writer) error {\n\t\t\t\t_, err := w.Write(attachment.Data)\n\t\t\t\treturn err\n\t\t\t}))\n\t\t} else {\n\t\t\tm.Attach(attachment.Name, gomail.SetCopyFunc(func(w io.Writer) error {\n\t\t\t\t_, err := w.Write(attachment.Data)\n\t\t\t\treturn err\n\t\t\t}))\n\t\t}\n\t}\n\n\t// Send with timeout\n\tdone := make(chan error, 1)\n\tgo func() {\n\t\tdone \u003c- p.dialer.DialAndSend(m)\n\t}()\n\n\tselect {\n\tcase err := \u003c-done:\n\t\tif err != nil {\n\t\t\treturn \u0026domain.EmailResult{\n\t\t\t\tMessageID: message.ID,\n\t\t\t\tStatus:    domain.StatusFailed,\n\t\t\t\tMessage:   err.Error(),\n\t\t\t}, err\n\t\t}\n\t\t\n\t\treturn \u0026domain.EmailResult{\n\t\t\tMessageID: message.ID,\n\t\t\tStatus:    domain.StatusSent,\n\t\t\tMessage:   \"Email sent successfully via SMTP\",\n\t\t\tMetadata: map[string]string{\n\t\t\t\t\"provider\": string(domain.ProviderSMTP),\n\t\t\t\t\"host\":     p.config.SMTPHost,\n\t\t\t\t\"sent_at\":  time.Now().UTC().Format(time.RFC3339),\n\t\t\t},\n\t\t}, nil\n\t\t\n\tcase \u003c-ctx.Done():\n\t\treturn \u0026domain.EmailResult{\n\t\t\tMessageID: message.ID,\n\t\t\tStatus:    domain.StatusFailed,\n\t\t\tMessage:   \"SMTP send timeout\",\n\t\t}, ctx.Err()\n\t}\n}\n\n// SendTemplate sends an email using a template (SMTP doesn't support server-side templates)\nfunc (p *SMTPProvider) SendTemplate(ctx context.Context, templateID string, to []string, variables map[string]interface{}) (*domain.EmailResult, error) {\n\t// SMTP doesn't support server-side templates, this should be handled by the template engine\n\treturn nil, fmt.Errorf(\"SMTP provider does not support server-side templates, use the template engine\")\n}\n\n// GetDeliveryStatus gets the delivery status of an email (SMTP doesn't support delivery tracking)\nfunc (p *SMTPProvider) GetDeliveryStatus(ctx context.Context, messageID string) (*domain.EmailDeliveryStatus, error) {\n\t// SMTP doesn't provide delivery status tracking\n\treturn \u0026domain.EmailDeliveryStatus{\n\t\tMessageID: messageID,\n\t\tStatus:    domain.StatusSent, // We can only confirm it was sent, not delivered\n\t}, nil\n}\n\n// SupportsTemplates returns whether this provider supports server-side templates\nfunc (p *SMTPProvider) SupportsTemplates() bool {\n\treturn false\n}\n\n// SupportsWebhooks returns whether this provider supports webhooks\nfunc (p *SMTPProvider) SupportsWebhooks() bool {\n\treturn false\n}\n\n// GetProviderName returns the provider name\nfunc (p *SMTPProvider) GetProviderName() domain.EmailProvider {\n\treturn domain.ProviderSMTP\n}\n\n// HealthCheck performs a health check on the SMTP connection\nfunc (p *SMTPProvider) HealthCheck(ctx context.Context) error {\n\tif p.dialer == nil {\n\t\treturn domain.ErrEmailProviderNotConfigured\n\t}\n\n\t// Try to establish a connection\n\tconn, err := p.dialer.Dial()\n\tif err != nil {\n\t\treturn fmt.Errorf(\"SMTP health check failed: %w\", err)\n\t}\n\tdefer conn.Close()\n\n\treturn nil\n}",
      "size": 5082,
      "hash": "ed3b53e5a58470141c0224599d68bccbfbc199384dafc06a90cb8b950e26bbae",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/email/queue/database.go",
      "template": true,
      "content": "package queue\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log/slog\"\n\t\"time\"\n\n\t\"github.com/google/uuid\"\n\t\"gorm.io/gorm\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/email/domain\"\n)\n\n// DatabaseQueue implements EmailQueueInterface using database storage\ntype DatabaseQueue struct {\n\tdb     *gorm.DB\n\tlogger *slog.Logger\n}\n\n// NewDatabaseQueue creates a new database-backed email queue\nfunc NewDatabaseQueue(db *gorm.DB, logger *slog.Logger) *DatabaseQueue {\n\treturn \u0026DatabaseQueue{\n\t\tdb:     db,\n\t\tlogger: logger,\n\t}\n}\n\n// Enqueue adds an email message to the queue\nfunc (q *DatabaseQueue) Enqueue(ctx context.Context, message *domain.EmailMessage) error {\n\t// Convert message to queued email\n\tqueuedEmail, err := q.messageToQueuedEmail(message)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to convert message to queued email: %w\", err)\n\t}\n\n\t// Save to database\n\tif err := q.db.WithContext(ctx).Create(queuedEmail).Error; err != nil {\n\t\tq.logger.Error(\"failed to enqueue email\", \"error\", err, \"message_id\", message.ID)\n\t\treturn fmt.Errorf(\"failed to enqueue email: %w\", err)\n\t}\n\n\tq.logger.Info(\"email enqueued successfully\", \n\t\t\"message_id\", message.ID, \n\t\t\"to\", message.To, \n\t\t\"subject\", message.Subject,\n\t\t\"priority\", message.Priority,\n\t)\n\n\treturn nil\n}\n\n// Dequeue retrieves emails from the queue for processing\nfunc (q *DatabaseQueue) Dequeue(ctx context.Context, limit int) ([]*domain.QueuedEmail, error) {\n\tvar emails []*domain.QueuedEmail\n\n\t// Get emails ready for processing (pending or retrying, and scheduled time has passed)\n\tnow := time.Now()\n\terr := q.db.WithContext(ctx).\n\t\tWhere(\"status IN (?, ?) AND (scheduled_at IS NULL OR scheduled_at \u003c= ?)\", \n\t\t\tdomain.StatusPending, domain.StatusRetrying, now).\n\t\tOrder(\"priority DESC, created_at ASC\").\n\t\tLimit(limit).\n\t\tFind(\u0026emails).Error\n\n\tif err != nil {\n\t\tq.logger.Error(\"failed to dequeue emails\", \"error\", err)\n\t\treturn nil, fmt.Errorf(\"failed to dequeue emails: %w\", err)\n\t}\n\n\t// Mark emails as sending to prevent duplicate processing\n\tif len(emails) \u003e 0 {\n\t\tvar ids []string\n\t\tfor _, email := range emails {\n\t\t\tids = append(ids, email.ID)\n\t\t}\n\n\t\terr = q.db.WithContext(ctx).\n\t\t\tModel(\u0026domain.QueuedEmail{}).\n\t\t\tWhere(\"id IN ?\", ids).\n\t\t\tUpdate(\"status\", domain.StatusSending).Error\n\n\t\tif err != nil {\n\t\t\tq.logger.Error(\"failed to mark emails as sending\", \"error\", err)\n\t\t\treturn nil, fmt.Errorf(\"failed to mark emails as sending: %w\", err)\n\t\t}\n\t}\n\n\tq.logger.Debug(\"dequeued emails for processing\", \"count\", len(emails))\n\treturn emails, nil\n}\n\n// MarkSent marks an email as successfully sent\nfunc (q *DatabaseQueue) MarkSent(ctx context.Context, emailID string, result *domain.EmailResult) error {\n\tupdates := map[string]interface{}{\n\t\t\"status\":  domain.StatusSent,\n\t\t\"sent_at\": time.Now(),\n\t}\n\n\tif result != nil {\n\t\tif result.Metadata != nil {\n\t\t\tmetadataJSON, _ := json.Marshal(result.Metadata)\n\t\t\tupdates[\"metadata\"] = string(metadataJSON)\n\t\t}\n\t}\n\n\terr := q.db.WithContext(ctx).\n\t\tModel(\u0026domain.QueuedEmail{}).\n\t\tWhere(\"id = ?\", emailID).\n\t\tUpdates(updates).Error\n\n\tif err != nil {\n\t\tq.logger.Error(\"failed to mark email as sent\", \"error\", err, \"email_id\", emailID)\n\t\treturn fmt.Errorf(\"failed to mark email as sent: %w\", err)\n\t}\n\n\tq.logger.Info(\"email marked as sent\", \"email_id\", emailID)\n\treturn nil\n}\n\n// MarkFailed marks an email as failed\nfunc (q *DatabaseQueue) MarkFailed(ctx context.Context, emailID string, failureErr error) error {\n\tvar queuedEmail domain.QueuedEmail\n\tif err := q.db.WithContext(ctx).Where(\"id = ?\", emailID).First(\u0026queuedEmail).Error; err != nil {\n\t\treturn fmt.Errorf(\"failed to find email: %w\", err)\n\t}\n\n\tqueuedEmail.AttemptCount++\n\tqueuedEmail.LastError = failureErr.Error()\n\n\t// Check if we should retry or mark as permanently failed\n\tif queuedEmail.AttemptCount \u003e= queuedEmail.MaxRetries {\n\t\tqueuedEmail.Status = domain.StatusFailed\n\t\tq.logger.Warn(\"email permanently failed after max retries\", \n\t\t\t\"email_id\", emailID, \n\t\t\t\"attempts\", queuedEmail.AttemptCount,\n\t\t\t\"error\", failureErr.Error(),\n\t\t)\n\t} else {\n\t\tqueuedEmail.Status = domain.StatusRetrying\n\t\t// Calculate exponential backoff for next retry\n\t\tbackoffSeconds := calculateBackoff(queuedEmail.AttemptCount)\n\t\tnextRetry := time.Now().Add(time.Duration(backoffSeconds) * time.Second)\n\t\tqueuedEmail.ScheduledAt = \u0026nextRetry\n\t\t\n\t\tq.logger.Info(\"email scheduled for retry\", \n\t\t\t\"email_id\", emailID, \n\t\t\t\"attempt\", queuedEmail.AttemptCount,\n\t\t\t\"next_retry\", nextRetry,\n\t\t\t\"error\", failureErr.Error(),\n\t\t)\n\t}\n\n\tif err := q.db.WithContext(ctx).Save(\u0026queuedEmail).Error; err != nil {\n\t\tq.logger.Error(\"failed to update email failure status\", \"error\", err, \"email_id\", emailID)\n\t\treturn fmt.Errorf(\"failed to update email failure status: %w\", err)\n\t}\n\n\treturn nil\n}\n\n// RetryFailed retries failed emails that haven't exceeded max retries\nfunc (q *DatabaseQueue) RetryFailed(ctx context.Context, maxRetries int) error {\n\tresult := q.db.WithContext(ctx).\n\t\tModel(\u0026domain.QueuedEmail{}).\n\t\tWhere(\"status = ? AND attempt_count \u003c ?\", domain.StatusFailed, maxRetries).\n\t\tUpdates(map[string]interface{}{\n\t\t\t\"status\":       domain.StatusPending,\n\t\t\t\"scheduled_at\": nil,\n\t\t})\n\n\tif result.Error != nil {\n\t\tq.logger.Error(\"failed to retry failed emails\", \"error\", result.Error)\n\t\treturn fmt.Errorf(\"failed to retry failed emails: %w\", result.Error)\n\t}\n\n\tq.logger.Info(\"retried failed emails\", \"count\", result.RowsAffected)\n\treturn nil\n}\n\n// GetStats returns queue statistics\nfunc (q *DatabaseQueue) GetStats(ctx context.Context) (*domain.QueueStats, error) {\n\tstats := \u0026domain.QueueStats{}\n\n\t// Get counts for each status\n\tstatusCounts := []struct {\n\t\tStatus string\n\t\tCount  int64\n\t}{}\n\n\terr := q.db.WithContext(ctx).\n\t\tModel(\u0026domain.QueuedEmail{}).\n\t\tSelect(\"status, COUNT(*) as count\").\n\t\tGroup(\"status\").\n\t\tFind(\u0026statusCounts).Error\n\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to get queue stats: %w\", err)\n\t}\n\n\t// Map counts to stats struct\n\tfor _, sc := range statusCounts {\n\t\tswitch domain.EmailStatus(sc.Status) {\n\t\tcase domain.StatusPending:\n\t\t\tstats.Pending = sc.Count\n\t\tcase domain.StatusSending:\n\t\t\tstats.Sending = sc.Count\n\t\tcase domain.StatusSent:\n\t\t\tstats.Sent = sc.Count\n\t\tcase domain.StatusFailed:\n\t\t\tstats.Failed = sc.Count\n\t\tcase domain.StatusRetrying:\n\t\t\tstats.Retrying = sc.Count\n\t\t}\n\t}\n\n\t// Count scheduled emails\n\terr = q.db.WithContext(ctx).\n\t\tModel(\u0026domain.QueuedEmail{}).\n\t\tWhere(\"scheduled_at \u003e ?\", time.Now()).\n\t\tCount(\u0026stats.Scheduled).Error\n\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to count scheduled emails: %w\", err)\n\t}\n\n\treturn stats, nil\n}\n\n// PurgeOld removes old emails from the queue\nfunc (q *DatabaseQueue) PurgeOld(ctx context.Context, olderThan time.Duration) error {\n\tcutoff := time.Now().Add(-olderThan)\n\t\n\tresult := q.db.WithContext(ctx).\n\t\tWhere(\"created_at \u003c ? AND status IN (?, ?)\", cutoff, domain.StatusSent, domain.StatusFailed).\n\t\tDelete(\u0026domain.QueuedEmail{})\n\n\tif result.Error != nil {\n\t\tq.logger.Error(\"failed to purge old emails\", \"error\", result.Error)\n\t\treturn fmt.Errorf(\"failed to purge old emails: %w\", result.Error)\n\t}\n\n\tq.logger.Info(\"purged old emails\", \"count\", result.RowsAffected, \"older_than\", olderThan)\n\treturn nil\n}\n\n// messageToQueuedEmail converts an EmailMessage to a QueuedEmail\nfunc (q *DatabaseQueue) messageToQueuedEmail(message *domain.EmailMessage) (*domain.QueuedEmail, error) {\n\t// Generate ID if not provided\n\tif message.ID == \"\" {\n\t\tmessage.ID = uuid.New().String()\n\t}\n\n\t// Marshal complex fields to JSON\n\ttoJSON, _ := json.Marshal(message.To)\n\tccJSON, _ := json.Marshal(message.CC)\n\tbccJSON, _ := json.Marshal(message.BCC)\n\tvariablesJSON, _ := json.Marshal(message.Variables)\n\tattachmentsJSON, _ := json.Marshal(message.Attachments)\n\theadersJSON, _ := json.Marshal(message.Headers)\n\ttagsJSON, _ := json.Marshal(message.Tags)\n\tmetadataJSON, _ := json.Marshal(message.Metadata)\n\n\tqueuedEmail := \u0026domain.QueuedEmail{\n\t\tID:          uuid.New().String(),\n\t\tMessageID:   message.ID,\n\t\tFrom:        message.From,\n\t\tFromName:    message.FromName,\n\t\tTo:          string(toJSON),\n\t\tCC:          string(ccJSON),\n\t\tBCC:         string(bccJSON),\n\t\tReplyTo:     message.ReplyTo,\n\t\tSubject:     message.Subject,\n\t\tHTMLBody:    message.HTMLBody,\n\t\tTextBody:    message.TextBody,\n\t\tTemplateID:  message.TemplateID,\n\t\tVariables:   string(variablesJSON),\n\t\tAttachments: string(attachmentsJSON),\n\t\tHeaders:     string(headersJSON),\n\t\tTags:        string(tagsJSON),\n\t\tMetadata:    string(metadataJSON),\n\t\tPriority:    message.Priority,\n\t\tStatus:      domain.StatusPending,\n\t\tMaxRetries:  3, // Default max retries\n\t\tScheduledAt: message.ScheduledAt,\n\t\tCreatedAt:   time.Now(),\n\t\tUpdatedAt:   time.Now(),\n\t}\n\n\treturn queuedEmail, nil\n}\n\n// QueuedEmailToMessage converts a QueuedEmail back to an EmailMessage\nfunc (q *DatabaseQueue) QueuedEmailToMessage(queuedEmail *domain.QueuedEmail) (*domain.EmailMessage, error) {\n\tmessage := \u0026domain.EmailMessage{\n\t\tID:       queuedEmail.MessageID,\n\t\tFrom:     queuedEmail.From,\n\t\tFromName: queuedEmail.FromName,\n\t\tReplyTo:  queuedEmail.ReplyTo,\n\t\tSubject:  queuedEmail.Subject,\n\t\tHTMLBody: queuedEmail.HTMLBody,\n\t\tTextBody: queuedEmail.TextBody,\n\t\tTemplateID: queuedEmail.TemplateID,\n\t\tPriority: queuedEmail.Priority,\n\t\tScheduledAt: queuedEmail.ScheduledAt,\n\t\tCreatedAt: queuedEmail.CreatedAt,\n\t}\n\n\t// Unmarshal JSON fields\n\tif queuedEmail.To != \"\" {\n\t\tjson.Unmarshal([]byte(queuedEmail.To), \u0026message.To)\n\t}\n\tif queuedEmail.CC != \"\" {\n\t\tjson.Unmarshal([]byte(queuedEmail.CC), \u0026message.CC)\n\t}\n\tif queuedEmail.BCC != \"\" {\n\t\tjson.Unmarshal([]byte(queuedEmail.BCC), \u0026message.BCC)\n\t}\n\tif queuedEmail.Variables != \"\" {\n\t\tjson.Unmarshal([]byte(queuedEmail.Variables), \u0026message.Variables)\n\t}\n\tif queuedEmail.Attachments != \"\" {\n\t\tjson.Unmarshal([]byte(queuedEmail.Attachments), \u0026message.Attachments)\n\t}\n\tif queuedEmail.Headers != \"\" {\n\t\tjson.Unmarshal([]byte(queuedEmail.Headers), \u0026message.Headers)\n\t}\n\tif queuedEmail.Tags != \"\" {\n\t\tjson.Unmarshal([]byte(queuedEmail.Tags), \u0026message.Tags)\n\t}\n\tif queuedEmail.Metadata != \"\" {\n\t\tjson.Unmarshal([]byte(queuedEmail.Metadata), \u0026message.Metadata)\n\t}\n\n\treturn message, nil\n}\n\n// calculateBackoff calculates exponential backoff delay in seconds\nfunc calculateBackoff(attempt int) int {\n\t// Exponential backoff: 2^attempt minutes, capped at 60 minutes\n\tbackoff := 1 \u003c\u003c uint(attempt) // 2^attempt\n\tif backoff \u003e 60 {\n\t\tbackoff = 60\n\t}\n\treturn backoff * 60 // Convert to seconds\n}",
      "size": 10376,
      "hash": "a34140160510896a8530ebf3af414f9d303d82fd4dc8d8127cd1b7b7b3cd68e2",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/email/service.go",
      "template": true,
      "content": "package email\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"log/slog\"\n\t\"time\"\n\n\t\"github.com/google/uuid\"\n\t\"gorm.io/gorm\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/email/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/email/providers\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/email/queue\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/email/templates\"\n)\n\n// Service is the main email service implementation\ntype Service struct {\n\tconfig           *config.Config\n\tlogger           *slog.Logger\n\tprovider         domain.EmailProviderInterface\n\tqueue            domain.EmailQueueInterface\n\ttemplateEngine   domain.EmailTemplateEngine\n}\n\n// NewService creates a new email service\nfunc NewService(\n\tcfg *config.Config,\n\tlogger *slog.Logger,\n\tdb interface{}, // Can be *gorm.DB or other database interface\n\ttemplateEngine domain.EmailTemplateEngine,\n) (*Service, error) {\n\t// Create email provider based on configuration\n\tprovider, err := createProvider(cfg)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to create email provider: %w\", err)\n\t}\n\n\t// Create queue (assuming database queue for now)\n\tvar emailQueue domain.EmailQueueInterface\n\tif gormDB, ok := db.(interface{ DB() interface{} }); ok {\n\t\t// Extract gorm.DB from the wrapper\n\t\tif actualDB, ok := gormDB.DB().(*gorm.DB); ok {\n\t\t\temailQueue = queue.NewDatabaseQueue(actualDB, logger)\n\t\t}\n\t}\n\t\n\tif emailQueue == nil {\n\t\treturn nil, fmt.Errorf(\"failed to create email queue: unsupported database type\")\n\t}\n\n\t// Use provided template engine or create default one\n\tif templateEngine == nil {\n\t\ttemplateEngine = templates.NewDefaultTemplateEngine(logger)\n\t}\n\n\tservice := \u0026Service{\n\t\tconfig:         cfg,\n\t\tlogger:         logger,\n\t\tprovider:       provider,\n\t\tqueue:          emailQueue,\n\t\ttemplateEngine: templateEngine,\n\t}\n\n\treturn service, nil\n}\n\n// Send queues an email for asynchronous sending\nfunc (s *Service) Send(ctx context.Context, message *domain.EmailMessage) error {\n\t// Set default values\n\tif message.ID == \"\" {\n\t\tmessage.ID = uuid.New().String()\n\t}\n\t\n\tif message.From == \"\" {\n\t\tmessage.From = s.config.EmailFrom\n\t}\n\t\n\tif message.FromName == \"\" {\n\t\tmessage.FromName = s.config.EmailFromName\n\t}\n\t\n\tif message.Priority == 0 {\n\t\tmessage.Priority = domain.PriorityNormal\n\t}\n\n\tmessage.CreatedAt = time.Now()\n\n\t// Validate email\n\tif err := s.validateMessage(message); err != nil {\n\t\treturn fmt.Errorf(\"message validation failed: %w\", err)\n\t}\n\n\t// Enqueue the message\n\tif err := s.queue.Enqueue(ctx, message); err != nil {\n\t\ts.logger.Error(\"failed to enqueue email\", \"error\", err, \"message_id\", message.ID)\n\t\treturn fmt.Errorf(\"failed to enqueue email: %w\", err)\n\t}\n\n\ts.logger.Info(\"email queued successfully\", \n\t\t\"message_id\", message.ID, \n\t\t\"to\", message.To, \n\t\t\"subject\", message.Subject,\n\t)\n\n\treturn nil\n}\n\n// SendTemplate sends an email using a template\nfunc (s *Service) SendTemplate(ctx context.Context, templateID string, to []string, variables map[string]interface{}) error {\n\t// Render the template\n\trendered, err := s.templateEngine.Render(templateID, variables)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to render template: %w\", err)\n\t}\n\n\t// Create email message\n\tmessage := \u0026domain.EmailMessage{\n\t\tID:       uuid.New().String(),\n\t\tTo:       to,\n\t\tSubject:  rendered.Subject,\n\t\tHTMLBody: rendered.HTMLBody,\n\t\tTextBody: rendered.TextBody,\n\t\tTemplateID: templateID,\n\t\tVariables:  variables,\n\t\tPriority: domain.PriorityNormal,\n\t\tMetadata: map[string]string{\n\t\t\t\"template_id\": templateID,\n\t\t},\n\t}\n\n\treturn s.Send(ctx, message)\n}\n\n// SendImmediate sends an email immediately without queuing\nfunc (s *Service) SendImmediate(ctx context.Context, message *domain.EmailMessage) (*domain.EmailResult, error) {\n\t// Set default values\n\tif message.ID == \"\" {\n\t\tmessage.ID = uuid.New().String()\n\t}\n\t\n\tif message.From == \"\" {\n\t\tmessage.From = s.config.EmailFrom\n\t}\n\t\n\tif message.FromName == \"\" {\n\t\tmessage.FromName = s.config.EmailFromName\n\t}\n\n\t// Validate email\n\tif err := s.validateMessage(message); err != nil {\n\t\treturn nil, fmt.Errorf(\"message validation failed: %w\", err)\n\t}\n\n\t// Send immediately using provider\n\tresult, err := s.provider.Send(ctx, message)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to send email immediately\", \"error\", err, \"message_id\", message.ID)\n\t\treturn result, fmt.Errorf(\"failed to send email: %w\", err)\n\t}\n\n\ts.logger.Info(\"email sent immediately\", \n\t\t\"message_id\", message.ID, \n\t\t\"to\", message.To, \n\t\t\"subject\", message.Subject,\n\t\t\"result\", result.Status,\n\t)\n\n\treturn result, nil\n}\n\n// Schedule schedules an email for future sending\nfunc (s *Service) Schedule(ctx context.Context, message *domain.EmailMessage, scheduledAt time.Time) error {\n\tmessage.ScheduledAt = \u0026scheduledAt\n\treturn s.Send(ctx, message)\n}\n\n// RegisterTemplate registers a new email template\nfunc (s *Service) RegisterTemplate(template *domain.EmailTemplate) error {\n\treturn s.templateEngine.RegisterTemplate(template)\n}\n\n// GetTemplate retrieves a template by ID\nfunc (s *Service) GetTemplate(templateID string) (*domain.EmailTemplate, error) {\n\treturn s.templateEngine.GetTemplate(templateID)\n}\n\n// ProcessQueue processes emails in the queue\nfunc (s *Service) ProcessQueue(ctx context.Context) error {\n\tbatchSize := 10 // Process 10 emails at a time\n\t\n\temails, err := s.queue.Dequeue(ctx, batchSize)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to dequeue emails: %w\", err)\n\t}\n\n\tif len(emails) == 0 {\n\t\treturn nil // No emails to process\n\t}\n\n\ts.logger.Info(\"processing email queue\", \"batch_size\", len(emails))\n\n\tfor _, queuedEmail := range emails {\n\t\t// Convert queued email back to message\n\t\tmessage, err := s.queuedEmailToMessage(queuedEmail)\n\t\tif err != nil {\n\t\t\ts.logger.Error(\"failed to convert queued email to message\", \n\t\t\t\t\"error\", err, \n\t\t\t\t\"email_id\", queuedEmail.ID,\n\t\t\t)\n\t\t\ts.queue.MarkFailed(ctx, queuedEmail.ID, err)\n\t\t\tcontinue\n\t\t}\n\n\t\t// Send the email\n\t\tresult, err := s.provider.Send(ctx, message)\n\t\tif err != nil {\n\t\t\ts.logger.Error(\"failed to send email from queue\", \n\t\t\t\t\"error\", err, \n\t\t\t\t\"email_id\", queuedEmail.ID,\n\t\t\t\t\"message_id\", message.ID,\n\t\t\t)\n\t\t\ts.queue.MarkFailed(ctx, queuedEmail.ID, err)\n\t\t\tcontinue\n\t\t}\n\n\t\t// Mark as sent\n\t\tif err := s.queue.MarkSent(ctx, queuedEmail.ID, result); err != nil {\n\t\t\ts.logger.Error(\"failed to mark email as sent\", \n\t\t\t\t\"error\", err, \n\t\t\t\t\"email_id\", queuedEmail.ID,\n\t\t\t)\n\t\t}\n\t}\n\n\treturn nil\n}\n\n// GetQueueStats returns queue statistics\nfunc (s *Service) GetQueueStats(ctx context.Context) (*domain.QueueStats, error) {\n\treturn s.queue.GetStats(ctx)\n}\n\n// GetDeliveryStatus gets the delivery status of an email\nfunc (s *Service) GetDeliveryStatus(ctx context.Context, messageID string) (*domain.EmailDeliveryStatus, error) {\n\treturn s.provider.GetDeliveryStatus(ctx, messageID)\n}\n\n// GetEmailStats returns email statistics (placeholder for now)\nfunc (s *Service) GetEmailStats(ctx context.Context) (*domain.EmailStats, error) {\n\t// This would typically query a database for delivery events\n\t// For now, return empty stats\n\treturn \u0026domain.EmailStats{}, nil\n}\n\n// HealthCheck performs a health check on the email service\nfunc (s *Service) HealthCheck(ctx context.Context) error {\n\t// Check provider health\n\tif healthChecker, ok := s.provider.(interface{ HealthCheck(context.Context) error }); ok {\n\t\tif err := healthChecker.HealthCheck(ctx); err != nil {\n\t\t\treturn fmt.Errorf(\"provider health check failed: %w\", err)\n\t\t}\n\t}\n\n\t// Check queue health (basic stats query)\n\t_, err := s.queue.GetStats(ctx)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"queue health check failed: %w\", err)\n\t}\n\n\treturn nil\n}\n\n// Convenience methods for common email types\n\n// SendEmailVerification sends an email verification email\nfunc (s *Service) SendEmailVerification(ctx context.Context, email, userName, verificationURL string) error {\n\tvariables := map[string]interface{}{\n\t\t\"user_name\":        userName,\n\t\t\"verification_url\": verificationURL,\n\t\t\"app_name\":         s.config.AppName,\n\t}\n\n\treturn s.SendTemplate(ctx, \"email_verification\", []string{email}, variables)\n}\n\n// SendPasswordReset sends a password reset email\nfunc (s *Service) SendPasswordReset(ctx context.Context, email, userName, resetURL string) error {\n\tvariables := map[string]interface{}{\n\t\t\"user_name\": userName,\n\t\t\"reset_url\": resetURL,\n\t\t\"app_name\":  s.config.AppName,\n\t}\n\n\treturn s.SendTemplate(ctx, \"password_reset\", []string{email}, variables)\n}\n\n// SendWelcomeEmail sends a welcome email\nfunc (s *Service) SendWelcomeEmail(ctx context.Context, email, userName string) error {\n\tvariables := map[string]interface{}{\n\t\t\"user_name\": userName,\n\t\t\"app_name\":  s.config.AppName,\n\t}\n\n\treturn s.SendTemplate(ctx, \"welcome\", []string{email}, variables)\n}\n\n// Helper methods\n\n// validateMessage validates an email message\nfunc (s *Service) validateMessage(message *domain.EmailMessage) error {\n\tif len(message.To) == 0 {\n\t\treturn domain.ErrInvalidEmailAddress\n\t}\n\n\tif message.Subject == \"\" {\n\t\treturn fmt.Errorf(\"subject is required\")\n\t}\n\n\tif message.HTMLBody == \"\" \u0026\u0026 message.TextBody == \"\" {\n\t\treturn fmt.Errorf(\"email body is required\")\n\t}\n\n\t// Additional validations can be added here\n\treturn nil\n}\n\n// queuedEmailToMessage converts a queued email back to a message\nfunc (s *Service) queuedEmailToMessage(queuedEmail *domain.QueuedEmail) (*domain.EmailMessage, error) {\n\t// This conversion logic should be in the queue implementation\n\t// For now, we'll implement a basic conversion\n\tif dbQueue, ok := s.queue.(*queue.DatabaseQueue); ok {\n\t\treturn dbQueue.QueuedEmailToMessage(queuedEmail)\n\t}\n\t\n\treturn nil, fmt.Errorf(\"unsupported queue type for message conversion\")\n}\n\n// createProvider creates an email provider based on configuration\nfunc createProvider(cfg *config.Config) (domain.EmailProviderInterface, error) {\n\tswitch cfg.EmailProvider {\n\tcase \"smtp\":\n\t\treturn providers.NewSMTPProvider(cfg), nil\n\tcase \"sendgrid\":\n\t\t// TODO: Implement SendGrid provider\n\t\treturn nil, fmt.Errorf(\"SendGrid provider not implemented yet\")\n\tcase \"postmark\":\n\t\t// TODO: Implement Postmark provider\n\t\treturn nil, fmt.Errorf(\"Postmark provider not implemented yet\")\n\tcase \"mailgun\":\n\t\t// TODO: Implement Mailgun provider\n\t\treturn nil, fmt.Errorf(\"Mailgun provider not implemented yet\")\n\tdefault:\n\t\treturn nil, fmt.Errorf(\"unsupported email provider: %s\", cfg.EmailProvider)\n\t}\n}",
      "size": 10333,
      "hash": "3d31209b4ffa05b5f4582a9ca75016b48587cdd7542d010d122670feaed394e2",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/email/templates/engine.go",
      "template": true,
      "content": "package templates\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"html/template\"\n\t\"log/slog\"\n\t\"strings\"\n\t\"sync\"\n\ttextTemplate \"text/template\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/email/domain\"\n)\n\n// DefaultTemplateEngine implements EmailTemplateEngine\ntype DefaultTemplateEngine struct {\n\ttemplates map[string]*domain.EmailTemplate\n\tmutex     sync.RWMutex\n\tlogger    *slog.Logger\n}\n\n// NewDefaultTemplateEngine creates a new template engine\nfunc NewDefaultTemplateEngine(logger *slog.Logger) *DefaultTemplateEngine {\n\tengine := \u0026DefaultTemplateEngine{\n\t\ttemplates: make(map[string]*domain.EmailTemplate),\n\t\tlogger:    logger,\n\t}\n\n\t// Register default templates\n\tengine.registerDefaultTemplates()\n\n\treturn engine\n}\n\n// Render renders a template with the given variables\nfunc (e *DefaultTemplateEngine) Render(templateID string, variables map[string]interface{}) (*domain.RenderedTemplate, error) {\n\te.mutex.RLock()\n\ttmpl, exists := e.templates[templateID]\n\te.mutex.RUnlock()\n\n\tif !exists {\n\t\treturn nil, domain.ErrTemplateNotFound\n\t}\n\n\t// Validate required variables\n\tif err := e.validateVariables(tmpl, variables); err != nil {\n\t\treturn nil, err\n\t}\n\n\t// Render subject\n\tsubject, err := e.renderText(tmpl.Subject, variables)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to render subject: %w\", err)\n\t}\n\n\t// Render HTML body\n\thtmlBody, err := e.renderHTML(tmpl.HTMLBody, variables)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to render HTML body: %w\", err)\n\t}\n\n\t// Render text body\n\ttextBody, err := e.renderText(tmpl.TextBody, variables)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to render text body: %w\", err)\n\t}\n\n\treturn \u0026domain.RenderedTemplate{\n\t\tSubject:  subject,\n\t\tHTMLBody: htmlBody,\n\t\tTextBody: textBody,\n\t}, nil\n}\n\n// RegisterTemplate registers a new template\nfunc (e *DefaultTemplateEngine) RegisterTemplate(tmpl *domain.EmailTemplate) error {\n\tif err := e.ValidateTemplate(tmpl); err != nil {\n\t\treturn err\n\t}\n\n\te.mutex.Lock()\n\te.templates[tmpl.ID] = tmpl\n\te.mutex.Unlock()\n\n\te.logger.Info(\"template registered\", \"template_id\", tmpl.ID, \"name\", tmpl.Name)\n\treturn nil\n}\n\n// GetTemplate retrieves a template by ID\nfunc (e *DefaultTemplateEngine) GetTemplate(templateID string) (*domain.EmailTemplate, error) {\n\te.mutex.RLock()\n\ttmpl, exists := e.templates[templateID]\n\te.mutex.RUnlock()\n\n\tif !exists {\n\t\treturn nil, domain.ErrTemplateNotFound\n\t}\n\n\treturn tmpl, nil\n}\n\n// ListTemplates returns all registered templates\nfunc (e *DefaultTemplateEngine) ListTemplates() ([]*domain.EmailTemplate, error) {\n\te.mutex.RLock()\n\tdefer e.mutex.RUnlock()\n\n\ttemplates := make([]*domain.EmailTemplate, 0, len(e.templates))\n\tfor _, tmpl := range e.templates {\n\t\ttemplates = append(templates, tmpl)\n\t}\n\n\treturn templates, nil\n}\n\n// ValidateTemplate validates a template\nfunc (e *DefaultTemplateEngine) ValidateTemplate(tmpl *domain.EmailTemplate) error {\n\tif tmpl.ID == \"\" {\n\t\treturn fmt.Errorf(\"%w: template ID is required\", domain.ErrTemplateInvalid)\n\t}\n\n\tif tmpl.Name == \"\" {\n\t\treturn fmt.Errorf(\"%w: template name is required\", domain.ErrTemplateInvalid)\n\t}\n\n\tif tmpl.Subject == \"\" {\n\t\treturn fmt.Errorf(\"%w: template subject is required\", domain.ErrTemplateInvalid)\n\t}\n\n\tif tmpl.HTMLBody == \"\" \u0026\u0026 tmpl.TextBody == \"\" {\n\t\treturn fmt.Errorf(\"%w: template must have either HTML or text body\", domain.ErrTemplateInvalid)\n\t}\n\n\t// Validate template syntax\n\tif tmpl.HTMLBody != \"\" {\n\t\t_, err := template.New(\"test\").Parse(tmpl.HTMLBody)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"%w: HTML template syntax error: %v\", domain.ErrTemplateInvalid, err)\n\t\t}\n\t}\n\n\tif tmpl.TextBody != \"\" {\n\t\t_, err := textTemplate.New(\"test\").Parse(tmpl.TextBody)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"%w: text template syntax error: %v\", domain.ErrTemplateInvalid, err)\n\t\t}\n\t}\n\n\tif tmpl.Subject != \"\" {\n\t\t_, err := textTemplate.New(\"test\").Parse(tmpl.Subject)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"%w: subject template syntax error: %v\", domain.ErrTemplateInvalid, err)\n\t\t}\n\t}\n\n\treturn nil\n}\n\n// renderHTML renders an HTML template\nfunc (e *DefaultTemplateEngine) renderHTML(tmplText string, variables map[string]interface{}) (string, error) {\n\ttmpl, err := template.New(\"html\").Funcs(e.getTemplateFunctions()).Parse(tmplText)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\tvar buf bytes.Buffer\n\tif err := tmpl.Execute(\u0026buf, variables); err != nil {\n\t\treturn \"\", err\n\t}\n\n\treturn buf.String(), nil\n}\n\n// renderText renders a text template\nfunc (e *DefaultTemplateEngine) renderText(tmplText string, variables map[string]interface{}) (string, error) {\n\ttmpl, err := textTemplate.New(\"text\").Funcs(e.getTextTemplateFunctions()).Parse(tmplText)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\tvar buf bytes.Buffer\n\tif err := tmpl.Execute(\u0026buf, variables); err != nil {\n\t\treturn \"\", err\n\t}\n\n\treturn buf.String(), nil\n}\n\n// validateVariables validates that all required variables are provided\nfunc (e *DefaultTemplateEngine) validateVariables(tmpl *domain.EmailTemplate, variables map[string]interface{}) error {\n\tmissingVars := []string{}\n\n\tfor _, requiredVar := range tmpl.Variables {\n\t\tif _, exists := variables[requiredVar]; !exists {\n\t\t\tmissingVars = append(missingVars, requiredVar)\n\t\t}\n\t}\n\n\tif len(missingVars) \u003e 0 {\n\t\treturn fmt.Errorf(\"%w: %s\", domain.ErrTemplateMissingVariables, strings.Join(missingVars, \", \"))\n\t}\n\n\treturn nil\n}\n\n// getTemplateFunctions returns HTML template functions\nfunc (e *DefaultTemplateEngine) getTemplateFunctions() template.FuncMap {\n\treturn template.FuncMap{\n\t\t\"upper\": strings.ToUpper,\n\t\t\"lower\": strings.ToLower,\n\t\t\"title\": strings.Title,\n\t\t\"trim\":  strings.TrimSpace,\n\t\t\"default\": func(defaultValue interface{}, value interface{}) interface{} {\n\t\t\tif value == nil || value == \"\" {\n\t\t\t\treturn defaultValue\n\t\t\t}\n\t\t\treturn value\n\t\t},\n\t}\n}\n\n// getTextTemplateFunctions returns text template functions\nfunc (e *DefaultTemplateEngine) getTextTemplateFunctions() textTemplate.FuncMap {\n\treturn textTemplate.FuncMap{\n\t\t\"upper\": strings.ToUpper,\n\t\t\"lower\": strings.ToLower,\n\t\t\"title\": strings.Title,\n\t\t\"trim\":  strings.TrimSpace,\n\t\t\"default\": func(defaultValue interface{}, value interface{}) interface{} {\n\t\t\tif value == nil || value == \"\" {\n\t\t\t\treturn defaultValue\n\t\t\t}\n\t\t\treturn value\n\t\t},\n\t}\n}\n\n// registerDefaultTemplates registers built-in templates\nfunc (e *DefaultTemplateEngine) registerDefaultTemplates() {\n\t// Email verification template\n\te.RegisterTemplate(\u0026domain.EmailTemplate{\n\t\tID:      \"email_verification\",\n\t\tName:    \"Email Verification\",\n\t\tSubject: \"Verify your email address\",\n\t\tVariables: []string{\"user_name\", \"verification_url\", \"app_name\"},\n\t\tHTMLBody: `\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eVerify your email\u003c/title\u003e\n    \u003cstyle\u003e\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { text-align: center; margin-bottom: 30px; }\n        .button { display: inline-block; padding: 12px 24px; background-color: #007bff; color: white; text-decoration: none; border-radius: 4px; margin: 20px 0; }\n        .footer { margin-top: 30px; font-size: 12px; color: #666; }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"header\"\u003e\n            \u003ch1\u003eVerify your email address\u003c/h1\u003e\n        \u003c/div\u003e\n        \u003cp\u003eHi {{.user_name | default \"there\"}},\u003c/p\u003e\n        \u003cp\u003eThank you for creating an account! Please verify your email address by clicking the button below:\u003c/p\u003e\n        \u003cp style=\"text-align: center;\"\u003e\n            \u003ca href=\"{{.verification_url}}\" class=\"button\"\u003eVerify Email Address\u003c/a\u003e\n        \u003c/p\u003e\n        \u003cp\u003eIf the button doesn't work, you can copy and paste this link into your browser:\u003c/p\u003e\n        \u003cp\u003e\u003ca href=\"{{.verification_url}}\"\u003e{{.verification_url}}\u003c/a\u003e\u003c/p\u003e\n        \u003cp\u003eIf you didn't create an account, you can safely ignore this email.\u003c/p\u003e\n        \u003cdiv class=\"footer\"\u003e\n            \u003cp\u003eBest regards,\u003cbr\u003e{{.app_name}} Team\u003c/p\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/body\u003e\n\u003c/html\u003e`,\n\t\tTextBody: `Hi {{.user_name | default \"there\"}},\n\nThank you for creating an account! Please verify your email address by clicking the link below:\n\n{{.verification_url}}\n\nIf you didn't create an account, you can safely ignore this email.\n\nBest regards,\n{{.app_name}} Team`,\n\t})\n\n\t// Password reset template\n\te.RegisterTemplate(\u0026domain.EmailTemplate{\n\t\tID:      \"password_reset\",\n\t\tName:    \"Password Reset\",\n\t\tSubject: \"Reset your password\",\n\t\tVariables: []string{\"user_name\", \"reset_url\", \"app_name\"},\n\t\tHTMLBody: `\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eReset your password\u003c/title\u003e\n    \u003cstyle\u003e\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { text-align: center; margin-bottom: 30px; }\n        .button { display: inline-block; padding: 12px 24px; background-color: #dc3545; color: white; text-decoration: none; border-radius: 4px; margin: 20px 0; }\n        .footer { margin-top: 30px; font-size: 12px; color: #666; }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"header\"\u003e\n            \u003ch1\u003eReset your password\u003c/h1\u003e\n        \u003c/div\u003e\n        \u003cp\u003eHi {{.user_name | default \"there\"}},\u003c/p\u003e\n        \u003cp\u003eYou requested to reset your password. Click the button below to reset it:\u003c/p\u003e\n        \u003cp style=\"text-align: center;\"\u003e\n            \u003ca href=\"{{.reset_url}}\" class=\"button\"\u003eReset Password\u003c/a\u003e\n        \u003c/p\u003e\n        \u003cp\u003eIf the button doesn't work, you can copy and paste this link into your browser:\u003c/p\u003e\n        \u003cp\u003e\u003ca href=\"{{.reset_url}}\"\u003e{{.reset_url}}\u003c/a\u003e\u003c/p\u003e\n        \u003cp\u003e\u003cstrong\u003eThis link will expire in 24 hours.\u003c/strong\u003e\u003c/p\u003e\n        \u003cp\u003eIf you didn't request this password reset, you can safely ignore this email.\u003c/p\u003e\n        \u003cdiv class=\"footer\"\u003e\n            \u003cp\u003eBest regards,\u003cbr\u003e{{.app_name}} Team\u003c/p\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/body\u003e\n\u003c/html\u003e`,\n\t\tTextBody: `Hi {{.user_name | default \"there\"}},\n\nYou requested to reset your password. Click the link below to reset it:\n\n{{.reset_url}}\n\nThis link will expire in 24 hours.\n\nIf you didn't request this password reset, you can safely ignore this email.\n\nBest regards,\n{{.app_name}} Team`,\n\t})\n\n\t// Welcome email template\n\te.RegisterTemplate(\u0026domain.EmailTemplate{\n\t\tID:      \"welcome\",\n\t\tName:    \"Welcome Email\",\n\t\tSubject: \"Welcome to {{.app_name}}!\",\n\t\tVariables: []string{\"user_name\", \"app_name\"},\n\t\tHTMLBody: `\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eWelcome!\u003c/title\u003e\n    \u003cstyle\u003e\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { text-align: center; margin-bottom: 30px; }\n        .footer { margin-top: 30px; font-size: 12px; color: #666; }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"header\"\u003e\n            \u003ch1\u003eWelcome to {{.app_name}}!\u003c/h1\u003e\n        \u003c/div\u003e\n        \u003cp\u003eHi {{.user_name | default \"there\"}},\u003c/p\u003e\n        \u003cp\u003eWelcome to {{.app_name}}! Your account has been successfully created and verified.\u003c/p\u003e\n        \u003cp\u003eYou can now access all the features of our platform. If you have any questions, feel free to reach out to our support team.\u003c/p\u003e\n        \u003cp\u003eThank you for joining us!\u003c/p\u003e\n        \u003cdiv class=\"footer\"\u003e\n            \u003cp\u003eBest regards,\u003cbr\u003e{{.app_name}} Team\u003c/p\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/body\u003e\n\u003c/html\u003e`,\n\t\tTextBody: `Hi {{.user_name | default \"there\"}},\n\nWelcome to {{.app_name}}! Your account has been successfully created and verified.\n\nYou can now access all the features of our platform. If you have any questions, feel free to reach out to our support team.\n\nThank you for joining us!\n\nBest regards,\n{{.app_name}} Team`,\n\t})\n}",
      "size": 11920,
      "hash": "f153bbcc68d9180e939faa53f58c28806fdaa946448da813a8b836c715a1dd1a",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/errors/handler.go",
      "template": true,
      "content": "package errors\n\nimport (\n\t\"context\"\n\t\"database/sql\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n\t\"log/slog\"\n\t\"net/http\"\n\t\"runtime\"\n\t\"strings\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"gorm.io/gorm\"\n)\n\n// ErrorHandler handles application errors and converts them to HTTP responses\ntype ErrorHandler struct {\n\tlogger      *slog.Logger\n\tenvironment string\n\tmapper      *ErrorMapper\n}\n\n// NewErrorHandler creates a new error handler\nfunc NewErrorHandler(logger *slog.Logger, environment string) *ErrorHandler {\n\treturn \u0026ErrorHandler{\n\t\tlogger:      logger,\n\t\tenvironment: environment,\n\t\tmapper:      defaultErrorMapper,\n\t}\n}\n\n// HandleError processes an error and sends an appropriate HTTP response\nfunc (h *ErrorHandler) HandleError(c *gin.Context, err error) {\n\tif err == nil {\n\t\treturn\n\t}\n\n\t// Convert error to AppError\n\tappErr := h.toAppError(err)\n\n\t// Add trace ID if available\n\tif traceID := getTraceID(c); traceID != \"\" {\n\t\tappErr.TraceID = traceID\n\t}\n\n\t// Log the error with appropriate level\n\th.logError(c, appErr)\n\n\t// Create response\n\tresponse := h.createErrorResponse(appErr)\n\n\t// Send HTTP response\n\tc.JSON(appErr.HTTPStatus, response)\n}\n\n// HandleErrorWithStatus handles an error with a specific HTTP status\nfunc (h *ErrorHandler) HandleErrorWithStatus(c *gin.Context, err error, status int) {\n\tappErr := h.toAppError(err)\n\tappErr.HTTPStatus = status\n\th.HandleError(c, appErr)\n}\n\n// toAppError converts any error to an AppError\nfunc (h *ErrorHandler) toAppError(err error) *AppError {\n\t// If it's already an AppError, return it\n\tvar appErr *AppError\n\tif errors.As(err, \u0026appErr) {\n\t\treturn appErr\n\t}\n\n\t// Handle specific error types\n\tswitch {\n\tcase errors.Is(err, gorm.ErrRecordNotFound):\n\t\treturn NotFound(\"Resource not found\")\n\tcase errors.Is(err, sql.ErrNoRows):\n\t\treturn NotFound(\"Resource not found\")\n\tcase errors.Is(err, context.DeadlineExceeded):\n\t\treturn New(CodeTimeoutError, \"Request timeout\")\n\tcase errors.Is(err, context.Canceled):\n\t\treturn New(CodeTimeoutError, \"Request canceled\")\n\tdefault:\n\t\t// Check for common error patterns\n\t\terrMsg := err.Error()\n\t\t\n\t\t// Database connection errors\n\t\tif strings.Contains(errMsg, \"connection refused\") || \n\t\t   strings.Contains(errMsg, \"connection reset\") ||\n\t\t   strings.Contains(errMsg, \"database is locked\") {\n\t\t\treturn Wrap(err, CodeDatabaseError, \"Database connection error\")\n\t\t}\n\t\t\n\t\t// Validation errors (you might want to integrate with a validation library)\n\t\tif strings.Contains(errMsg, \"validation\") || \n\t\t   strings.Contains(errMsg, \"invalid\") {\n\t\t\treturn Wrap(err, CodeValidationFailed, \"Validation failed\")\n\t\t}\n\t\t\n\t\t// Default to internal error\n\t\treturn Wrap(err, CodeInternalError, \"An unexpected error occurred\")\n\t}\n}\n\n// createErrorResponse creates an ErrorResponse from an AppError\nfunc (h *ErrorHandler) createErrorResponse(appErr *AppError) *ErrorResponse {\n\tresponse := \u0026ErrorResponse{\n\t\tError:     appErr.Code.String(),\n\t\tCode:      appErr.Code,\n\t\tTimestamp: appErr.Timestamp,\n\t\tTraceID:   appErr.TraceID,\n\t}\n\n\t// Determine what message to show based on environment and user-friendliness\n\tif h.shouldShowDetails(appErr) {\n\t\tresponse.Message = appErr.Message\n\t\tresponse.Details = appErr.Details\n\t\tresponse.Context = appErr.Context\n\t} else {\n\t\t// Show generic message for internal errors\n\t\tmapping, exists := h.mapper.GetMapping(appErr.Code)\n\t\tif exists {\n\t\t\tresponse.Message = mapping.DefaultMessage\n\t\t} else {\n\t\t\tresponse.Message = \"An error occurred\"\n\t\t}\n\t}\n\n\treturn response\n}\n\n// shouldShowDetails determines whether to show error details to the client\nfunc (h *ErrorHandler) shouldShowDetails(appErr *AppError) bool {\n\t// Always show details in development\n\tif h.environment == \"development\" {\n\t\treturn true\n\t}\n\n\t// Show details for user-friendly errors\n\tif appErr.UserFriendly {\n\t\treturn true\n\t}\n\n\t// Hide details for internal errors in production\n\treturn false\n}\n\n// logError logs the error with appropriate level and context\nfunc (h *ErrorHandler) logError(c *gin.Context, appErr *AppError) {\n\t// Create log context\n\tlogCtx := []interface{}{\n\t\t\"error_code\", appErr.Code,\n\t\t\"http_status\", appErr.HTTPStatus,\n\t\t\"severity\", appErr.Severity,\n\t\t\"trace_id\", appErr.TraceID,\n\t\t\"method\", c.Request.Method,\n\t\t\"path\", c.Request.URL.Path,\n\t\t\"user_agent\", c.Request.UserAgent(),\n\t\t\"ip\", c.ClientIP(),\n\t}\n\n\t// Add error context if available\n\tif appErr.Context != nil {\n\t\tcontextJSON, _ := json.Marshal(appErr.Context)\n\t\tlogCtx = append(logCtx, \"error_context\", string(contextJSON))\n\t}\n\n\t// Add request ID if available\n\tif requestID := c.GetString(\"request_id\"); requestID != \"\" {\n\t\tlogCtx = append(logCtx, \"request_id\", requestID)\n\t}\n\n\t// Add user ID if available\n\tif userID := c.GetString(\"user_id\"); userID != \"\" {\n\t\tlogCtx = append(logCtx, \"user_id\", userID)\n\t}\n\n\t// Add stack trace for high severity errors in development\n\tif (h.environment == \"development\" || appErr.Severity == SeverityCritical) \u0026\u0026 appErr.Cause != nil {\n\t\tlogCtx = append(logCtx, \"stack_trace\", getStackTrace())\n\t}\n\n\t// Log with appropriate level based on severity\n\tmessage := fmt.Sprintf(\"Error handled: %s\", appErr.Message)\n\tif appErr.Details != \"\" {\n\t\tmessage += fmt.Sprintf(\" - %s\", appErr.Details)\n\t}\n\n\tswitch appErr.Severity {\n\tcase SeverityLow:\n\t\th.logger.Info(message, logCtx...)\n\tcase SeverityMedium:\n\t\th.logger.Warn(message, logCtx...)\n\tcase SeverityHigh:\n\t\th.logger.Error(message, logCtx...)\n\tcase SeverityCritical:\n\t\th.logger.Error(message, logCtx...)\n\t\t// Could also send to external error tracking service here\n\tdefault:\n\t\th.logger.Error(message, logCtx...)\n\t}\n}\n\n// RecoveryMiddleware creates a middleware for panic recovery\nfunc (h *ErrorHandler) RecoveryMiddleware() gin.HandlerFunc {\n\treturn gin.CustomRecovery(func(c *gin.Context, recovered interface{}) {\n\t\tvar err error\n\t\t\n\t\tswitch r := recovered.(type) {\n\t\tcase error:\n\t\t\terr = r\n\t\tcase string:\n\t\t\terr = errors.New(r)\n\t\tdefault:\n\t\t\terr = fmt.Errorf(\"panic recovered: %v\", r)\n\t\t}\n\n\t\t// Log the panic with stack trace\n\t\th.logger.Error(\"Panic recovered\",\n\t\t\t\"error\", err.Error(),\n\t\t\t\"stack_trace\", getStackTrace(),\n\t\t\t\"method\", c.Request.Method,\n\t\t\t\"path\", c.Request.URL.Path,\n\t\t\t\"trace_id\", getTraceID(c),\n\t\t)\n\n\t\t// Handle as critical internal error\n\t\tappErr := New(CodeInternalError, \"Internal server error\")\n\t\tappErr.Severity = SeverityCritical\n\t\tappErr.Cause = err\n\t\t\n\t\th.HandleError(c, appErr)\n\t})\n}\n\n// ErrorReportingMiddleware adds error context to requests\nfunc (h *ErrorHandler) ErrorReportingMiddleware() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\t// Add error handler to context so it can be used in handlers\n\t\tc.Set(\"error_handler\", h)\n\t\t\n\t\tc.Next()\n\t\t\n\t\t// Check for errors in the context\n\t\tif len(c.Errors) \u003e 0 {\n\t\t\t// Handle the last error\n\t\t\tlastError := c.Errors.Last()\n\t\t\th.HandleError(c, lastError.Err)\n\t\t}\n\t}\n}\n\n// Helper functions\n\n// getTraceID extracts trace ID from context\nfunc getTraceID(c *gin.Context) string {\n\tif traceID := c.GetString(\"trace_id\"); traceID != \"\" {\n\t\treturn traceID\n\t}\n\tif traceID := c.GetHeader(\"X-Trace-ID\"); traceID != \"\" {\n\t\treturn traceID\n\t}\n\treturn \"\"\n}\n\n// getStackTrace returns the current stack trace\nfunc getStackTrace() string {\n\tbuf := make([]byte, 1024*4)\n\tn := runtime.Stack(buf, false)\n\treturn string(buf[:n])\n}\n\n// String method for ErrorCode\nfunc (ec ErrorCode) String() string {\n\treturn string(ec)\n}\n\n// Convenience functions for handlers\n\n// HandleGinError is a convenience function for Gin handlers\nfunc HandleGinError(c *gin.Context, err error) {\n\tif handler, exists := c.Get(\"error_handler\"); exists {\n\t\tif h, ok := handler.(*ErrorHandler); ok {\n\t\t\th.HandleError(c, err)\n\t\t\treturn\n\t\t}\n\t}\n\t\n\t// Fallback to basic error handling\n\tc.JSON(http.StatusInternalServerError, gin.H{\n\t\t\"error\": \"Internal server error\",\n\t\t\"code\":  CodeInternalError,\n\t})\n}\n\n// MustGetErrorHandler gets the error handler from Gin context or panics\nfunc MustGetErrorHandler(c *gin.Context) *ErrorHandler {\n\thandler, exists := c.Get(\"error_handler\")\n\tif !exists {\n\t\tpanic(\"error handler not found in context\")\n\t}\n\t\n\th, ok := handler.(*ErrorHandler)\n\tif !ok {\n\t\tpanic(\"invalid error handler type in context\")\n\t}\n\t\n\treturn h\n}\n\n// AbortWithError aborts the request with an error\nfunc AbortWithError(c *gin.Context, err error) {\n\tHandleGinError(c, err)\n\tc.Abort()\n}\n\n// AbortWithAppError aborts the request with an AppError\nfunc AbortWithAppError(c *gin.Context, appErr *AppError) {\n\tHandleGinError(c, appErr)\n\tc.Abort()\n}\n\n// ErrorMiddleware creates a comprehensive error handling middleware\nfunc ErrorMiddleware(logger *slog.Logger, environment string) gin.HandlerFunc {\n\thandler := NewErrorHandler(logger, environment)\n\t\n\treturn gin.HandlerFunc(func(c *gin.Context) {\n\t\t// Add error handler to context\n\t\tc.Set(\"error_handler\", handler)\n\t\t\n\t\t// Continue with request\n\t\tc.Next()\n\t\t\n\t\t// Handle any errors that occurred during request processing\n\t\tif len(c.Errors) \u003e 0 {\n\t\t\t// Get the last error (most recent)\n\t\t\tlastError := c.Errors.Last()\n\t\t\t\n\t\t\t// Only handle if response hasn't been written yet\n\t\t\tif !c.Writer.Written() {\n\t\t\t\thandler.HandleError(c, lastError.Err)\n\t\t\t}\n\t\t}\n\t})\n}",
      "size": 9024,
      "hash": "2a7ec0c46461ee23e90f22619697cd799989d2c60b922525debb40461f424955",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/errors/types.go",
      "template": true,
      "content": "package errors\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"time\"\n)\n\n// ErrorCode represents a unique error code\ntype ErrorCode string\n\n// Standard error codes\nconst (\n\t// Client errors (4xx)\n\tCodeBadRequest          ErrorCode = \"BAD_REQUEST\"\n\tCodeUnauthorized        ErrorCode = \"UNAUTHORIZED\"\n\tCodeForbidden           ErrorCode = \"FORBIDDEN\"\n\tCodeNotFound            ErrorCode = \"NOT_FOUND\"\n\tCodeConflict            ErrorCode = \"CONFLICT\"\n\tCodeValidationFailed    ErrorCode = \"VALIDATION_FAILED\"\n\tCodeRateLimitExceeded   ErrorCode = \"RATE_LIMIT_EXCEEDED\"\n\tCodeRequestTooLarge     ErrorCode = \"REQUEST_TOO_LARGE\"\n\tCodeUnsupportedMedia    ErrorCode = \"UNSUPPORTED_MEDIA_TYPE\"\n\n\t// Authentication \u0026 Authorization\n\tCodeInvalidCredentials  ErrorCode = \"INVALID_CREDENTIALS\"\n\tCodeTokenExpired        ErrorCode = \"TOKEN_EXPIRED\"\n\tCodeTokenInvalid        ErrorCode = \"TOKEN_INVALID\"\n\tCodeEmailNotVerified    ErrorCode = \"EMAIL_NOT_VERIFIED\"\n\tCodeAccountLocked       ErrorCode = \"ACCOUNT_LOCKED\"\n\tCodePermissionDenied    ErrorCode = \"PERMISSION_DENIED\"\n\n\t// Resource errors\n\tCodeUserNotFound        ErrorCode = \"USER_NOT_FOUND\"\n\tCodeUserAlreadyExists   ErrorCode = \"USER_ALREADY_EXISTS\"\n\tCodeEmailAlreadyExists  ErrorCode = \"EMAIL_ALREADY_EXISTS\"\n\tCodeResourceNotFound    ErrorCode = \"RESOURCE_NOT_FOUND\"\n\tCodeResourceConflict    ErrorCode = \"RESOURCE_CONFLICT\"\n\n\t// Business logic errors\n\tCodeInvalidOperation    ErrorCode = \"INVALID_OPERATION\"\n\tCodeOperationFailed     ErrorCode = \"OPERATION_FAILED\"\n\tCodeDataInconsistent    ErrorCode = \"DATA_INCONSISTENT\"\n\tCodeBusinessRuleViolation ErrorCode = \"BUSINESS_RULE_VIOLATION\"\n\n\t// Server errors (5xx)\n\tCodeInternalError       ErrorCode = \"INTERNAL_ERROR\"\n\tCodeServiceUnavailable  ErrorCode = \"SERVICE_UNAVAILABLE\"\n\tCodeDatabaseError       ErrorCode = \"DATABASE_ERROR\"\n\tCodeExternalServiceError ErrorCode = \"EXTERNAL_SERVICE_ERROR\"\n\tCodeConfigurationError  ErrorCode = \"CONFIGURATION_ERROR\"\n\tCodeTimeoutError        ErrorCode = \"TIMEOUT_ERROR\"\n\n\t// Email errors\n\tCodeEmailSendFailed     ErrorCode = \"EMAIL_SEND_FAILED\"\n\tCodeEmailConfigError    ErrorCode = \"EMAIL_CONFIG_ERROR\"\n\tCodeTemplateNotFound    ErrorCode = \"TEMPLATE_NOT_FOUND\"\n\tCodeTemplateRenderError ErrorCode = \"TEMPLATE_RENDER_ERROR\"\n)\n\n// ErrorSeverity represents the severity level of an error\ntype ErrorSeverity string\n\nconst (\n\tSeverityLow      ErrorSeverity = \"low\"\n\tSeverityMedium   ErrorSeverity = \"medium\"\n\tSeverityHigh     ErrorSeverity = \"high\"\n\tSeverityCritical ErrorSeverity = \"critical\"\n)\n\n// AppError represents a structured application error\ntype AppError struct {\n\tCode       ErrorCode              `json:\"code\"`\n\tMessage    string                 `json:\"message\"`\n\tDetails    string                 `json:\"details,omitempty\"`\n\tCause      error                  `json:\"-\"`\n\tContext    map[string]interface{} `json:\"context,omitempty\"`\n\tHTTPStatus int                    `json:\"-\"`\n\tSeverity   ErrorSeverity          `json:\"-\"`\n\tTimestamp  time.Time              `json:\"timestamp\"`\n\tTraceID    string                 `json:\"trace_id,omitempty\"`\n\tUserFriendly bool                 `json:\"-\"`\n}\n\n// Error implements the error interface\nfunc (e *AppError) Error() string {\n\tif e.Details != \"\" {\n\t\treturn fmt.Sprintf(\"%s: %s - %s\", e.Code, e.Message, e.Details)\n\t}\n\treturn fmt.Sprintf(\"%s: %s\", e.Code, e.Message)\n}\n\n// Unwrap returns the underlying cause error\nfunc (e *AppError) Unwrap() error {\n\treturn e.Cause\n}\n\n// WithContext adds context information to the error\nfunc (e *AppError) WithContext(key string, value interface{}) *AppError {\n\tif e.Context == nil {\n\t\te.Context = make(map[string]interface{})\n\t}\n\te.Context[key] = value\n\treturn e\n}\n\n// WithDetails adds additional details to the error\nfunc (e *AppError) WithDetails(details string) *AppError {\n\te.Details = details\n\treturn e\n}\n\n// WithCause sets the underlying cause error\nfunc (e *AppError) WithCause(cause error) *AppError {\n\te.Cause = cause\n\treturn e\n}\n\n// WithTraceID sets the trace ID for error tracking\nfunc (e *AppError) WithTraceID(traceID string) *AppError {\n\te.TraceID = traceID\n\treturn e\n}\n\n// IsUserFriendly returns whether the error message is safe to show to users\nfunc (e *AppError) IsUserFriendly() bool {\n\treturn e.UserFriendly\n}\n\n// ErrorResponse represents the structure of error responses sent to clients\ntype ErrorResponse struct {\n\tError     string                 `json:\"error\"`\n\tCode      ErrorCode              `json:\"code\"`\n\tMessage   string                 `json:\"message\"`\n\tDetails   string                 `json:\"details,omitempty\"`\n\tContext   map[string]interface{} `json:\"context,omitempty\"`\n\tTimestamp time.Time              `json:\"timestamp\"`\n\tTraceID   string                 `json:\"trace_id,omitempty\"`\n}\n\n// ValidationError represents a validation error with field-specific details\ntype ValidationError struct {\n\t*AppError\n\tFields map[string]string `json:\"fields\"`\n}\n\n// NewValidationError creates a new validation error\nfunc NewValidationError(message string, fields map[string]string) *ValidationError {\n\treturn \u0026ValidationError{\n\t\tAppError: \u0026AppError{\n\t\t\tCode:         CodeValidationFailed,\n\t\t\tMessage:      message,\n\t\t\tHTTPStatus:   http.StatusBadRequest,\n\t\t\tSeverity:     SeverityLow,\n\t\t\tTimestamp:    time.Now(),\n\t\t\tUserFriendly: true,\n\t\t},\n\t\tFields: fields,\n\t}\n}\n\n// ErrorWithFields represents an error with additional field information\ntype ErrorWithFields struct {\n\t*AppError\n\tFields map[string]interface{} `json:\"fields,omitempty\"`\n}\n\n// NewErrorWithFields creates a new error with field information\nfunc NewErrorWithFields(code ErrorCode, message string, fields map[string]interface{}) *ErrorWithFields {\n\treturn \u0026ErrorWithFields{\n\t\tAppError: New(code, message),\n\t\tFields:   fields,\n\t}\n}\n\n// ErrorMapper maps error codes to HTTP status codes and default messages\ntype ErrorMapper struct {\n\tmappings map[ErrorCode]ErrorMapping\n}\n\n// ErrorMapping defines the mapping for an error code\ntype ErrorMapping struct {\n\tHTTPStatus   int\n\tDefaultMessage string\n\tSeverity     ErrorSeverity\n\tUserFriendly bool\n}\n\n// NewErrorMapper creates a new error mapper with default mappings\nfunc NewErrorMapper() *ErrorMapper {\n\tmapper := \u0026ErrorMapper{\n\t\tmappings: make(map[ErrorCode]ErrorMapping),\n\t}\n\t\n\t// Register default mappings\n\tmapper.registerDefaultMappings()\n\t\n\treturn mapper\n}\n\n// registerDefaultMappings registers the default error code mappings\nfunc (em *ErrorMapper) registerDefaultMappings() {\n\tmappings := map[ErrorCode]ErrorMapping{\n\t\t// Client errors (4xx)\n\t\tCodeBadRequest:        {http.StatusBadRequest, \"Bad request\", SeverityLow, true},\n\t\tCodeUnauthorized:      {http.StatusUnauthorized, \"Authentication required\", SeverityMedium, true},\n\t\tCodeForbidden:         {http.StatusForbidden, \"Access forbidden\", SeverityMedium, true},\n\t\tCodeNotFound:          {http.StatusNotFound, \"Resource not found\", SeverityLow, true},\n\t\tCodeConflict:          {http.StatusConflict, \"Resource conflict\", SeverityLow, true},\n\t\tCodeValidationFailed:  {http.StatusBadRequest, \"Validation failed\", SeverityLow, true},\n\t\tCodeRateLimitExceeded: {http.StatusTooManyRequests, \"Rate limit exceeded\", SeverityMedium, true},\n\t\tCodeRequestTooLarge:   {http.StatusRequestEntityTooLarge, \"Request too large\", SeverityLow, true},\n\t\tCodeUnsupportedMedia:  {http.StatusUnsupportedMediaType, \"Unsupported media type\", SeverityLow, true},\n\n\t\t// Authentication \u0026 Authorization\n\t\tCodeInvalidCredentials: {http.StatusUnauthorized, \"Invalid credentials\", SeverityMedium, true},\n\t\tCodeTokenExpired:       {http.StatusUnauthorized, \"Token expired\", SeverityLow, true},\n\t\tCodeTokenInvalid:       {http.StatusUnauthorized, \"Invalid token\", SeverityMedium, true},\n\t\tCodeEmailNotVerified:   {http.StatusForbidden, \"Email not verified\", SeverityMedium, true},\n\t\tCodeAccountLocked:      {http.StatusForbidden, \"Account locked\", SeverityHigh, true},\n\t\tCodePermissionDenied:   {http.StatusForbidden, \"Permission denied\", SeverityMedium, true},\n\n\t\t// Resource errors\n\t\tCodeUserNotFound:       {http.StatusNotFound, \"User not found\", SeverityLow, true},\n\t\tCodeUserAlreadyExists:  {http.StatusConflict, \"User already exists\", SeverityLow, true},\n\t\tCodeEmailAlreadyExists: {http.StatusConflict, \"Email already exists\", SeverityLow, true},\n\t\tCodeResourceNotFound:   {http.StatusNotFound, \"Resource not found\", SeverityLow, true},\n\t\tCodeResourceConflict:   {http.StatusConflict, \"Resource conflict\", SeverityLow, true},\n\n\t\t// Business logic errors\n\t\tCodeInvalidOperation:       {http.StatusBadRequest, \"Invalid operation\", SeverityMedium, true},\n\t\tCodeOperationFailed:        {http.StatusUnprocessableEntity, \"Operation failed\", SeverityMedium, true},\n\t\tCodeDataInconsistent:       {http.StatusInternalServerError, \"Data inconsistent\", SeverityHigh, false},\n\t\tCodeBusinessRuleViolation:  {http.StatusBadRequest, \"Business rule violation\", SeverityMedium, true},\n\n\t\t// Server errors (5xx)\n\t\tCodeInternalError:        {http.StatusInternalServerError, \"Internal server error\", SeverityCritical, false},\n\t\tCodeServiceUnavailable:   {http.StatusServiceUnavailable, \"Service unavailable\", SeverityHigh, true},\n\t\tCodeDatabaseError:        {http.StatusInternalServerError, \"Database error\", SeverityHigh, false},\n\t\tCodeExternalServiceError: {http.StatusBadGateway, \"External service error\", SeverityHigh, false},\n\t\tCodeConfigurationError:   {http.StatusInternalServerError, \"Configuration error\", SeverityCritical, false},\n\t\tCodeTimeoutError:         {http.StatusGatewayTimeout, \"Request timeout\", SeverityMedium, true},\n\n\t\t// Email errors\n\t\tCodeEmailSendFailed:     {http.StatusInternalServerError, \"Email send failed\", SeverityMedium, false},\n\t\tCodeEmailConfigError:    {http.StatusInternalServerError, \"Email configuration error\", SeverityHigh, false},\n\t\tCodeTemplateNotFound:    {http.StatusInternalServerError, \"Email template not found\", SeverityMedium, false},\n\t\tCodeTemplateRenderError: {http.StatusInternalServerError, \"Template render error\", SeverityMedium, false},\n\t}\n\n\tfor code, mapping := range mappings {\n\t\tem.mappings[code] = mapping\n\t}\n}\n\n// GetMapping returns the mapping for an error code\nfunc (em *ErrorMapper) GetMapping(code ErrorCode) (ErrorMapping, bool) {\n\tmapping, exists := em.mappings[code]\n\treturn mapping, exists\n}\n\n// RegisterMapping registers a custom error code mapping\nfunc (em *ErrorMapper) RegisterMapping(code ErrorCode, mapping ErrorMapping) {\n\tem.mappings[code] = mapping\n}\n\n// Global error mapper instance\nvar defaultErrorMapper = NewErrorMapper()\n\n// Factory functions for creating common errors\n\n// New creates a new AppError with the given code and message\nfunc New(code ErrorCode, message string) *AppError {\n\tmapping, exists := defaultErrorMapper.GetMapping(code)\n\tif !exists {\n\t\tmapping = ErrorMapping{\n\t\t\tHTTPStatus:   http.StatusInternalServerError,\n\t\t\tSeverity:     SeverityMedium,\n\t\t\tUserFriendly: false,\n\t\t}\n\t}\n\n\tif message == \"\" {\n\t\tmessage = mapping.DefaultMessage\n\t}\n\n\treturn \u0026AppError{\n\t\tCode:         code,\n\t\tMessage:      message,\n\t\tHTTPStatus:   mapping.HTTPStatus,\n\t\tSeverity:     mapping.Severity,\n\t\tTimestamp:    time.Now(),\n\t\tUserFriendly: mapping.UserFriendly,\n\t}\n}\n\n// Newf creates a new AppError with formatted message\nfunc Newf(code ErrorCode, format string, args ...interface{}) *AppError {\n\treturn New(code, fmt.Sprintf(format, args...))\n}\n\n// Wrap wraps an existing error with an AppError\nfunc Wrap(err error, code ErrorCode, message string) *AppError {\n\tappErr := New(code, message)\n\tappErr.Cause = err\n\treturn appErr\n}\n\n// Wrapf wraps an existing error with an AppError and formatted message\nfunc Wrapf(err error, code ErrorCode, format string, args ...interface{}) *AppError {\n\treturn Wrap(err, code, fmt.Sprintf(format, args...))\n}\n\n// Common error factory functions\n\n// BadRequest creates a bad request error\nfunc BadRequest(message string) *AppError {\n\treturn New(CodeBadRequest, message)\n}\n\n// Unauthorized creates an unauthorized error\nfunc Unauthorized(message string) *AppError {\n\treturn New(CodeUnauthorized, message)\n}\n\n// Forbidden creates a forbidden error\nfunc Forbidden(message string) *AppError {\n\treturn New(CodeForbidden, message)\n}\n\n// NotFound creates a not found error\nfunc NotFound(message string) *AppError {\n\treturn New(CodeNotFound, message)\n}\n\n// Conflict creates a conflict error\nfunc Conflict(message string) *AppError {\n\treturn New(CodeConflict, message)\n}\n\n// InternalError creates an internal server error\nfunc InternalError(message string) *AppError {\n\treturn New(CodeInternalError, message)\n}\n\n// ValidationFailed creates a validation error\nfunc ValidationFailed(message string) *AppError {\n\treturn New(CodeValidationFailed, message)\n}\n\n// DatabaseError creates a database error\nfunc DatabaseError(err error) *AppError {\n\treturn Wrap(err, CodeDatabaseError, \"Database operation failed\")\n}\n\n// ExternalServiceError creates an external service error\nfunc ExternalServiceError(service string, err error) *AppError {\n\treturn Wrap(err, CodeExternalServiceError, fmt.Sprintf(\"External service '%s' error\", service))\n}",
      "size": 12960,
      "hash": "b62292cb87b829c541d88b9896199b769f108dcb2eb743db8431d64bff6abb4e",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/health/health.go",
      "template": true,
      "content": "package health\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"log/slog\"\n\t\"runtime\"\n\t\"sync\"\n\t\"time\"\n\n\t\"gorm.io/gorm\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/email/domain\"\n)\n\n// Status represents the health status\ntype Status string\n\nconst (\n\tStatusHealthy   Status = \"healthy\"\n\tStatusUnhealthy Status = \"unhealthy\"\n\tStatusDegraded  Status = \"degraded\"\n\tStatusUnknown   Status = \"unknown\"\n)\n\n// CheckResult represents the result of a health check\ntype CheckResult struct {\n\tName        string                 `json:\"name\"`\n\tStatus      Status                 `json:\"status\"`\n\tMessage     string                 `json:\"message,omitempty\"`\n\tDuration    time.Duration          `json:\"duration\"`\n\tTimestamp   time.Time              `json:\"timestamp\"`\n\tDetails     map[string]interface{} `json:\"details,omitempty\"`\n\tError       error                  `json:\"-\"`\n}\n\n// HealthReport represents the overall health report\ntype HealthReport struct {\n\tStatus     Status                  `json:\"status\"`\n\tTimestamp  time.Time               `json:\"timestamp\"`\n\tDuration   time.Duration           `json:\"duration\"`\n\tVersion    string                  `json:\"version\"`\n\tChecks     map[string]*CheckResult `json:\"checks\"`\n\tSummary    HealthSummary           `json:\"summary\"`\n}\n\n// HealthSummary provides a summary of health checks\ntype HealthSummary struct {\n\tTotal     int `json:\"total\"`\n\tHealthy   int `json:\"healthy\"`\n\tUnhealthy int `json:\"unhealthy\"`\n\tDegraded  int `json:\"degraded\"`\n\tUnknown   int `json:\"unknown\"`\n}\n\n// HealthChecker defines the interface for health checks\ntype HealthChecker interface {\n\tName() string\n\tCheck(ctx context.Context) *CheckResult\n}\n\n// EnhancedHealthService provides comprehensive health checking\ntype EnhancedHealthService struct {\n\tconfig   *config.Config\n\tlogger   *slog.Logger\n\tcheckers map[string]HealthChecker\n\tmu       sync.RWMutex\n}\n\n// NewEnhancedHealthService creates a new enhanced health service\nfunc NewEnhancedHealthService(config *config.Config, logger *slog.Logger) *EnhancedHealthService {\n\tservice := \u0026EnhancedHealthService{\n\t\tconfig:   config,\n\t\tlogger:   logger,\n\t\tcheckers: make(map[string]HealthChecker),\n\t}\n\t\n\treturn service\n}\n\n// RegisterChecker registers a health checker\nfunc (h *EnhancedHealthService) RegisterChecker(checker HealthChecker) {\n\th.mu.Lock()\n\tdefer h.mu.Unlock()\n\t\n\th.checkers[checker.Name()] = checker\n\th.logger.Info(\"Health checker registered\", \"name\", checker.Name())\n}\n\n// Check performs all health checks and returns a comprehensive report\nfunc (h *EnhancedHealthService) Check(ctx context.Context) *HealthReport {\n\tstart := time.Now()\n\t\n\th.mu.RLock()\n\tcheckers := make(map[string]HealthChecker, len(h.checkers))\n\tfor name, checker := range h.checkers {\n\t\tcheckers[name] = checker\n\t}\n\th.mu.RUnlock()\n\t\n\t// Perform checks concurrently\n\tresults := make(chan *CheckResult, len(checkers))\n\tvar wg sync.WaitGroup\n\t\n\tfor _, checker := range checkers {\n\t\twg.Add(1)\n\t\tgo func(c HealthChecker) {\n\t\t\tdefer wg.Done()\n\t\t\tresult := c.Check(ctx)\n\t\t\tresults \u003c- result\n\t\t}(checker)\n\t}\n\t\n\t// Wait for all checks to complete\n\tgo func() {\n\t\twg.Wait()\n\t\tclose(results)\n\t}()\n\t\n\t// Collect results\n\tchecks := make(map[string]*CheckResult)\n\tsummary := HealthSummary{}\n\t\n\tfor result := range results {\n\t\tchecks[result.Name] = result\n\t\tsummary.Total++\n\t\t\n\t\tswitch result.Status {\n\t\tcase StatusHealthy:\n\t\t\tsummary.Healthy++\n\t\tcase StatusUnhealthy:\n\t\t\tsummary.Unhealthy++\n\t\tcase StatusDegraded:\n\t\t\tsummary.Degraded++\n\t\tdefault:\n\t\t\tsummary.Unknown++\n\t\t}\n\t}\n\t\n\t// Determine overall status\n\toverallStatus := h.determineOverallStatus(summary)\n\t\n\treport := \u0026HealthReport{\n\t\tStatus:    overallStatus,\n\t\tTimestamp: time.Now(),\n\t\tDuration:  time.Since(start),\n\t\tVersion:   h.config.Version,\n\t\tChecks:    checks,\n\t\tSummary:   summary,\n\t}\n\t\n\th.logger.Info(\"Health check completed\",\n\t\t\"status\", overallStatus,\n\t\t\"duration\", report.Duration,\n\t\t\"total_checks\", summary.Total,\n\t\t\"healthy\", summary.Healthy,\n\t\t\"unhealthy\", summary.Unhealthy,\n\t)\n\t\n\treturn report\n}\n\n// CheckSingle performs a single health check by name\nfunc (h *EnhancedHealthService) CheckSingle(ctx context.Context, name string) *CheckResult {\n\th.mu.RLock()\n\tchecker, exists := h.checkers[name]\n\th.mu.RUnlock()\n\t\n\tif !exists {\n\t\treturn \u0026CheckResult{\n\t\t\tName:      name,\n\t\t\tStatus:    StatusUnknown,\n\t\t\tMessage:   \"Health checker not found\",\n\t\t\tTimestamp: time.Now(),\n\t\t}\n\t}\n\t\n\treturn checker.Check(ctx)\n}\n\n// ListCheckers returns the names of all registered health checkers\nfunc (h *EnhancedHealthService) ListCheckers() []string {\n\th.mu.RLock()\n\tdefer h.mu.RUnlock()\n\t\n\tnames := make([]string, 0, len(h.checkers))\n\tfor name := range h.checkers {\n\t\tnames = append(names, name)\n\t}\n\t\n\treturn names\n}\n\n// determineOverallStatus determines the overall health status\nfunc (h *EnhancedHealthService) determineOverallStatus(summary HealthSummary) Status {\n\tif summary.Total == 0 {\n\t\treturn StatusUnknown\n\t}\n\t\n\t// If any critical checks are unhealthy, overall is unhealthy\n\tif summary.Unhealthy \u003e 0 {\n\t\treturn StatusUnhealthy\n\t}\n\t\n\t// If any checks are degraded, overall is degraded\n\tif summary.Degraded \u003e 0 {\n\t\treturn StatusDegraded\n\t}\n\t\n\t// If all checks are healthy, overall is healthy\n\tif summary.Healthy == summary.Total {\n\t\treturn StatusHealthy\n\t}\n\t\n\t// Otherwise, unknown\n\treturn StatusUnknown\n}\n\n// Built-in health checkers\n\n// DatabaseHealthChecker checks database connectivity\ntype DatabaseHealthChecker struct {\n\tname string\n\tdb   *gorm.DB\n}\n\n// NewDatabaseHealthChecker creates a new database health checker\nfunc NewDatabaseHealthChecker(name string, db *gorm.DB) *DatabaseHealthChecker {\n\treturn \u0026DatabaseHealthChecker{\n\t\tname: name,\n\t\tdb:   db,\n\t}\n}\n\n// Name returns the checker name\nfunc (d *DatabaseHealthChecker) Name() string {\n\treturn d.name\n}\n\n// Check performs the database health check\nfunc (d *DatabaseHealthChecker) Check(ctx context.Context) *CheckResult {\n\tstart := time.Now()\n\tresult := \u0026CheckResult{\n\t\tName:      d.name,\n\t\tTimestamp: time.Now(),\n\t\tDetails:   make(map[string]interface{}),\n\t}\n\t\n\t// Check database connection\n\tsqlDB, err := d.db.DB()\n\tif err != nil {\n\t\tresult.Status = StatusUnhealthy\n\t\tresult.Message = \"Failed to get database connection\"\n\t\tresult.Error = err\n\t\tresult.Duration = time.Since(start)\n\t\treturn result\n\t}\n\t\n\t// Ping database\n\tif err := sqlDB.PingContext(ctx); err != nil {\n\t\tresult.Status = StatusUnhealthy\n\t\tresult.Message = \"Database ping failed\"\n\t\tresult.Error = err\n\t\tresult.Duration = time.Since(start)\n\t\treturn result\n\t}\n\t\n\t// Get connection stats\n\tstats := sqlDB.Stats()\n\tresult.Details[\"connections_open\"] = stats.OpenConnections\n\tresult.Details[\"connections_in_use\"] = stats.InUse\n\tresult.Details[\"connections_idle\"] = stats.Idle\n\tresult.Details[\"max_open_connections\"] = stats.MaxOpenConnections\n\tresult.Details[\"max_idle_connections\"] = stats.MaxIdleClosed\n\t\n\t// Check if we're approaching connection limits\n\tconnectionUsage := float64(stats.OpenConnections) / float64(stats.MaxOpenConnections)\n\tif connectionUsage \u003e 0.9 {\n\t\tresult.Status = StatusDegraded\n\t\tresult.Message = fmt.Sprintf(\"High connection usage: %.1f%%\", connectionUsage*100)\n\t} else {\n\t\tresult.Status = StatusHealthy\n\t\tresult.Message = \"Database connection healthy\"\n\t}\n\t\n\tresult.Duration = time.Since(start)\n\treturn result\n}\n\n// EmailHealthChecker checks email service health\ntype EmailHealthChecker struct {\n\tname         string\n\temailService domain.EmailServiceInterface\n}\n\n// NewEmailHealthChecker creates a new email health checker\nfunc NewEmailHealthChecker(name string, emailService domain.EmailServiceInterface) *EmailHealthChecker {\n\treturn \u0026EmailHealthChecker{\n\t\tname:         name,\n\t\temailService: emailService,\n\t}\n}\n\n// Name returns the checker name\nfunc (e *EmailHealthChecker) Name() string {\n\treturn e.name\n}\n\n// Check performs the email service health check\nfunc (e *EmailHealthChecker) Check(ctx context.Context) *CheckResult {\n\tstart := time.Now()\n\tresult := \u0026CheckResult{\n\t\tName:      e.name,\n\t\tTimestamp: time.Now(),\n\t\tDetails:   make(map[string]interface{}),\n\t}\n\t\n\t// Check email service health\n\tif err := e.emailService.HealthCheck(ctx); err != nil {\n\t\tresult.Status = StatusUnhealthy\n\t\tresult.Message = \"Email service health check failed\"\n\t\tresult.Error = err\n\t\tresult.Duration = time.Since(start)\n\t\treturn result\n\t}\n\t\n\t// Get queue stats\n\tqueueStats, err := e.emailService.GetQueueStats(ctx)\n\tif err != nil {\n\t\tresult.Status = StatusDegraded\n\t\tresult.Message = \"Failed to get email queue stats\"\n\t\tresult.Error = err\n\t} else {\n\t\tresult.Details[\"emails_pending\"] = queueStats.Pending\n\t\tresult.Details[\"emails_sending\"] = queueStats.Sending\n\t\tresult.Details[\"emails_failed\"] = queueStats.Failed\n\t\t\n\t\t// Check if queue is backing up\n\t\tif queueStats.Pending \u003e 1000 {\n\t\t\tresult.Status = StatusDegraded\n\t\t\tresult.Message = fmt.Sprintf(\"Email queue backing up: %d pending\", queueStats.Pending)\n\t\t} else {\n\t\t\tresult.Status = StatusHealthy\n\t\t\tresult.Message = \"Email service healthy\"\n\t\t}\n\t}\n\t\n\tresult.Duration = time.Since(start)\n\treturn result\n}\n\n// ExternalServiceHealthChecker checks external service health\ntype ExternalServiceHealthChecker struct {\n\tname     string\n\tendpoint string\n\ttimeout  time.Duration\n}\n\n// NewExternalServiceHealthChecker creates a new external service health checker\nfunc NewExternalServiceHealthChecker(name, endpoint string, timeout time.Duration) *ExternalServiceHealthChecker {\n\treturn \u0026ExternalServiceHealthChecker{\n\t\tname:     name,\n\t\tendpoint: endpoint,\n\t\ttimeout:  timeout,\n\t}\n}\n\n// Name returns the checker name\nfunc (e *ExternalServiceHealthChecker) Name() string {\n\treturn e.name\n}\n\n// Check performs the external service health check\nfunc (e *ExternalServiceHealthChecker) Check(ctx context.Context) *CheckResult {\n\tstart := time.Now()\n\tresult := \u0026CheckResult{\n\t\tName:      e.name,\n\t\tTimestamp: time.Now(),\n\t\tDetails:   make(map[string]interface{}),\n\t}\n\t\n\t// This would implement actual HTTP health check\n\t// For now, we'll simulate it\n\tresult.Status = StatusHealthy\n\tresult.Message = \"External service healthy\"\n\tresult.Duration = time.Since(start)\n\t\n\treturn result\n}\n\n// MemoryHealthChecker checks memory usage\ntype MemoryHealthChecker struct {\n\tname string\n}\n\n// NewMemoryHealthChecker creates a new memory health checker\nfunc NewMemoryHealthChecker(name string) *MemoryHealthChecker {\n\treturn \u0026MemoryHealthChecker{\n\t\tname: name,\n\t}\n}\n\n// Name returns the checker name\nfunc (m *MemoryHealthChecker) Name() string {\n\treturn m.name\n}\n\n// Check performs the memory health check\nfunc (m *MemoryHealthChecker) Check(ctx context.Context) *CheckResult {\n\tstart := time.Now()\n\tresult := \u0026CheckResult{\n\t\tName:      m.name,\n\t\tTimestamp: time.Now(),\n\t\tDetails:   make(map[string]interface{}),\n\t}\n\t\n\tvar memStats runtime.MemStats\n\truntime.ReadMemStats(\u0026memStats)\n\t\n\tresult.Details[\"alloc_bytes\"] = memStats.Alloc\n\tresult.Details[\"total_alloc_bytes\"] = memStats.TotalAlloc\n\tresult.Details[\"sys_bytes\"] = memStats.Sys\n\tresult.Details[\"num_gc\"] = memStats.NumGC\n\tresult.Details[\"gc_cpu_fraction\"] = memStats.GCCPUFraction\n\t\n\t// Simple memory health check\n\t// You might want to implement more sophisticated checks\n\tallocMB := float64(memStats.Alloc) / 1024 / 1024\n\tif allocMB \u003e 500 { // 500MB threshold\n\t\tresult.Status = StatusDegraded\n\t\tresult.Message = fmt.Sprintf(\"High memory usage: %.1fMB\", allocMB)\n\t} else {\n\t\tresult.Status = StatusHealthy\n\t\tresult.Message = fmt.Sprintf(\"Memory usage normal: %.1fMB\", allocMB)\n\t}\n\t\n\tresult.Duration = time.Since(start)\n\treturn result\n}\n\n// DiskSpaceHealthChecker checks disk space (placeholder implementation)\ntype DiskSpaceHealthChecker struct {\n\tname string\n\tpath string\n}\n\n// NewDiskSpaceHealthChecker creates a new disk space health checker\nfunc NewDiskSpaceHealthChecker(name, path string) *DiskSpaceHealthChecker {\n\treturn \u0026DiskSpaceHealthChecker{\n\t\tname: name,\n\t\tpath: path,\n\t}\n}\n\n// Name returns the checker name\nfunc (d *DiskSpaceHealthChecker) Name() string {\n\treturn d.name\n}\n\n// Check performs the disk space health check\nfunc (d *DiskSpaceHealthChecker) Check(ctx context.Context) *CheckResult {\n\tstart := time.Now()\n\tresult := \u0026CheckResult{\n\t\tName:      d.name,\n\t\tTimestamp: time.Now(),\n\t\tDetails:   make(map[string]interface{}),\n\t}\n\t\n\t// This would implement actual disk space checking\n\t// For now, we'll simulate it\n\tresult.Status = StatusHealthy\n\tresult.Message = \"Disk space healthy\"\n\tresult.Duration = time.Since(start)\n\t\n\treturn result\n}",
      "size": 12418,
      "hash": "4dc5e059002844a28c7fbea14b115eb668e88a3ac7a3e705ab27d185e873d886",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/logger/logger.go",
      "template": true,
      "content": "package logger\n\nimport (\n\t\"log/slog\"\n\t\"os\"\n\t\"strings\"\n)\n\nfunc New(level string, isDevelopment bool) *slog.Logger {\n\tvar logLevel slog.Level\n\tswitch strings.ToLower(level) {\n\tcase \"debug\":\n\t\tlogLevel = slog.LevelDebug\n\tcase \"info\":\n\t\tlogLevel = slog.LevelInfo\n\tcase \"warn\":\n\t\tlogLevel = slog.LevelWarn\n\tcase \"error\":\n\t\tlogLevel = slog.LevelError\n\tdefault:\n\t\tlogLevel = slog.LevelInfo\n\t}\n\n\topts := \u0026slog.HandlerOptions{\n\t\tLevel: logLevel,\n\t}\n\n\tvar handler slog.Handler\n\tif isDevelopment {\n\t\thandler = slog.NewTextHandler(os.Stdout, opts)\n\t} else {\n\t\thandler = slog.NewJSONHandler(os.Stdout, opts)\n\t}\n\n\treturn slog.New(handler)\n}",
      "size": 626,
      "hash": "c596f17ec48770d298bf4e15f17e24e3ada485381b4f8560c1c8420d3aace71d",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/monitoring/metrics/collector.go",
      "template": true,
      "content": "package metrics\n\nimport (\n\t\"context\"\n\t\"sync\"\n\t\"time\"\n\n\t\"log/slog\"\n)\n\n// InMemoryCollector implements MetricsCollector using in-memory storage\ntype InMemoryCollector struct {\n\tmetrics map[string]*inMemoryMetric\n\tmu      sync.RWMutex\n\tlogger  *slog.Logger\n}\n\n// inMemoryMetric represents a metric stored in memory\ntype inMemoryMetric struct {\n\tdefinition *MetricDefinition\n\tvalue      float64\n\tlabels     map[string]string\n\ttimestamp  time.Time\n\t// For histograms\n\tbuckets map[float64]uint64\n\tsum     float64\n\tcount   uint64\n\t// For summaries\n\tsamples []float64\n}\n\n// timer implements the Timer interface\ntype timer struct {\n\tname      string\n\tlabels    map[string]string\n\tstartTime time.Time\n\tcollector *InMemoryCollector\n}\n\n// NewInMemoryCollector creates a new in-memory metrics collector\nfunc NewInMemoryCollector(logger *slog.Logger) *InMemoryCollector {\n\treturn \u0026InMemoryCollector{\n\t\tmetrics: make(map[string]*inMemoryMetric),\n\t\tlogger:  logger,\n\t}\n}\n\n// IncrementCounter increments a counter metric by 1\nfunc (c *InMemoryCollector) IncrementCounter(name string, labels map[string]string) error {\n\treturn c.IncrementCounterBy(name, 1, labels)\n}\n\n// IncrementCounterBy increments a counter metric by the specified value\nfunc (c *InMemoryCollector) IncrementCounterBy(name string, value float64, labels map[string]string) error {\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\t\n\tkey := c.getMetricKey(name, labels)\n\tmetric, exists := c.metrics[key]\n\t\n\tif !exists {\n\t\tmetric = \u0026inMemoryMetric{\n\t\t\tvalue:     0,\n\t\t\tlabels:    labels,\n\t\t\ttimestamp: time.Now(),\n\t\t}\n\t\tc.metrics[key] = metric\n\t}\n\t\n\tmetric.value += value\n\tmetric.timestamp = time.Now()\n\t\n\treturn nil\n}\n\n// SetGauge sets a gauge metric to the specified value\nfunc (c *InMemoryCollector) SetGauge(name string, value float64, labels map[string]string) error {\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\t\n\tkey := c.getMetricKey(name, labels)\n\tmetric, exists := c.metrics[key]\n\t\n\tif !exists {\n\t\tmetric = \u0026inMemoryMetric{\n\t\t\tlabels:    labels,\n\t\t}\n\t\tc.metrics[key] = metric\n\t}\n\t\n\tmetric.value = value\n\tmetric.timestamp = time.Now()\n\t\n\treturn nil\n}\n\n// IncrementGauge increments a gauge metric by 1\nfunc (c *InMemoryCollector) IncrementGauge(name string, labels map[string]string) error {\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\t\n\tkey := c.getMetricKey(name, labels)\n\tmetric, exists := c.metrics[key]\n\t\n\tif !exists {\n\t\tmetric = \u0026inMemoryMetric{\n\t\t\tvalue:     0,\n\t\t\tlabels:    labels,\n\t\t}\n\t\tc.metrics[key] = metric\n\t}\n\t\n\tmetric.value++\n\tmetric.timestamp = time.Now()\n\t\n\treturn nil\n}\n\n// DecrementGauge decrements a gauge metric by 1\nfunc (c *InMemoryCollector) DecrementGauge(name string, labels map[string]string) error {\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\t\n\tkey := c.getMetricKey(name, labels)\n\tmetric, exists := c.metrics[key]\n\t\n\tif !exists {\n\t\tmetric = \u0026inMemoryMetric{\n\t\t\tvalue:     0,\n\t\t\tlabels:    labels,\n\t\t}\n\t\tc.metrics[key] = metric\n\t}\n\t\n\tmetric.value--\n\tmetric.timestamp = time.Now()\n\t\n\treturn nil\n}\n\n// ObserveHistogram observes a value for a histogram metric\nfunc (c *InMemoryCollector) ObserveHistogram(name string, value float64, labels map[string]string) error {\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\t\n\tkey := c.getMetricKey(name, labels)\n\tmetric, exists := c.metrics[key]\n\t\n\tif !exists {\n\t\tmetric = \u0026inMemoryMetric{\n\t\t\tlabels:    labels,\n\t\t\tbuckets:   make(map[float64]uint64),\n\t\t\tsum:       0,\n\t\t\tcount:     0,\n\t\t}\n\t\tc.metrics[key] = metric\n\t}\n\t\n\t// Update histogram buckets\n\tif metric.definition != nil \u0026\u0026 metric.definition.Buckets != nil {\n\t\tfor _, bucket := range metric.definition.Buckets {\n\t\t\tif value \u003c= bucket {\n\t\t\t\tmetric.buckets[bucket]++\n\t\t\t}\n\t\t}\n\t}\n\t\n\tmetric.sum += value\n\tmetric.count++\n\tmetric.timestamp = time.Now()\n\t\n\treturn nil\n}\n\n// ObserveSummary observes a value for a summary metric\nfunc (c *InMemoryCollector) ObserveSummary(name string, value float64, labels map[string]string) error {\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\t\n\tkey := c.getMetricKey(name, labels)\n\tmetric, exists := c.metrics[key]\n\t\n\tif !exists {\n\t\tmetric = \u0026inMemoryMetric{\n\t\t\tlabels:  labels,\n\t\t\tsamples: make([]float64, 0),\n\t\t}\n\t\tc.metrics[key] = metric\n\t}\n\t\n\t// Add sample (keep only last 1000 samples for memory efficiency)\n\tmetric.samples = append(metric.samples, value)\n\tif len(metric.samples) \u003e 1000 {\n\t\tmetric.samples = metric.samples[1:]\n\t}\n\t\n\tmetric.timestamp = time.Now()\n\t\n\treturn nil\n}\n\n// StartTimer starts a timer for measuring duration\nfunc (c *InMemoryCollector) StartTimer(name string, labels map[string]string) Timer {\n\treturn \u0026timer{\n\t\tname:      name,\n\t\tlabels:    labels,\n\t\tstartTime: time.Now(),\n\t\tcollector: c,\n\t}\n}\n\n// RecordDuration records a duration measurement\nfunc (c *InMemoryCollector) RecordDuration(name string, duration time.Duration, labels map[string]string) error {\n\treturn c.ObserveHistogram(name, duration.Seconds(), labels)\n}\n\n// RegisterMetric registers a metric definition\nfunc (c *InMemoryCollector) RegisterMetric(metric *MetricDefinition) error {\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\t\n\t// Initialize metric if needed\n\tkey := metric.Name\n\tif _, exists := c.metrics[key]; !exists {\n\t\tinMemMetric := \u0026inMemoryMetric{\n\t\t\tdefinition: metric,\n\t\t\ttimestamp:  time.Now(),\n\t\t}\n\t\t\n\t\t// Initialize type-specific fields\n\t\tswitch metric.Type {\n\t\tcase MetricTypeHistogram:\n\t\t\tinMemMetric.buckets = make(map[float64]uint64)\n\t\t\tif metric.Buckets != nil {\n\t\t\t\tfor _, bucket := range metric.Buckets {\n\t\t\t\t\tinMemMetric.buckets[bucket] = 0\n\t\t\t\t}\n\t\t\t}\n\t\tcase MetricTypeSummary:\n\t\t\tinMemMetric.samples = make([]float64, 0)\n\t\t}\n\t\t\n\t\tc.metrics[key] = inMemMetric\n\t}\n\t\n\tc.logger.Debug(\"Metric registered\", \"name\", metric.Name, \"type\", metric.Type)\n\treturn nil\n}\n\n// Collect returns all current metrics\nfunc (c *InMemoryCollector) Collect(ctx context.Context) ([]*Metric, error) {\n\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n\t\n\tvar metrics []*Metric\n\t\n\tfor key, metric := range c.metrics {\n\t\t// Extract metric name from key (remove label hash)\n\t\tname := c.extractMetricName(key)\n\t\t\n\t\tm := \u0026Metric{\n\t\t\tName:      name,\n\t\t\tValue:     metric.value,\n\t\t\tLabels:    metric.labels,\n\t\t\tTimestamp: metric.timestamp,\n\t\t}\n\t\t\n\t\tif metric.definition != nil {\n\t\t\tm.Type = metric.definition.Type\n\t\t\tm.Help = metric.definition.Help\n\t\t}\n\t\t\n\t\tmetrics = append(metrics, m)\n\t}\n\t\n\treturn metrics, nil\n}\n\n// Stop stops the timer and returns the elapsed duration\nfunc (t *timer) Stop() time.Duration {\n\treturn time.Since(t.startTime)\n}\n\n// StopAndRecord stops the timer and records the duration\nfunc (t *timer) StopAndRecord() error {\n\tduration := time.Since(t.startTime)\n\treturn t.collector.RecordDuration(t.name, duration, t.labels)\n}\n\n// Helper methods\n\n// getMetricKey generates a unique key for a metric with labels\nfunc (c *InMemoryCollector) getMetricKey(name string, labels map[string]string) string {\n\tkey := name\n\tif labels != nil \u0026\u0026 len(labels) \u003e 0 {\n\t\tfor k, v := range labels {\n\t\t\tkey += \";\" + k + \"=\" + v\n\t\t}\n\t}\n\treturn key\n}\n\n// extractMetricName extracts the metric name from a metric key\nfunc (c *InMemoryCollector) extractMetricName(key string) string {\n\t// Find the first semicolon which separates name from labels\n\tfor i, char := range key {\n\t\tif char == ';' {\n\t\t\treturn key[:i]\n\t\t}\n\t}\n\treturn key\n}\n\n// GetCurrentValue returns the current value of a metric\nfunc (c *InMemoryCollector) GetCurrentValue(name string, labels map[string]string) (float64, bool) {\n\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n\t\n\tkey := c.getMetricKey(name, labels)\n\tmetric, exists := c.metrics[key]\n\tif !exists {\n\t\treturn 0, false\n\t}\n\t\n\treturn metric.value, true\n}\n\n// GetMetricCount returns the number of registered metrics\nfunc (c *InMemoryCollector) GetMetricCount() int {\n\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n\t\n\treturn len(c.metrics)\n}\n\n// Reset resets all metrics to their initial values\nfunc (c *InMemoryCollector) Reset() {\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\t\n\tfor _, metric := range c.metrics {\n\t\tmetric.value = 0\n\t\tmetric.sum = 0\n\t\tmetric.count = 0\n\t\tif metric.buckets != nil {\n\t\t\tfor bucket := range metric.buckets {\n\t\t\t\tmetric.buckets[bucket] = 0\n\t\t\t}\n\t\t}\n\t\tif metric.samples != nil {\n\t\t\tmetric.samples = metric.samples[:0]\n\t\t}\n\t\tmetric.timestamp = time.Now()\n\t}\n}\n\n// GetStats returns statistics about the collector\nfunc (c *InMemoryCollector) GetStats() map[string]interface{} {\n\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n\t\n\tstats := map[string]interface{}{\n\t\t\"total_metrics\": len(c.metrics),\n\t\t\"memory_usage\":  \"estimated\", // Could calculate actual memory usage\n\t}\n\t\n\t// Count metrics by type\n\ttypeCount := make(map[MetricType]int)\n\tfor _, metric := range c.metrics {\n\t\tif metric.definition != nil {\n\t\t\ttypeCount[metric.definition.Type]++\n\t\t}\n\t}\n\t\n\tstats[\"metrics_by_type\"] = typeCount\n\t\n\treturn stats\n}",
      "size": 8616,
      "hash": "3d69cfb94ac3f22d838c1dacd5bb0a41ccba43952e6e2f073301b8a994269f89",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/monitoring/metrics/types.go",
      "template": true,
      "content": "package metrics\n\nimport (\n\t\"context\"\n\t\"time\"\n)\n\n// MetricType defines the type of metric\ntype MetricType string\n\nconst (\n\tMetricTypeCounter   MetricType = \"counter\"\n\tMetricTypeGauge     MetricType = \"gauge\"\n\tMetricTypeHistogram MetricType = \"histogram\"\n\tMetricTypeSummary   MetricType = \"summary\"\n)\n\n// Metric represents a metric measurement\ntype Metric struct {\n\tName      string            `json:\"name\"`\n\tType      MetricType        `json:\"type\"`\n\tValue     float64           `json:\"value\"`\n\tLabels    map[string]string `json:\"labels,omitempty\"`\n\tTimestamp time.Time         `json:\"timestamp\"`\n\tHelp      string            `json:\"help,omitempty\"`\n}\n\n// MetricsCollector defines the interface for collecting metrics\ntype MetricsCollector interface {\n\t// Counter metrics\n\tIncrementCounter(name string, labels map[string]string) error\n\tIncrementCounterBy(name string, value float64, labels map[string]string) error\n\t\n\t// Gauge metrics\n\tSetGauge(name string, value float64, labels map[string]string) error\n\tIncrementGauge(name string, labels map[string]string) error\n\tDecrementGauge(name string, labels map[string]string) error\n\t\n\t// Histogram metrics\n\tObserveHistogram(name string, value float64, labels map[string]string) error\n\t\n\t// Summary metrics\n\tObserveSummary(name string, value float64, labels map[string]string) error\n\t\n\t// Timing utilities\n\tStartTimer(name string, labels map[string]string) Timer\n\tRecordDuration(name string, duration time.Duration, labels map[string]string) error\n\t\n\t// Registration\n\tRegisterMetric(metric *MetricDefinition) error\n\t\n\t// Collection\n\tCollect(ctx context.Context) ([]*Metric, error)\n}\n\n// Timer represents a timing measurement\ntype Timer interface {\n\tStop() time.Duration\n\tStopAndRecord() error\n}\n\n// MetricDefinition defines a metric schema\ntype MetricDefinition struct {\n\tName        string            `json:\"name\"`\n\tType        MetricType        `json:\"type\"`\n\tHelp        string            `json:\"help\"`\n\tLabels      []string          `json:\"labels,omitempty\"`\n\tBuckets     []float64         `json:\"buckets,omitempty\"`     // For histograms\n\tObjectives  map[float64]float64 `json:\"objectives,omitempty\"` // For summaries\n}\n\n// HTTPMetrics represents HTTP-specific metrics\ntype HTTPMetrics struct {\n\tRequestsTotal     string\n\tRequestDuration   string\n\tRequestSize       string\n\tResponseSize      string\n\tRequestsInFlight  string\n}\n\n// DatabaseMetrics represents database-specific metrics\ntype DatabaseMetrics struct {\n\tConnectionsOpen     string\n\tConnectionsIdle     string\n\tConnectionsInUse    string\n\tQueriesTotal        string\n\tQueryDuration       string\n\tTransactionsTotal   string\n\tTransactionDuration string\n}\n\n// EmailMetrics represents email-specific metrics\ntype EmailMetrics struct {\n\tEmailsSent          string\n\tEmailsFailed        string\n\tEmailsQueued        string\n\tEmailDeliveryTime   string\n\tEmailTemplatesUsed  string\n}\n\n// AuthMetrics represents authentication-specific metrics\ntype AuthMetrics struct {\n\tLoginAttempts       string\n\tLoginSuccesses      string\n\tLoginFailures       string\n\tTokensIssued        string\n\tTokensValidated     string\n\tPasswordResets      string\n}\n\n// SystemMetrics represents system-level metrics\ntype SystemMetrics struct {\n\tCPUUsage           string\n\tMemoryUsage        string\n\tDiskUsage          string\n\tNetworkBytesIn     string\n\tNetworkBytesOut    string\n\tGoroutinesCount    string\n\tGCDuration         string\n}\n\n// BusinessMetrics represents business-specific metrics\ntype BusinessMetrics struct {\n\tUsersRegistered     string\n\tUsersActive         string\n\tUserSessions        string\n\tFeatureUsage        string\n\tErrorsTotal         string\n\tUploadedFiles       string\n}\n\n// DefaultMetrics contains all standard metric names\ntype DefaultMetrics struct {\n\tHTTP     HTTPMetrics\n\tDatabase DatabaseMetrics\n\tEmail    EmailMetrics\n\tAuth     AuthMetrics\n\tSystem   SystemMetrics\n\tBusiness BusinessMetrics\n}\n\n// GetDefaultMetrics returns the default metric definitions\nfunc GetDefaultMetrics() *DefaultMetrics {\n\treturn \u0026DefaultMetrics{\n\t\tHTTP: HTTPMetrics{\n\t\t\tRequestsTotal:    \"http_requests_total\",\n\t\t\tRequestDuration:  \"http_request_duration_seconds\",\n\t\t\tRequestSize:      \"http_request_size_bytes\",\n\t\t\tResponseSize:     \"http_response_size_bytes\",\n\t\t\tRequestsInFlight: \"http_requests_in_flight\",\n\t\t},\n\t\tDatabase: DatabaseMetrics{\n\t\t\tConnectionsOpen:     \"db_connections_open\",\n\t\t\tConnectionsIdle:     \"db_connections_idle\",\n\t\t\tConnectionsInUse:    \"db_connections_in_use\",\n\t\t\tQueriesTotal:        \"db_queries_total\",\n\t\t\tQueryDuration:       \"db_query_duration_seconds\",\n\t\t\tTransactionsTotal:   \"db_transactions_total\",\n\t\t\tTransactionDuration: \"db_transaction_duration_seconds\",\n\t\t},\n\t\tEmail: EmailMetrics{\n\t\t\tEmailsSent:        \"emails_sent_total\",\n\t\t\tEmailsFailed:      \"emails_failed_total\",\n\t\t\tEmailsQueued:      \"emails_queued\",\n\t\t\tEmailDeliveryTime: \"email_delivery_duration_seconds\",\n\t\t\tEmailTemplatesUsed: \"email_templates_used_total\",\n\t\t},\n\t\tAuth: AuthMetrics{\n\t\t\tLoginAttempts:   \"auth_login_attempts_total\",\n\t\t\tLoginSuccesses:  \"auth_login_successes_total\",\n\t\t\tLoginFailures:   \"auth_login_failures_total\",\n\t\t\tTokensIssued:    \"auth_tokens_issued_total\",\n\t\t\tTokensValidated: \"auth_tokens_validated_total\",\n\t\t\tPasswordResets:  \"auth_password_resets_total\",\n\t\t},\n\t\tSystem: SystemMetrics{\n\t\t\tCPUUsage:        \"system_cpu_usage_percent\",\n\t\t\tMemoryUsage:     \"system_memory_usage_bytes\",\n\t\t\tDiskUsage:       \"system_disk_usage_bytes\",\n\t\t\tNetworkBytesIn:  \"system_network_bytes_in_total\",\n\t\t\tNetworkBytesOut: \"system_network_bytes_out_total\",\n\t\t\tGoroutinesCount: \"system_goroutines_count\",\n\t\t\tGCDuration:      \"system_gc_duration_seconds\",\n\t\t},\n\t\tBusiness: BusinessMetrics{\n\t\t\tUsersRegistered: \"business_users_registered_total\",\n\t\t\tUsersActive:     \"business_users_active\",\n\t\t\tUserSessions:    \"business_user_sessions_total\",\n\t\t\tFeatureUsage:    \"business_feature_usage_total\",\n\t\t\tErrorsTotal:     \"business_errors_total\",\n\t\t\tUploadedFiles:   \"business_uploaded_files_total\",\n\t\t},\n\t}\n}\n\n// DefaultHistogramBuckets provides default histogram buckets for different use cases\nvar DefaultHistogramBuckets = map[string][]float64{\n\t\"http_duration\": {0.001, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10},\n\t\"db_duration\":   {0.0001, 0.0005, 0.001, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1},\n\t\"email_duration\": {0.1, 0.5, 1, 2, 5, 10, 30, 60, 120, 300},\n\t\"file_size\":     {1024, 10240, 102400, 1048576, 10485760, 104857600, 1073741824}, // 1KB to 1GB\n}\n\n// DefaultSummaryObjectives provides default summary objectives\nvar DefaultSummaryObjectives = map[float64]float64{\n\t0.5:  0.05,\n\t0.9:  0.01,\n\t0.95: 0.005,\n\t0.99: 0.001,\n}\n\n// MetricsRegistry manages metric definitions and provides a central registry\ntype MetricsRegistry struct {\n\tdefinitions map[string]*MetricDefinition\n\tcollector   MetricsCollector\n}\n\n// NewMetricsRegistry creates a new metrics registry\nfunc NewMetricsRegistry(collector MetricsCollector) *MetricsRegistry {\n\tregistry := \u0026MetricsRegistry{\n\t\tdefinitions: make(map[string]*MetricDefinition),\n\t\tcollector:   collector,\n\t}\n\t\n\t// Register default metrics\n\tregistry.RegisterDefaultMetrics()\n\t\n\treturn registry\n}\n\n// RegisterDefaultMetrics registers all default metric definitions\nfunc (r *MetricsRegistry) RegisterDefaultMetrics() {\n\tmetrics := GetDefaultMetrics()\n\t\n\t// HTTP metrics\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName:   metrics.HTTP.RequestsTotal,\n\t\tType:   MetricTypeCounter,\n\t\tHelp:   \"Total number of HTTP requests\",\n\t\tLabels: []string{\"method\", \"status\", \"endpoint\"},\n\t})\n\t\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName:    metrics.HTTP.RequestDuration,\n\t\tType:    MetricTypeHistogram,\n\t\tHelp:    \"HTTP request duration in seconds\",\n\t\tLabels:  []string{\"method\", \"status\", \"endpoint\"},\n\t\tBuckets: DefaultHistogramBuckets[\"http_duration\"],\n\t})\n\t\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName:   metrics.HTTP.RequestsInFlight,\n\t\tType:   MetricTypeGauge,\n\t\tHelp:   \"Number of HTTP requests currently being processed\",\n\t\tLabels: []string{\"method\", \"endpoint\"},\n\t})\n\t\n\t// Database metrics\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName: metrics.Database.ConnectionsOpen,\n\t\tType: MetricTypeGauge,\n\t\tHelp: \"Number of open database connections\",\n\t})\n\t\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName:    metrics.Database.QueryDuration,\n\t\tType:    MetricTypeHistogram,\n\t\tHelp:    \"Database query duration in seconds\",\n\t\tLabels:  []string{\"operation\", \"table\"},\n\t\tBuckets: DefaultHistogramBuckets[\"db_duration\"],\n\t})\n\t\n\t// Email metrics\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName:   metrics.Email.EmailsSent,\n\t\tType:   MetricTypeCounter,\n\t\tHelp:   \"Total number of emails sent\",\n\t\tLabels: []string{\"provider\", \"template\"},\n\t})\n\t\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName:   metrics.Email.EmailsQueued,\n\t\tType:   MetricTypeGauge,\n\t\tHelp:   \"Number of emails currently in queue\",\n\t\tLabels: []string{\"priority\"},\n\t})\n\t\n\t// Auth metrics\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName:   metrics.Auth.LoginAttempts,\n\t\tType:   MetricTypeCounter,\n\t\tHelp:   \"Total number of login attempts\",\n\t\tLabels: []string{\"method\", \"result\"},\n\t})\n\t\n\t// System metrics\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName: metrics.System.CPUUsage,\n\t\tType: MetricTypeGauge,\n\t\tHelp: \"CPU usage percentage\",\n\t})\n\t\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName: metrics.System.MemoryUsage,\n\t\tType: MetricTypeGauge,\n\t\tHelp: \"Memory usage in bytes\",\n\t})\n\t\n\t// Business metrics\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName:   metrics.Business.UsersRegistered,\n\t\tType:   MetricTypeCounter,\n\t\tHelp:   \"Total number of registered users\",\n\t\tLabels: []string{\"source\"},\n\t})\n\t\n\tr.RegisterMetric(\u0026MetricDefinition{\n\t\tName:   metrics.Business.ErrorsTotal,\n\t\tType:   MetricTypeCounter,\n\t\tHelp:   \"Total number of application errors\",\n\t\tLabels: []string{\"code\", \"severity\"},\n\t})\n}\n\n// RegisterMetric registers a metric definition\nfunc (r *MetricsRegistry) RegisterMetric(definition *MetricDefinition) error {\n\tr.definitions[definition.Name] = definition\n\treturn r.collector.RegisterMetric(definition)\n}\n\n// GetMetric returns a metric definition by name\nfunc (r *MetricsRegistry) GetMetric(name string) (*MetricDefinition, bool) {\n\tdef, exists := r.definitions[name]\n\treturn def, exists\n}\n\n// ListMetrics returns all registered metric definitions\nfunc (r *MetricsRegistry) ListMetrics() map[string]*MetricDefinition {\n\treturn r.definitions\n}\n\n// GetCollector returns the underlying metrics collector\nfunc (r *MetricsRegistry) GetCollector() MetricsCollector {\n\treturn r.collector\n}",
      "size": 10440,
      "hash": "5e13a200a265a43035387039861145d63b7f82d4ccd745652b5e0c6a81f6b38a",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/monitoring/middleware.go",
      "template": true,
      "content": "package monitoring\n\nimport (\n\t\"log/slog\"\n\t\"runtime\"\n\t\"strconv\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/monitoring/metrics\"\n)\n\n// MonitoringMiddleware provides comprehensive monitoring for HTTP requests\nfunc MonitoringMiddleware(config *config.Config, metricsCollector metrics.MetricsCollector, logger *slog.Logger) gin.HandlerFunc {\n\tif !config.MetricsEnabled {\n\t\treturn func(c *gin.Context) { c.Next() }\n\t}\n\n\tdefaultMetrics := metrics.GetDefaultMetrics()\n\n\treturn gin.HandlerFunc(func(c *gin.Context) {\n\t\tstart := time.Now()\n\t\tpath := c.Request.URL.Path\n\t\tmethod := c.Request.Method\n\t\t\n\t\t// Increment in-flight requests\n\t\tlabels := map[string]string{\n\t\t\t\"method\":   method,\n\t\t\t\"endpoint\": path,\n\t\t}\n\t\tmetricsCollector.IncrementGauge(defaultMetrics.HTTP.RequestsInFlight, labels)\n\t\t\n\t\t// Process request\n\t\tc.Next()\n\t\t\n\t\t// Calculate metrics after request processing\n\t\tduration := time.Since(start)\n\t\tstatus := strconv.Itoa(c.Writer.Status())\n\t\t\n\t\t// Update labels with response status\n\t\tlabels[\"status\"] = status\n\t\t\n\t\t// Record metrics\n\t\tmetricsCollector.IncrementCounter(defaultMetrics.HTTP.RequestsTotal, labels)\n\t\tmetricsCollector.ObserveHistogram(defaultMetrics.HTTP.RequestDuration, duration.Seconds(), labels)\n\t\t\n\t\t// Record request/response sizes if available\n\t\tif c.Request.ContentLength \u003e 0 {\n\t\t\tmetricsCollector.ObserveHistogram(defaultMetrics.HTTP.RequestSize, float64(c.Request.ContentLength), labels)\n\t\t}\n\t\t\n\t\tresponseSize := c.Writer.Size()\n\t\tif responseSize \u003e 0 {\n\t\t\tmetricsCollector.ObserveHistogram(defaultMetrics.HTTP.ResponseSize, float64(responseSize), labels)\n\t\t}\n\t\t\n\t\t// Decrement in-flight requests\n\t\tmetricsCollector.DecrementGauge(defaultMetrics.HTTP.RequestsInFlight, map[string]string{\n\t\t\t\"method\":   method,\n\t\t\t\"endpoint\": path,\n\t\t})\n\t\t\n\t\t// Enhanced logging for monitoring\n\t\tlogLevel := slog.LevelInfo\n\t\tif c.Writer.Status() \u003e= 400 {\n\t\t\tlogLevel = slog.LevelWarn\n\t\t}\n\t\tif c.Writer.Status() \u003e= 500 {\n\t\t\tlogLevel = slog.LevelError\n\t\t}\n\t\t\n\t\tlogger.Log(c.Request.Context(), logLevel, \"HTTP request completed\",\n\t\t\t\"method\", method,\n\t\t\t\"path\", path,\n\t\t\t\"status\", status,\n\t\t\t\"duration\", duration.String(),\n\t\t\t\"request_size\", c.Request.ContentLength,\n\t\t\t\"response_size\", responseSize,\n\t\t\t\"ip\", c.ClientIP(),\n\t\t\t\"user_agent\", c.Request.UserAgent(),\n\t\t\t\"trace_id\", c.GetString(\"trace_id\"),\n\t\t\t\"request_id\", c.GetString(\"request_id\"),\n\t\t)\n\t})\n}\n\n// DatabaseMetricsMiddleware provides database monitoring\nfunc DatabaseMetricsMiddleware(metricsCollector metrics.MetricsCollector) func(operation, table string) func() {\n\tdefaultMetrics := metrics.GetDefaultMetrics()\n\t\n\treturn func(operation, table string) func() {\n\t\tstart := time.Now()\n\t\t\n\t\treturn func() {\n\t\t\tduration := time.Since(start)\n\t\t\tlabels := map[string]string{\n\t\t\t\t\"operation\": operation,\n\t\t\t\t\"table\":     table,\n\t\t\t}\n\t\t\t\n\t\t\tmetricsCollector.IncrementCounter(defaultMetrics.Database.QueriesTotal, labels)\n\t\t\tmetricsCollector.ObserveHistogram(defaultMetrics.Database.QueryDuration, duration.Seconds(), labels)\n\t\t}\n\t}\n}\n\n// EmailMetricsRecorder provides email monitoring\ntype EmailMetricsRecorder struct {\n\tmetricsCollector metrics.MetricsCollector\n\tdefaultMetrics   *metrics.DefaultMetrics\n}\n\n// NewEmailMetricsRecorder creates a new email metrics recorder\nfunc NewEmailMetricsRecorder(metricsCollector metrics.MetricsCollector) *EmailMetricsRecorder {\n\treturn \u0026EmailMetricsRecorder{\n\t\tmetricsCollector: metricsCollector,\n\t\tdefaultMetrics:   metrics.GetDefaultMetrics(),\n\t}\n}\n\n// RecordEmailSent records a successful email send\nfunc (e *EmailMetricsRecorder) RecordEmailSent(provider, template string, duration time.Duration) {\n\tlabels := map[string]string{\n\t\t\"provider\": provider,\n\t\t\"template\": template,\n\t}\n\t\n\te.metricsCollector.IncrementCounter(e.defaultMetrics.Email.EmailsSent, labels)\n\te.metricsCollector.ObserveHistogram(e.defaultMetrics.Email.EmailDeliveryTime, duration.Seconds(), labels)\n}\n\n// RecordEmailFailed records a failed email send\nfunc (e *EmailMetricsRecorder) RecordEmailFailed(provider, template string, reason string) {\n\tlabels := map[string]string{\n\t\t\"provider\": provider,\n\t\t\"template\": template,\n\t\t\"reason\":   reason,\n\t}\n\t\n\te.metricsCollector.IncrementCounter(e.defaultMetrics.Email.EmailsFailed, labels)\n}\n\n// RecordEmailQueued records an email being queued\nfunc (e *EmailMetricsRecorder) RecordEmailQueued(priority string) {\n\tlabels := map[string]string{\n\t\t\"priority\": priority,\n\t}\n\t\n\te.metricsCollector.IncrementGauge(e.defaultMetrics.Email.EmailsQueued, labels)\n}\n\n// RecordEmailDequeued records an email being dequeued\nfunc (e *EmailMetricsRecorder) RecordEmailDequeued(priority string) {\n\tlabels := map[string]string{\n\t\t\"priority\": priority,\n\t}\n\t\n\te.metricsCollector.DecrementGauge(e.defaultMetrics.Email.EmailsQueued, labels)\n}\n\n// AuthMetricsRecorder provides authentication monitoring\ntype AuthMetricsRecorder struct {\n\tmetricsCollector metrics.MetricsCollector\n\tdefaultMetrics   *metrics.DefaultMetrics\n}\n\n// NewAuthMetricsRecorder creates a new auth metrics recorder\nfunc NewAuthMetricsRecorder(metricsCollector metrics.MetricsCollector) *AuthMetricsRecorder {\n\treturn \u0026AuthMetricsRecorder{\n\t\tmetricsCollector: metricsCollector,\n\t\tdefaultMetrics:   metrics.GetDefaultMetrics(),\n\t}\n}\n\n// RecordLoginAttempt records a login attempt\nfunc (a *AuthMetricsRecorder) RecordLoginAttempt(method, result string) {\n\tlabels := map[string]string{\n\t\t\"method\": method,\n\t\t\"result\": result,\n\t}\n\t\n\ta.metricsCollector.IncrementCounter(a.defaultMetrics.Auth.LoginAttempts, labels)\n\t\n\t// Also record specific success/failure counters\n\tif result == \"success\" {\n\t\ta.metricsCollector.IncrementCounter(a.defaultMetrics.Auth.LoginSuccesses, map[string]string{\"method\": method})\n\t} else {\n\t\ta.metricsCollector.IncrementCounter(a.defaultMetrics.Auth.LoginFailures, map[string]string{\"method\": method})\n\t}\n}\n\n// RecordTokenIssued records a token being issued\nfunc (a *AuthMetricsRecorder) RecordTokenIssued(tokenType string) {\n\tlabels := map[string]string{\n\t\t\"type\": tokenType,\n\t}\n\t\n\ta.metricsCollector.IncrementCounter(a.defaultMetrics.Auth.TokensIssued, labels)\n}\n\n// RecordTokenValidated records a token validation\nfunc (a *AuthMetricsRecorder) RecordTokenValidated(tokenType, result string) {\n\tlabels := map[string]string{\n\t\t\"type\":   tokenType,\n\t\t\"result\": result,\n\t}\n\t\n\ta.metricsCollector.IncrementCounter(a.defaultMetrics.Auth.TokensValidated, labels)\n}\n\n// RecordPasswordReset records a password reset request\nfunc (a *AuthMetricsRecorder) RecordPasswordReset(method string) {\n\tlabels := map[string]string{\n\t\t\"method\": method,\n\t}\n\t\n\ta.metricsCollector.IncrementCounter(a.defaultMetrics.Auth.PasswordResets, labels)\n}\n\n// BusinessMetricsRecorder provides business metrics recording\ntype BusinessMetricsRecorder struct {\n\tmetricsCollector metrics.MetricsCollector\n\tdefaultMetrics   *metrics.DefaultMetrics\n}\n\n// NewBusinessMetricsRecorder creates a new business metrics recorder\nfunc NewBusinessMetricsRecorder(metricsCollector metrics.MetricsCollector) *BusinessMetricsRecorder {\n\treturn \u0026BusinessMetricsRecorder{\n\t\tmetricsCollector: metricsCollector,\n\t\tdefaultMetrics:   metrics.GetDefaultMetrics(),\n\t}\n}\n\n// RecordUserRegistration records a user registration\nfunc (b *BusinessMetricsRecorder) RecordUserRegistration(source string) {\n\tlabels := map[string]string{\n\t\t\"source\": source,\n\t}\n\t\n\tb.metricsCollector.IncrementCounter(b.defaultMetrics.Business.UsersRegistered, labels)\n}\n\n// RecordActiveUsers records the number of active users\nfunc (b *BusinessMetricsRecorder) RecordActiveUsers(count float64) {\n\tb.metricsCollector.SetGauge(b.defaultMetrics.Business.UsersActive, count, nil)\n}\n\n// RecordUserSession records a user session\nfunc (b *BusinessMetricsRecorder) RecordUserSession(sessionType string) {\n\tlabels := map[string]string{\n\t\t\"type\": sessionType,\n\t}\n\t\n\tb.metricsCollector.IncrementCounter(b.defaultMetrics.Business.UserSessions, labels)\n}\n\n// RecordFeatureUsage records feature usage\nfunc (b *BusinessMetricsRecorder) RecordFeatureUsage(feature string) {\n\tlabels := map[string]string{\n\t\t\"feature\": feature,\n\t}\n\t\n\tb.metricsCollector.IncrementCounter(b.defaultMetrics.Business.FeatureUsage, labels)\n}\n\n// RecordError records an application error\nfunc (b *BusinessMetricsRecorder) RecordError(code, severity string) {\n\tlabels := map[string]string{\n\t\t\"code\":     code,\n\t\t\"severity\": severity,\n\t}\n\t\n\tb.metricsCollector.IncrementCounter(b.defaultMetrics.Business.ErrorsTotal, labels)\n}\n\n// RecordFileUpload records a file upload\nfunc (b *BusinessMetricsRecorder) RecordFileUpload(fileType string, size float64) {\n\tlabels := map[string]string{\n\t\t\"type\": fileType,\n\t}\n\t\n\tb.metricsCollector.IncrementCounter(b.defaultMetrics.Business.UploadedFiles, labels)\n\t\n\t// Also record file size if provided\n\tif size \u003e 0 {\n\t\tb.metricsCollector.ObserveHistogram(\"file_upload_size_bytes\", size, labels)\n\t}\n}\n\n// SystemMetricsCollector collects system-level metrics\ntype SystemMetricsCollector struct {\n\tmetricsCollector metrics.MetricsCollector\n\tdefaultMetrics   *metrics.DefaultMetrics\n\tlogger           *slog.Logger\n}\n\n// NewSystemMetricsCollector creates a new system metrics collector\nfunc NewSystemMetricsCollector(metricsCollector metrics.MetricsCollector, logger *slog.Logger) *SystemMetricsCollector {\n\treturn \u0026SystemMetricsCollector{\n\t\tmetricsCollector: metricsCollector,\n\t\tdefaultMetrics:   metrics.GetDefaultMetrics(),\n\t\tlogger:           logger,\n\t}\n}\n\n// StartSystemMetricsCollection starts collecting system metrics\nfunc (s *SystemMetricsCollector) StartSystemMetricsCollection() {\n\tticker := time.NewTicker(30 * time.Second) // Collect every 30 seconds\n\tgo func() {\n\t\tdefer ticker.Stop()\n\t\tfor {\n\t\t\tselect {\n\t\t\tcase \u003c-ticker.C:\n\t\t\t\ts.collectSystemMetrics()\n\t\t\t}\n\t\t}\n\t}()\n}\n\n// collectSystemMetrics collects various system metrics\nfunc (s *SystemMetricsCollector) collectSystemMetrics() {\n\t// This would integrate with actual system monitoring\n\t// For now, we'll collect some basic Go runtime metrics\n\t\n\t// Memory stats\n\tvar m runtime.MemStats\n\truntime.ReadMemStats(\u0026m)\n\t\n\ts.metricsCollector.SetGauge(s.defaultMetrics.System.MemoryUsage, float64(m.Alloc), nil)\n\ts.metricsCollector.SetGauge(s.defaultMetrics.System.GoroutinesCount, float64(runtime.NumGoroutine()), nil)\n\t\n\t// GC stats\n\ts.metricsCollector.ObserveHistogram(s.defaultMetrics.System.GCDuration, \n\t\tfloat64(m.PauseTotalNs)/1e9, // Convert to seconds\n\t\tnil)\n}\n\n// GetAllRecorders returns all metrics recorders for easy access\nfunc GetAllRecorders(metricsCollector metrics.MetricsCollector, logger *slog.Logger) (*EmailMetricsRecorder, *AuthMetricsRecorder, *BusinessMetricsRecorder, *SystemMetricsCollector) {\n\treturn NewEmailMetricsRecorder(metricsCollector),\n\t\t   NewAuthMetricsRecorder(metricsCollector),\n\t\t   NewBusinessMetricsRecorder(metricsCollector),\n\t\t   NewSystemMetricsCollector(metricsCollector, logger)\n}",
      "size": 10890,
      "hash": "6e779eb918618a730e817acf831546510dd3b31fe57deddfdaa47048c8c2565d",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/shared/repository/base.go",
      "template": true,
      "content": "package repository\n\nimport (\n\t\"context\"\n\t\"time\"\n\n\t\"gorm.io/gorm\"\n)\n\n// BaseModel represents the common fields for all database models\ntype BaseModel struct {\n\tID        uint           `json:\"id\" gorm:\"primarykey\"`\n\tCreatedAt time.Time      `json:\"created_at\"`\n\tUpdatedAt time.Time      `json:\"updated_at\"`\n\tDeletedAt gorm.DeletedAt `json:\"-\" gorm:\"index\"`\n}\n\n// Repository interface defines common repository operations\ntype Repository[T any] interface {\n\t// Basic CRUD operations\n\tCreate(ctx context.Context, entity *T) error\n\tGetByID(ctx context.Context, id uint) (*T, error)\n\tUpdate(ctx context.Context, entity *T) error\n\tDelete(ctx context.Context, id uint) error\n\n\t// Batch operations\n\tCreateMany(ctx context.Context, entities []T) error\n\tUpdateMany(ctx context.Context, entities []T) error\n\tDeleteMany(ctx context.Context, ids []uint) error\n\n\t// Query operations\n\tList(ctx context.Context, opts ListOptions) ([]T, error)\n\tCount(ctx context.Context, opts CountOptions) (int64, error)\n\tExists(ctx context.Context, id uint) (bool, error)\n\n\t// Advanced operations\n\tFindWhere(ctx context.Context, conditions map[string]interface{}, opts ListOptions) ([]T, error)\n\tCountWhere(ctx context.Context, conditions map[string]interface{}) (int64, error)\n\n\t// Transaction support\n\tWithTx(tx *gorm.DB) Repository[T]\n}\n\n// ListOptions provides options for listing entities\ntype ListOptions struct {\n\tLimit      int\n\tOffset     int\n\tOrderBy    string\n\tOrderDir   string // \"asc\" or \"desc\"\n\tPreloads   []string\n\tConditions map[string]interface{}\n}\n\n// CountOptions provides options for counting entities\ntype CountOptions struct {\n\tConditions map[string]interface{}\n}\n\n// BaseRepository provides a basic implementation of Repository interface\ntype BaseRepository[T any] struct {\n\tdb    *gorm.DB\n\tmodel T\n}\n\n// NewBaseRepository creates a new base repository\nfunc NewBaseRepository[T any](db *gorm.DB) *BaseRepository[T] {\n\tvar model T\n\treturn \u0026BaseRepository[T]{\n\t\tdb:    db,\n\t\tmodel: model,\n\t}\n}\n\n// Create creates a new entity\nfunc (r *BaseRepository[T]) Create(ctx context.Context, entity *T) error {\n\treturn r.db.WithContext(ctx).Create(entity).Error\n}\n\n// GetByID retrieves an entity by ID\nfunc (r *BaseRepository[T]) GetByID(ctx context.Context, id uint) (*T, error) {\n\tvar entity T\n\terr := r.db.WithContext(ctx).First(\u0026entity, id).Error\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn \u0026entity, nil\n}\n\n// Update updates an entity\nfunc (r *BaseRepository[T]) Update(ctx context.Context, entity *T) error {\n\treturn r.db.WithContext(ctx).Save(entity).Error\n}\n\n// Delete soft deletes an entity by ID\nfunc (r *BaseRepository[T]) Delete(ctx context.Context, id uint) error {\n\tvar entity T\n\treturn r.db.WithContext(ctx).Delete(\u0026entity, id).Error\n}\n\n// CreateMany creates multiple entities in a batch\nfunc (r *BaseRepository[T]) CreateMany(ctx context.Context, entities []T) error {\n\tif len(entities) == 0 {\n\t\treturn nil\n\t}\n\treturn r.db.WithContext(ctx).CreateInBatches(entities, 100).Error\n}\n\n// UpdateMany updates multiple entities\nfunc (r *BaseRepository[T]) UpdateMany(ctx context.Context, entities []T) error {\n\tif len(entities) == 0 {\n\t\treturn nil\n\t}\n\n\treturn r.db.WithContext(ctx).Transaction(func(tx *gorm.DB) error {\n\t\tfor _, entity := range entities {\n\t\t\tif err := tx.Save(\u0026entity).Error; err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t})\n}\n\n// DeleteMany soft deletes multiple entities by IDs\nfunc (r *BaseRepository[T]) DeleteMany(ctx context.Context, ids []uint) error {\n\tif len(ids) == 0 {\n\t\treturn nil\n\t}\n\tvar entity T\n\treturn r.db.WithContext(ctx).Delete(\u0026entity, ids).Error\n}\n\n// List retrieves entities with options\nfunc (r *BaseRepository[T]) List(ctx context.Context, opts ListOptions) ([]T, error) {\n\tvar entities []T\n\n\tquery := r.db.WithContext(ctx).Model(\u0026r.model)\n\n\t// Apply conditions\n\tfor key, value := range opts.Conditions {\n\t\tquery = query.Where(key, value)\n\t}\n\n\t// Apply preloads\n\tfor _, preload := range opts.Preloads {\n\t\tquery = query.Preload(preload)\n\t}\n\n\t// Apply ordering\n\tif opts.OrderBy != \"\" {\n\t\torderDir := \"asc\"\n\t\tif opts.OrderDir == \"desc\" {\n\t\t\torderDir = \"desc\"\n\t\t}\n\t\tquery = query.Order(opts.OrderBy + \" \" + orderDir)\n\t}\n\n\t// Apply pagination\n\tif opts.Limit \u003e 0 {\n\t\tquery = query.Limit(opts.Limit)\n\t}\n\tif opts.Offset \u003e 0 {\n\t\tquery = query.Offset(opts.Offset)\n\t}\n\n\terr := query.Find(\u0026entities).Error\n\treturn entities, err\n}\n\n// Count counts entities with options\nfunc (r *BaseRepository[T]) Count(ctx context.Context, opts CountOptions) (int64, error) {\n\tvar count int64\n\n\tquery := r.db.WithContext(ctx).Model(\u0026r.model)\n\n\t// Apply conditions\n\tfor key, value := range opts.Conditions {\n\t\tquery = query.Where(key, value)\n\t}\n\n\terr := query.Count(\u0026count).Error\n\treturn count, err\n}\n\n// Exists checks if an entity exists by ID\nfunc (r *BaseRepository[T]) Exists(ctx context.Context, id uint) (bool, error) {\n\tvar count int64\n\terr := r.db.WithContext(ctx).Model(\u0026r.model).Where(\"id = ?\", id).Count(\u0026count).Error\n\treturn count \u003e 0, err\n}\n\n// FindWhere finds entities with custom conditions\nfunc (r *BaseRepository[T]) FindWhere(ctx context.Context, conditions map[string]interface{}, opts ListOptions) ([]T, error) {\n\t// Merge conditions\n\tif opts.Conditions == nil {\n\t\topts.Conditions = conditions\n\t} else {\n\t\tfor key, value := range conditions {\n\t\t\topts.Conditions[key] = value\n\t\t}\n\t}\n\n\treturn r.List(ctx, opts)\n}\n\n// CountWhere counts entities with custom conditions\nfunc (r *BaseRepository[T]) CountWhere(ctx context.Context, conditions map[string]interface{}) (int64, error) {\n\treturn r.Count(ctx, CountOptions{Conditions: conditions})\n}\n\n// WithTx returns a new repository instance with the given transaction\nfunc (r *BaseRepository[T]) WithTx(tx *gorm.DB) Repository[T] {\n\treturn \u0026BaseRepository[T]{\n\t\tdb:    tx,\n\t\tmodel: r.model,\n\t}\n}\n\n// GetTableName returns the table name for the entity\nfunc (r *BaseRepository[T]) GetTableName() string {\n\tstmt := \u0026gorm.Statement{DB: r.db}\n\tstmt.Parse(\u0026r.model)\n\treturn stmt.Schema.Table\n}\n\n// SoftDelete permanently deletes an entity (bypass soft delete)\nfunc (r *BaseRepository[T]) SoftDelete(ctx context.Context, id uint) error {\n\tvar entity T\n\treturn r.db.WithContext(ctx).Unscoped().Delete(\u0026entity, id).Error\n}\n\n// Restore restores a soft-deleted entity\nfunc (r *BaseRepository[T]) Restore(ctx context.Context, id uint) error {\n\tvar entity T\n\treturn r.db.WithContext(ctx).Unscoped().Model(\u0026entity).Where(\"id = ?\", id).Update(\"deleted_at\", nil).Error\n}\n\n// BatchProcessor provides batch processing capabilities\ntype BatchProcessor[T any] struct {\n\trepo      Repository[T]\n\tbatchSize int\n}\n\n// NewBatchProcessor creates a new batch processor\nfunc NewBatchProcessor[T any](repo Repository[T], batchSize int) *BatchProcessor[T] {\n\tif batchSize \u003c= 0 {\n\t\tbatchSize = 100\n\t}\n\treturn \u0026BatchProcessor[T]{\n\t\trepo:      repo,\n\t\tbatchSize: batchSize,\n\t}\n}\n\n// ProcessInBatches processes entities in batches\nfunc (bp *BatchProcessor[T]) ProcessInBatches(ctx context.Context, entities []T, processor func(batch []T) error) error {\n\tfor i := 0; i \u003c len(entities); i += bp.batchSize {\n\t\tend := i + bp.batchSize\n\t\tif end \u003e len(entities) {\n\t\t\tend = len(entities)\n\t\t}\n\n\t\tbatch := entities[i:end]\n\t\tif err := processor(batch); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n}\n\n// QueryBuilder provides a fluent interface for building queries\ntype QueryBuilder[T any] struct {\n\tdb         *gorm.DB\n\tconditions []func(*gorm.DB) *gorm.DB\n}\n\n// NewQueryBuilder creates a new query builder\nfunc NewQueryBuilder[T any](db *gorm.DB) *QueryBuilder[T] {\n\treturn \u0026QueryBuilder[T]{\n\t\tdb:         db,\n\t\tconditions: make([]func(*gorm.DB) *gorm.DB, 0),\n\t}\n}\n\n// Where adds a where condition\nfunc (qb *QueryBuilder[T]) Where(query interface{}, args ...interface{}) *QueryBuilder[T] {\n\tqb.conditions = append(qb.conditions, func(db *gorm.DB) *gorm.DB {\n\t\treturn db.Where(query, args...)\n\t})\n\treturn qb\n}\n\n// Order adds an order clause\nfunc (qb *QueryBuilder[T]) Order(value interface{}) *QueryBuilder[T] {\n\tqb.conditions = append(qb.conditions, func(db *gorm.DB) *gorm.DB {\n\t\treturn db.Order(value)\n\t})\n\treturn qb\n}\n\n// Limit adds a limit clause\nfunc (qb *QueryBuilder[T]) Limit(limit int) *QueryBuilder[T] {\n\tqb.conditions = append(qb.conditions, func(db *gorm.DB) *gorm.DB {\n\t\treturn db.Limit(limit)\n\t})\n\treturn qb\n}\n\n// Offset adds an offset clause\nfunc (qb *QueryBuilder[T]) Offset(offset int) *QueryBuilder[T] {\n\tqb.conditions = append(qb.conditions, func(db *gorm.DB) *gorm.DB {\n\t\treturn db.Offset(offset)\n\t})\n\treturn qb\n}\n\n// Preload adds a preload clause\nfunc (qb *QueryBuilder[T]) Preload(query string, args ...interface{}) *QueryBuilder[T] {\n\tqb.conditions = append(qb.conditions, func(db *gorm.DB) *gorm.DB {\n\t\treturn db.Preload(query, args...)\n\t})\n\treturn qb\n}\n\n// Build builds the final query\nfunc (qb *QueryBuilder[T]) Build() *gorm.DB {\n\tquery := qb.db\n\tfor _, condition := range qb.conditions {\n\t\tquery = condition(query)\n\t}\n\treturn query\n}\n\n// Find executes the query and returns results\nfunc (qb *QueryBuilder[T]) Find(ctx context.Context) ([]T, error) {\n\tvar results []T\n\tvar model T\n\terr := qb.Build().WithContext(ctx).Model(\u0026model).Find(\u0026results).Error\n\treturn results, err\n}\n\n// First executes the query and returns the first result\nfunc (qb *QueryBuilder[T]) First(ctx context.Context) (*T, error) {\n\tvar result T\n\terr := qb.Build().WithContext(ctx).First(\u0026result).Error\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn \u0026result, nil\n}\n\n// Count executes the query and returns the count\nfunc (qb *QueryBuilder[T]) Count(ctx context.Context) (int64, error) {\n\tvar count int64\n\tvar model T\n\terr := qb.Build().WithContext(ctx).Model(\u0026model).Count(\u0026count).Error\n\treturn count, err\n}\n",
      "size": 9633,
      "hash": "94737579562103bc1e2b2ff0b66535062d14920f393d511128f2c04c9c1f66b7",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/user/domain/errors.go",
      "template": true,
      "content": "package domain\n\nimport \"errors\"\n\n// User management errors\nvar (\n\tErrUserNotFound        = errors.New(\"user not found\")\n\tErrInvalidRequest      = errors.New(\"invalid request\")\n\tErrUnauthorized        = errors.New(\"unauthorized\")\n\tErrForbidden           = errors.New(\"forbidden\")\n\tErrEmailAlreadyExists  = errors.New(\"email already exists\")\n\tErrCannotUpdateOwnRole = errors.New(\"cannot update own role\")\n\tErrCannotUpdateOwnStatus = errors.New(\"cannot update own status\")\n\tErrInvalidPreferences  = errors.New(\"invalid preferences\")\n\tErrPreferencesNotFound = errors.New(\"preferences not found\")\n\tErrProfileUpdateFailed = errors.New(\"profile update failed\")\n)\n\n// IsUserError checks if the error is a user management error\nfunc IsUserError(err error) bool {\n\treturn err == ErrUserNotFound ||\n\t\terr == ErrInvalidRequest ||\n\t\terr == ErrUnauthorized ||\n\t\terr == ErrForbidden ||\n\t\terr == ErrEmailAlreadyExists ||\n\t\terr == ErrCannotUpdateOwnRole ||\n\t\terr == ErrCannotUpdateOwnStatus ||\n\t\terr == ErrInvalidPreferences ||\n\t\terr == ErrPreferencesNotFound ||\n\t\terr == ErrProfileUpdateFailed\n}",
      "size": 1079,
      "hash": "7ba02607d9a2ace1fcb3ec8c52a9f01225ad1a5aff8280d591dc19cbca912fe7",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/user/domain/types.go",
      "template": true,
      "content": "package domain\n\nimport (\n\t\"time\"\n\n\tauthdomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n)\n\n// User management DTOs\n\n// UpdateProfileRequest represents a user profile update request\ntype UpdateProfileRequest struct {\n\tFirstName string `json:\"first_name\" binding:\"required,min=1,max=50\"`\n\tLastName  string `json:\"last_name\" binding:\"required,min=1,max=50\"`\n\tAvatar    string `json:\"avatar\" binding:\"omitempty,url\"`\n}\n\n// UpdatePreferencesRequest represents a user preferences update request\ntype UpdatePreferencesRequest struct {\n\tTheme         string                           `json:\"theme\" binding:\"omitempty,oneof=light dark system\"`\n\tLanguage      string                           `json:\"language\" binding:\"omitempty,len=2\"`\n\tTimezone      string                           `json:\"timezone\" binding:\"omitempty\"`\n\tNotifications authdomain.NotificationPrefs     `json:\"notifications\"`\n\tPrivacy       authdomain.PrivacyPrefs          `json:\"privacy\"`\n\tCustom        map[string]interface{}           `json:\"custom\"`\n}\n\n// ChangeEmailRequest represents an email change request\ntype ChangeEmailRequest struct {\n\tNewEmail string `json:\"new_email\" binding:\"required,email\"`\n\tPassword string `json:\"password\" binding:\"required\"`\n}\n\n// UserListRequest represents a request to list users with filtering and pagination\ntype UserListRequest struct {\n\tPage      int                    `form:\"page,default=1\" binding:\"min=1\"`\n\tPageSize  int                    `form:\"page_size,default=20\" binding:\"min=1,max=100\"`\n\tSearch    string                 `form:\"search\"`\n\tRole      authdomain.UserRole    `form:\"role\" binding:\"omitempty,oneof=user admin\"`\n\tStatus    authdomain.UserStatus  `form:\"status\" binding:\"omitempty,oneof=active inactive suspended\"`\n\tSortBy    string                 `form:\"sort_by,default=created_at\" binding:\"omitempty,oneof=created_at updated_at last_login_at email first_name last_name\"`\n\tSortOrder string                 `form:\"sort_order,default=desc\" binding:\"omitempty,oneof=asc desc\"`\n}\n\n// UserListResponse represents the response for user list requests\ntype UserListResponse struct {\n\tUsers      []*UserSummary `json:\"users\"`\n\tPagination Pagination     `json:\"pagination\"`\n}\n\n// UserSummary represents a summary of user information for list views\ntype UserSummary struct {\n\tID            uint                   `json:\"id\"`\n\tEmail         string                 `json:\"email\"`\n\tFirstName     string                 `json:\"first_name\"`\n\tLastName      string                 `json:\"last_name\"`\n\tRole          authdomain.UserRole    `json:\"role\"`\n\tStatus        authdomain.UserStatus  `json:\"status\"`\n\tEmailVerified bool                   `json:\"email_verified\"`\n\tAvatar        string                 `json:\"avatar,omitempty\"`\n\tLastLoginAt   *time.Time             `json:\"last_login_at\"`\n\tCreatedAt     time.Time              `json:\"created_at\"`\n\tUpdatedAt     time.Time              `json:\"updated_at\"`\n}\n\n// UserDetailResponse represents detailed user information\ntype UserDetailResponse struct {\n\t*authdomain.UserResponse\n\tLoginHistory []LoginHistoryEntry `json:\"login_history,omitempty\"`\n\tAuditTrail   []AuditLogEntry     `json:\"audit_trail,omitempty\"`\n}\n\n// LoginHistoryEntry represents a login history entry\ntype LoginHistoryEntry struct {\n\tID        uint      `json:\"id\"`\n\tIPAddress string    `json:\"ip_address\"`\n\tUserAgent string    `json:\"user_agent\"`\n\tSuccess   bool      `json:\"success\"`\n\tCreatedAt time.Time `json:\"created_at\"`\n}\n\n// AuditLogEntry represents an audit log entry\ntype AuditLogEntry struct {\n\tID          uint                   `json:\"id\"`\n\tAction      authdomain.AuditAction `json:\"action\"`\n\tLevel       authdomain.AuditLevel  `json:\"level\"`\n\tResource    string                 `json:\"resource\"`\n\tDescription string                 `json:\"description\"`\n\tIPAddress   string                 `json:\"ip_address\"`\n\tUserAgent   string                 `json:\"user_agent\"`\n\tMetadata    map[string]interface{} `json:\"metadata,omitempty\"`\n\tCreatedAt   time.Time              `json:\"created_at\"`\n}\n\n// Pagination represents pagination information\ntype Pagination struct {\n\tPage       int `json:\"page\"`\n\tPageSize   int `json:\"page_size\"`\n\tTotal      int `json:\"total\"`\n\tTotalPages int `json:\"total_pages\"`\n\tHasNext    bool `json:\"has_next\"`\n\tHasPrev    bool `json:\"has_prev\"`\n}\n\n// Dashboard response types\n\n// DashboardResponse represents the user dashboard data\ntype DashboardResponse struct {\n\tUser         *authdomain.UserResponse `json:\"user\"`\n\tStats        *UserStats               `json:\"stats\"`\n\tRecentLogins []LoginHistoryEntry      `json:\"recent_logins\"`\n\tNotifications []NotificationItem       `json:\"notifications\"`\n}\n\n// UserStats represents user statistics\ntype UserStats struct {\n\tTotalLogins    int       `json:\"total_logins\"`\n\tLastLoginAt    *time.Time `json:\"last_login_at\"`\n\tAccountAge     int        `json:\"account_age_days\"`\n\tProfileComplete bool      `json:\"profile_complete\"`\n}\n\n// NotificationItem represents a notification item\ntype NotificationItem struct {\n\tID        uint               `json:\"id\"`\n\tType      NotificationType   `json:\"type\"`\n\tTitle     string             `json:\"title\"`\n\tMessage   string             `json:\"message\"`\n\tRead      bool               `json:\"read\"`\n\tPriority  NotificationPriority `json:\"priority\"`\n\tCreatedAt time.Time          `json:\"created_at\"`\n}\n\n// NotificationType represents the type of notification\ntype NotificationType string\n\nconst (\n\tNotificationTypeInfo     NotificationType = \"info\"\n\tNotificationTypeWarning  NotificationType = \"warning\"\n\tNotificationTypeError    NotificationType = \"error\"\n\tNotificationTypeSuccess  NotificationType = \"success\"\n)\n\n// NotificationPriority represents the priority of a notification\ntype NotificationPriority string\n\nconst (\n\tNotificationPriorityLow    NotificationPriority = \"low\"\n\tNotificationPriorityMedium NotificationPriority = \"medium\"\n\tNotificationPriorityHigh   NotificationPriority = \"high\"\n)\n\n// Helper functions\n\n// ToUserSummary converts a User to UserSummary\nfunc ToUserSummary(u *authdomain.User) *UserSummary {\n\treturn \u0026UserSummary{\n\t\tID:            u.ID,\n\t\tEmail:         u.Email,\n\t\tFirstName:     u.FirstName,\n\t\tLastName:      u.LastName,\n\t\tRole:          u.Role,\n\t\tStatus:        u.Status,\n\t\tEmailVerified: u.EmailVerified,\n\t\tAvatar:        u.Avatar,\n\t\tLastLoginAt:   u.LastLoginAt,\n\t\tCreatedAt:     u.CreatedAt,\n\t\tUpdatedAt:     u.UpdatedAt,\n\t}\n}\n\n// ToUserDetailResponse converts a User to UserDetailResponse\nfunc ToUserDetailResponse(u *authdomain.User) *UserDetailResponse {\n\treturn \u0026UserDetailResponse{\n\t\tUserResponse: u.ToResponse(),\n\t}\n}",
      "size": 6611,
      "hash": "2e14264f60f1d3572f4782b5c4712fec7c913ee424e79bc8a7ea0c60477dd151",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/user/repository/audit.go",
      "template": true,
      "content": "package repository\n\nimport (\n\t\"strings\"\n\t\"time\"\n\n\t\"gorm.io/gorm\"\n\n\tauthdomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\tadmindomain \"github.com/acheevo/fullstack-template/internal/admin/domain\"\n)\n\n// AuditRepository handles audit log database operations\ntype AuditRepository struct {\n\tdb *gorm.DB\n}\n\n// NewAuditRepository creates a new audit repository\nfunc NewAuditRepository(db *gorm.DB) *AuditRepository {\n\treturn \u0026AuditRepository{\n\t\tdb: db,\n\t}\n}\n\n// Create creates a new audit log entry\nfunc (r *AuditRepository) Create(log *authdomain.AuditLog) error {\n\treturn r.db.Create(log).Error\n}\n\n// CreateAuditEntry creates an audit log entry with minimal parameters\nfunc (r *AuditRepository) CreateAuditEntry(\n\tuserID *uint,\n\ttargetID *uint,\n\taction authdomain.AuditAction,\n\tlevel authdomain.AuditLevel,\n\tresource string,\n\tdescription string,\n\tipAddress string,\n\tuserAgent string,\n\tmetadata map[string]interface{},\n) error {\n\tlog := \u0026authdomain.AuditLog{\n\t\tUserID:      userID,\n\t\tTargetID:    targetID,\n\t\tAction:      action,\n\t\tLevel:       level,\n\t\tResource:    resource,\n\t\tDescription: description,\n\t\tIPAddress:   ipAddress,\n\t\tUserAgent:   userAgent,\n\t\tMetadata:    metadata,\n\t\tCreatedAt:   time.Now(),\n\t}\n\n\treturn r.Create(log)\n}\n\n// List retrieves audit logs with filtering and pagination\nfunc (r *AuditRepository) List(req *admindomain.AdminAuditLogRequest) ([]*authdomain.AuditLog, int, error) {\n\tvar logs []*authdomain.AuditLog\n\tvar total int64\n\n\tquery := r.db.Model(\u0026authdomain.AuditLog{}).Preload(\"User\").Preload(\"Target\")\n\n\t// Apply filters\n\tif req.UserID != nil {\n\t\tquery = query.Where(\"user_id = ?\", *req.UserID)\n\t}\n\n\tif req.TargetID != nil {\n\t\tquery = query.Where(\"target_id = ?\", *req.TargetID)\n\t}\n\n\tif req.Action != \"\" {\n\t\tquery = query.Where(\"action = ?\", req.Action)\n\t}\n\n\tif req.Level != \"\" {\n\t\tquery = query.Where(\"level = ?\", req.Level)\n\t}\n\n\tif req.Resource != \"\" {\n\t\tquery = query.Where(\"resource = ?\", req.Resource)\n\t}\n\n\tif req.IPAddress != \"\" {\n\t\tquery = query.Where(\"ip_address = ?\", req.IPAddress)\n\t}\n\n\tif req.DateFrom != nil {\n\t\tquery = query.Where(\"created_at \u003e= ?\", *req.DateFrom)\n\t}\n\n\tif req.DateTo != nil {\n\t\t// Add time to end of day\n\t\tendOfDay := req.DateTo.Add(23*time.Hour + 59*time.Minute + 59*time.Second)\n\t\tquery = query.Where(\"created_at \u003c= ?\", endOfDay)\n\t}\n\n\t// Count total records\n\tif err := query.Count(\u0026total).Error; err != nil {\n\t\treturn nil, 0, err\n\t}\n\n\t// Apply pagination and sorting\n\toffset := (req.Page - 1) * req.PageSize\n\tif err := query.Order(\"created_at DESC\").Offset(offset).Limit(req.PageSize).Find(\u0026logs).Error; err != nil {\n\t\treturn nil, 0, err\n\t}\n\n\treturn logs, int(total), nil\n}\n\n// GetByID retrieves an audit log by ID\nfunc (r *AuditRepository) GetByID(id uint) (*authdomain.AuditLog, error) {\n\tvar log authdomain.AuditLog\n\terr := r.db.Preload(\"User\").Preload(\"Target\").First(\u0026log, id).Error\n\tif err != nil {\n\t\tif err == gorm.ErrRecordNotFound {\n\t\t\treturn nil, admindomain.ErrAuditLogNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\treturn \u0026log, nil\n}\n\n// GetUserAuditHistory retrieves audit history for a specific user\nfunc (r *AuditRepository) GetUserAuditHistory(userID uint, limit int) ([]*authdomain.AuditLog, error) {\n\tvar logs []*authdomain.AuditLog\n\tquery := r.db.Where(\"user_id = ? OR target_id = ?\", userID, userID).\n\t\tPreload(\"User\").\n\t\tPreload(\"Target\").\n\t\tOrder(\"created_at DESC\")\n\n\tif limit \u003e 0 {\n\t\tquery = query.Limit(limit)\n\t}\n\n\terr := query.Find(\u0026logs).Error\n\treturn logs, err\n}\n\n// GetRecentLogs retrieves recent audit logs\nfunc (r *AuditRepository) GetRecentLogs(limit int) ([]*authdomain.AuditLog, error) {\n\tvar logs []*authdomain.AuditLog\n\terr := r.db.Preload(\"User\").Preload(\"Target\").\n\t\tOrder(\"created_at DESC\").\n\t\tLimit(limit).\n\t\tFind(\u0026logs).Error\n\treturn logs, err\n}\n\n// DeleteOldLogs deletes audit logs older than the specified duration\nfunc (r *AuditRepository) DeleteOldLogs(olderThan time.Duration) (int64, error) {\n\tcutoffDate := time.Now().Add(-olderThan)\n\tresult := r.db.Where(\"created_at \u003c ?\", cutoffDate).Delete(\u0026authdomain.AuditLog{})\n\treturn result.RowsAffected, result.Error\n}\n\n// GetLogsByAction retrieves logs by specific action\nfunc (r *AuditRepository) GetLogsByAction(action authdomain.AuditAction, limit int) ([]*authdomain.AuditLog, error) {\n\tvar logs []*authdomain.AuditLog\n\tquery := r.db.Where(\"action = ?\", action).\n\t\tPreload(\"User\").\n\t\tPreload(\"Target\").\n\t\tOrder(\"created_at DESC\")\n\n\tif limit \u003e 0 {\n\t\tquery = query.Limit(limit)\n\t}\n\n\terr := query.Find(\u0026logs).Error\n\treturn logs, err\n}\n\n// GetLogsByLevel retrieves logs by severity level\nfunc (r *AuditRepository) GetLogsByLevel(level authdomain.AuditLevel, limit int) ([]*authdomain.AuditLog, error) {\n\tvar logs []*authdomain.AuditLog\n\tquery := r.db.Where(\"level = ?\", level).\n\t\tPreload(\"User\").\n\t\tPreload(\"Target\").\n\t\tOrder(\"created_at DESC\")\n\n\tif limit \u003e 0 {\n\t\tquery = query.Limit(limit)\n\t}\n\n\terr := query.Find(\u0026logs).Error\n\treturn logs, err\n}\n\n// SearchLogs searches audit logs by description\nfunc (r *AuditRepository) SearchLogs(searchTerm string, limit int) ([]*authdomain.AuditLog, error) {\n\tvar logs []*authdomain.AuditLog\n\tsearchPattern := \"%\" + strings.ToLower(searchTerm) + \"%\"\n\t\n\tquery := r.db.Where(\"LOWER(description) LIKE ?\", searchPattern).\n\t\tPreload(\"User\").\n\t\tPreload(\"Target\").\n\t\tOrder(\"created_at DESC\")\n\n\tif limit \u003e 0 {\n\t\tquery = query.Limit(limit)\n\t}\n\n\terr := query.Find(\u0026logs).Error\n\treturn logs, err\n}\n\n// GetAuditStatistics retrieves audit log statistics\nfunc (r *AuditRepository) GetAuditStatistics(days int) (*AuditStatistics, error) {\n\tstats := \u0026AuditStatistics{}\n\tstartDate := time.Now().AddDate(0, 0, -days)\n\n\t// Total logs\n\tr.db.Model(\u0026authdomain.AuditLog{}).Where(\"created_at \u003e= ?\", startDate).Count(\u0026stats.TotalLogs)\n\n\t// Logs by level\n\tr.db.Model(\u0026authdomain.AuditLog{}).Where(\"level = ? AND created_at \u003e= ?\", authdomain.AuditLevelInfo, startDate).Count(\u0026stats.InfoLogs)\n\tr.db.Model(\u0026authdomain.AuditLog{}).Where(\"level = ? AND created_at \u003e= ?\", authdomain.AuditLevelWarning, startDate).Count(\u0026stats.WarningLogs)\n\tr.db.Model(\u0026authdomain.AuditLog{}).Where(\"level = ? AND created_at \u003e= ?\", authdomain.AuditLevelError, startDate).Count(\u0026stats.ErrorLogs)\n\n\t// Most active users (top 10)\n\tvar activeUsers []ActiveUserStat\n\tr.db.Model(\u0026authdomain.AuditLog{}).\n\t\tSelect(\"user_id, COUNT(*) as log_count\").\n\t\tWhere(\"user_id IS NOT NULL AND created_at \u003e= ?\", startDate).\n\t\tGroup(\"user_id\").\n\t\tOrder(\"log_count DESC\").\n\t\tLimit(10).\n\t\tFind(\u0026activeUsers)\n\tstats.MostActiveUsers = activeUsers\n\n\treturn stats, nil\n}\n\n// AuditStatistics represents audit log statistics\ntype AuditStatistics struct {\n\tTotalLogs       int64            `json:\"total_logs\"`\n\tInfoLogs        int64            `json:\"info_logs\"`\n\tWarningLogs     int64            `json:\"warning_logs\"`\n\tErrorLogs       int64            `json:\"error_logs\"`\n\tMostActiveUsers []ActiveUserStat `json:\"most_active_users\"`\n}\n\n// ActiveUserStat represents active user statistics\ntype ActiveUserStat struct {\n\tUserID   uint  `json:\"user_id\"`\n\tLogCount int64 `json:\"log_count\"`\n}",
      "size": 7005,
      "hash": "b5881d2fbdab6477f5779b2bca13c41de44bfa3a47e343242cbf196c2332b68a",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/user/repository/user.go",
      "template": true,
      "content": "package repository\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n\n\t\"gorm.io/gorm\"\n\n\tauthdomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/user/domain\"\n)\n\n// UserRepository handles user-related database operations\ntype UserRepository struct {\n\tdb *gorm.DB\n}\n\n// NewUserRepository creates a new user repository\nfunc NewUserRepository(db *gorm.DB) *UserRepository {\n\treturn \u0026UserRepository{\n\t\tdb: db,\n\t}\n}\n\n// GetByID retrieves a user by ID\nfunc (r *UserRepository) GetByID(id uint) (*authdomain.User, error) {\n\tvar user authdomain.User\n\terr := r.db.First(\u0026user, id).Error\n\tif err != nil {\n\t\tif err == gorm.ErrRecordNotFound {\n\t\t\treturn nil, domain.ErrUserNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\treturn \u0026user, nil\n}\n\n// Update updates a user's information\nfunc (r *UserRepository) Update(user *authdomain.User) error {\n\treturn r.db.Save(user).Error\n}\n\n// UpdateProfile updates a user's profile information\nfunc (r *UserRepository) UpdateProfile(userID uint, req *domain.UpdateProfileRequest) error {\n\tupdates := map[string]interface{}{\n\t\t\"first_name\": strings.TrimSpace(req.FirstName),\n\t\t\"last_name\":  strings.TrimSpace(req.LastName),\n\t\t\"updated_at\": time.Now(),\n\t}\n\n\tif req.Avatar != \"\" {\n\t\tupdates[\"avatar\"] = req.Avatar\n\t}\n\n\treturn r.db.Model(\u0026authdomain.User{}).Where(\"id = ?\", userID).Updates(updates).Error\n}\n\n// UpdatePreferences updates a user's preferences\nfunc (r *UserRepository) UpdatePreferences(userID uint, preferences authdomain.UserPreferences) error {\n\treturn r.db.Model(\u0026authdomain.User{}).\n\t\tWhere(\"id = ?\", userID).\n\t\tUpdate(\"preferences\", preferences).Error\n}\n\n// GetPreferences retrieves a user's preferences\nfunc (r *UserRepository) GetPreferences(userID uint) (*authdomain.UserPreferences, error) {\n\tvar user authdomain.User\n\terr := r.db.Select(\"preferences\").First(\u0026user, userID).Error\n\tif err != nil {\n\t\tif err == gorm.ErrRecordNotFound {\n\t\t\treturn nil, domain.ErrUserNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\treturn \u0026user.Preferences, nil\n}\n\n// List retrieves users with filtering and pagination\nfunc (r *UserRepository) List(req *domain.UserListRequest) ([]*authdomain.User, int, error) {\n\tvar users []*authdomain.User\n\tvar total int64\n\n\tquery := r.db.Model(\u0026authdomain.User{})\n\n\t// Apply filters\n\tif req.Search != \"\" {\n\t\tsearchTerm := \"%\" + strings.ToLower(req.Search) + \"%\"\n\t\tquery = query.Where(\n\t\t\t\"LOWER(email) LIKE ? OR LOWER(first_name) LIKE ? OR LOWER(last_name) LIKE ?\",\n\t\t\tsearchTerm, searchTerm, searchTerm,\n\t\t)\n\t}\n\n\tif req.Role != \"\" {\n\t\tquery = query.Where(\"role = ?\", req.Role)\n\t}\n\n\tif req.Status != \"\" {\n\t\tquery = query.Where(\"status = ?\", req.Status)\n\t}\n\n\t// Count total records\n\tif err := query.Count(\u0026total).Error; err != nil {\n\t\treturn nil, 0, err\n\t}\n\n\t// Apply sorting\n\torderClause := fmt.Sprintf(\"%s %s\", req.SortBy, strings.ToUpper(req.SortOrder))\n\tquery = query.Order(orderClause)\n\n\t// Apply pagination\n\toffset := (req.Page - 1) * req.PageSize\n\tif err := query.Offset(offset).Limit(req.PageSize).Find(\u0026users).Error; err != nil {\n\t\treturn nil, 0, err\n\t}\n\n\treturn users, int(total), nil\n}\n\n// GetUserStats retrieves user statistics for dashboard\nfunc (r *UserRepository) GetUserStats(userID uint) (*domain.UserStats, error) {\n\tvar user authdomain.User\n\terr := r.db.Select(\"created_at, last_login_at\").First(\u0026user, userID).Error\n\tif err != nil {\n\t\tif err == gorm.ErrRecordNotFound {\n\t\t\treturn nil, domain.ErrUserNotFound\n\t\t}\n\t\treturn nil, err\n\t}\n\n\t// Calculate account age\n\taccountAge := int(time.Since(user.CreatedAt).Hours() / 24)\n\n\t// Get total login count (would need a login history table for accurate count)\n\t// For now, we'll use a placeholder\n\ttotalLogins := 1\n\tif user.LastLoginAt != nil {\n\t\ttotalLogins = 5 // Placeholder\n\t}\n\n\t// Check if profile is complete\n\tprofileComplete := user.FirstName != \"\" \u0026\u0026 user.LastName != \"\" \u0026\u0026 user.EmailVerified\n\n\treturn \u0026domain.UserStats{\n\t\tTotalLogins:     totalLogins,\n\t\tLastLoginAt:     user.LastLoginAt,\n\t\tAccountAge:      accountAge,\n\t\tProfileComplete: profileComplete,\n\t}, nil\n}\n\n// UpdateEmail updates a user's email address\nfunc (r *UserRepository) UpdateEmail(userID uint, newEmail string) error {\n\tupdates := map[string]interface{}{\n\t\t\"email\":          strings.ToLower(strings.TrimSpace(newEmail)),\n\t\t\"email_verified\": false, // Reset email verification when email changes\n\t\t\"updated_at\":     time.Now(),\n\t}\n\n\treturn r.db.Model(\u0026authdomain.User{}).Where(\"id = ?\", userID).Updates(updates).Error\n}\n\n// CheckEmailExists checks if an email already exists (excluding a specific user ID)\nfunc (r *UserRepository) CheckEmailExists(email string, excludeUserID uint) (bool, error) {\n\tvar count int64\n\tquery := r.db.Model(\u0026authdomain.User{}).Where(\"email = ?\", strings.ToLower(strings.TrimSpace(email)))\n\t\n\tif excludeUserID \u003e 0 {\n\t\tquery = query.Where(\"id != ?\", excludeUserID)\n\t}\n\t\n\terr := query.Count(\u0026count).Error\n\treturn count \u003e 0, err\n}\n\n// GetUsersByIDs retrieves multiple users by their IDs\nfunc (r *UserRepository) GetUsersByIDs(ids []uint) ([]*authdomain.User, error) {\n\tvar users []*authdomain.User\n\terr := r.db.Where(\"id IN ?\", ids).Find(\u0026users).Error\n\treturn users, err\n}\n\n// UpdateUserRole updates a user's role\nfunc (r *UserRepository) UpdateUserRole(userID uint, role authdomain.UserRole) error {\n\treturn r.db.Model(\u0026authdomain.User{}).\n\t\tWhere(\"id = ?\", userID).\n\t\tUpdate(\"role\", role).Error\n}\n\n// UpdateUserStatus updates a user's status\nfunc (r *UserRepository) UpdateUserStatus(userID uint, status authdomain.UserStatus) error {\n\treturn r.db.Model(\u0026authdomain.User{}).\n\t\tWhere(\"id = ?\", userID).\n\t\tUpdate(\"status\", status).Error\n}\n\n// BulkUpdateStatus updates status for multiple users\nfunc (r *UserRepository) BulkUpdateStatus(userIDs []uint, status authdomain.UserStatus) error {\n\treturn r.db.Model(\u0026authdomain.User{}).\n\t\tWhere(\"id IN ?\", userIDs).\n\t\tUpdate(\"status\", status).Error\n}\n\n// BulkUpdateRole updates role for multiple users\nfunc (r *UserRepository) BulkUpdateRole(userIDs []uint, role authdomain.UserRole) error {\n\treturn r.db.Model(\u0026authdomain.User{}).\n\t\tWhere(\"id IN ?\", userIDs).\n\t\tUpdate(\"role\", role).Error\n}\n\n// SoftDelete soft deletes users\nfunc (r *UserRepository) SoftDelete(userIDs []uint) error {\n\treturn r.db.Delete(\u0026authdomain.User{}, userIDs).Error\n}\n\n// HardDelete permanently deletes users\nfunc (r *UserRepository) HardDelete(userIDs []uint) error {\n\treturn r.db.Unscoped().Delete(\u0026authdomain.User{}, userIDs).Error\n}\n\n// GetAdminStats retrieves admin dashboard statistics\nfunc (r *UserRepository) GetAdminStats() (*AdminStats, error) {\n\tstats := \u0026AdminStats{}\n\n\t// Total users\n\tr.db.Model(\u0026authdomain.User{}).Count(\u0026stats.TotalUsers)\n\n\t// Users by status\n\tr.db.Model(\u0026authdomain.User{}).Where(\"status = ?\", authdomain.StatusActive).Count(\u0026stats.ActiveUsers)\n\tr.db.Model(\u0026authdomain.User{}).Where(\"status = ?\", authdomain.StatusInactive).Count(\u0026stats.InactiveUsers)\n\tr.db.Model(\u0026authdomain.User{}).Where(\"status = ?\", authdomain.StatusSuspended).Count(\u0026stats.SuspendedUsers)\n\n\t// Admin users\n\tr.db.Model(\u0026authdomain.User{}).Where(\"role = ?\", authdomain.RoleAdmin).Count(\u0026stats.AdminUsers)\n\n\t// New users today\n\ttoday := time.Now().Truncate(24 * time.Hour)\n\tr.db.Model(\u0026authdomain.User{}).Where(\"created_at \u003e= ?\", today).Count(\u0026stats.NewUsersToday)\n\n\t// New users this week\n\tweekStart := time.Now().AddDate(0, 0, -7).Truncate(24 * time.Hour)\n\tr.db.Model(\u0026authdomain.User{}).Where(\"created_at \u003e= ?\", weekStart).Count(\u0026stats.NewUsersThisWeek)\n\n\treturn stats, nil\n}\n\n// GetUserGrowthData retrieves user growth data for the last 30 days\nfunc (r *UserRepository) GetUserGrowthData(days int) ([]UserGrowthDataPoint, error) {\n\tvar results []UserGrowthDataPoint\n\n\t// Query to get user registration counts per day\n\tquery := `\n\t\tSELECT \n\t\t\tDATE(created_at) as date,\n\t\t\tCOUNT(*) as count\n\t\tFROM users \n\t\tWHERE created_at \u003e= ? AND deleted_at IS NULL\n\t\tGROUP BY DATE(created_at)\n\t\tORDER BY date DESC\n\t\tLIMIT ?`\n\n\tstartDate := time.Now().AddDate(0, 0, -days)\n\terr := r.db.Raw(query, startDate, days).Scan(\u0026results).Error\n\n\treturn results, err\n}\n\n// AdminStats represents statistics for admin dashboard\ntype AdminStats struct {\n\tTotalUsers       int64 `json:\"total_users\"`\n\tActiveUsers      int64 `json:\"active_users\"`\n\tInactiveUsers    int64 `json:\"inactive_users\"`\n\tSuspendedUsers   int64 `json:\"suspended_users\"`\n\tAdminUsers       int64 `json:\"admin_users\"`\n\tNewUsersToday    int64 `json:\"new_users_today\"`\n\tNewUsersThisWeek int64 `json:\"new_users_this_week\"`\n}\n\n// UserGrowthDataPoint represents a data point for user growth charts\ntype UserGrowthDataPoint struct {\n\tDate  string `json:\"date\"`\n\tCount int    `json:\"count\"`\n}",
      "size": 8596,
      "hash": "a023aca9bf58850ccb07142ef73b8d385bafbf334b8c48d7ec2e0d7a5addc6f6",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/user/service/user.go",
      "template": true,
      "content": "package service\n\nimport (\n\t\"fmt\"\n\t\"log/slog\"\n\t\"strings\"\n\t\"time\"\n\n\t\"golang.org/x/crypto/bcrypt\"\n\n\tauthdomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\tauthrepo \"github.com/acheevo/fullstack-template/internal/auth/repository\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/user/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/user/repository\"\n)\n\n// UserService handles user management operations\ntype UserService struct {\n\tconfig       *config.Config\n\tlogger       *slog.Logger\n\tuserRepo     *repository.UserRepository\n\tauditRepo    *repository.AuditRepository\n\tauthUserRepo *authrepo.UserRepository\n}\n\n// NewUserService creates a new user service\nfunc NewUserService(\n\tconfig *config.Config,\n\tlogger *slog.Logger,\n\tuserRepo *repository.UserRepository,\n\tauditRepo *repository.AuditRepository,\n\tauthUserRepo *authrepo.UserRepository,\n) *UserService {\n\treturn \u0026UserService{\n\t\tconfig:       config,\n\t\tlogger:       logger,\n\t\tuserRepo:     userRepo,\n\t\tauditRepo:    auditRepo,\n\t\tauthUserRepo: authUserRepo,\n\t}\n}\n\n// GetProfile retrieves a user's profile\nfunc (s *UserService) GetProfile(userID uint) (*authdomain.UserResponse, error) {\n\tuser, err := s.userRepo.GetByID(userID)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to get user profile\", \"user_id\", userID, \"error\", err)\n\t\treturn nil, err\n\t}\n\n\treturn user.ToResponse(), nil\n}\n\n// UpdateProfile updates a user's profile information\nfunc (s *UserService) UpdateProfile(userID uint, req *domain.UpdateProfileRequest, ipAddress, userAgent string) (*authdomain.UserResponse, error) {\n\t// Get current user to compare changes\n\tcurrentUser, err := s.userRepo.GetByID(userID)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to get user for profile update\", \"user_id\", userID, \"error\", err)\n\t\treturn nil, err\n\t}\n\n\t// Update profile\n\terr = s.userRepo.UpdateProfile(userID, req)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to update user profile\", \"user_id\", userID, \"error\", err)\n\t\treturn nil, domain.ErrProfileUpdateFailed\n\t}\n\n\t// Create audit log\n\tchanges := s.buildProfileChanges(currentUser, req)\n\ts.auditRepo.CreateAuditEntry(\n\t\t\u0026userID,\n\t\t\u0026userID,\n\t\tauthdomain.AuditActionUserUpdated,\n\t\tauthdomain.AuditLevelInfo,\n\t\t\"user\",\n\t\tfmt.Sprintf(\"Profile updated: %s\", changes),\n\t\tipAddress,\n\t\tuserAgent,\n\t\tmap[string]interface{}{\n\t\t\t\"changes\": changes,\n\t\t},\n\t)\n\n\t// Return updated profile\n\treturn s.GetProfile(userID)\n}\n\n// UpdatePreferences updates a user's preferences\nfunc (s *UserService) UpdatePreferences(userID uint, req *domain.UpdatePreferencesRequest, ipAddress, userAgent string) (*authdomain.UserPreferences, error) {\n\t// Get current preferences for audit\n\tcurrentPrefs, err := s.userRepo.GetPreferences(userID)\n\tif err != nil \u0026\u0026 err != domain.ErrUserNotFound {\n\t\ts.logger.Error(\"failed to get current preferences\", \"user_id\", userID, \"error\", err)\n\t\treturn nil, err\n\t}\n\n\t// Build new preferences\n\tnewPrefs := authdomain.UserPreferences{\n\t\tTheme:         req.Theme,\n\t\tLanguage:      req.Language,\n\t\tTimezone:      req.Timezone,\n\t\tNotifications: req.Notifications,\n\t\tPrivacy:       req.Privacy,\n\t\tCustom:        req.Custom,\n\t}\n\n\t// Validate timezone if provided\n\tif newPrefs.Timezone != \"\" {\n\t\tif _, err := time.LoadLocation(newPrefs.Timezone); err != nil {\n\t\t\treturn nil, domain.ErrInvalidPreferences\n\t\t}\n\t}\n\n\t// Update preferences\n\terr = s.userRepo.UpdatePreferences(userID, newPrefs)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to update user preferences\", \"user_id\", userID, \"error\", err)\n\t\treturn nil, domain.ErrInvalidPreferences\n\t}\n\n\t// Create audit log\n\tchanges := s.buildPreferencesChanges(currentPrefs, \u0026newPrefs)\n\ts.auditRepo.CreateAuditEntry(\n\t\t\u0026userID,\n\t\t\u0026userID,\n\t\tauthdomain.AuditActionPreferencesUpdated,\n\t\tauthdomain.AuditLevelInfo,\n\t\t\"user\",\n\t\tfmt.Sprintf(\"Preferences updated: %s\", changes),\n\t\tipAddress,\n\t\tuserAgent,\n\t\tmap[string]interface{}{\n\t\t\t\"changes\": changes,\n\t\t},\n\t)\n\n\treturn \u0026newPrefs, nil\n}\n\n// GetPreferences retrieves a user's preferences\nfunc (s *UserService) GetPreferences(userID uint) (*authdomain.UserPreferences, error) {\n\treturn s.userRepo.GetPreferences(userID)\n}\n\n// ChangeEmail initiates an email change process\nfunc (s *UserService) ChangeEmail(userID uint, req *domain.ChangeEmailRequest, ipAddress, userAgent string) error {\n\t// Get current user\n\tuser, err := s.userRepo.GetByID(userID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Verify current password\n\tif err := bcrypt.CompareHashAndPassword([]byte(user.PasswordHash), []byte(req.Password)); err != nil {\n\t\treturn authdomain.ErrInvalidCredentials\n\t}\n\n\t// Check if new email already exists\n\texists, err := s.userRepo.CheckEmailExists(req.NewEmail, userID)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to check email exists\", \"email\", req.NewEmail, \"error\", err)\n\t\treturn err\n\t}\n\tif exists {\n\t\treturn domain.ErrEmailAlreadyExists\n\t}\n\n\t// Update email\n\toldEmail := user.Email\n\terr = s.userRepo.UpdateEmail(userID, req.NewEmail)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to update user email\", \"user_id\", userID, \"error\", err)\n\t\treturn err\n\t}\n\n\t// Create audit log\n\ts.auditRepo.CreateAuditEntry(\n\t\t\u0026userID,\n\t\t\u0026userID,\n\t\tauthdomain.AuditActionUserUpdated,\n\t\tauthdomain.AuditLevelInfo,\n\t\t\"user\",\n\t\tfmt.Sprintf(\"Email changed from %s to %s\", oldEmail, req.NewEmail),\n\t\tipAddress,\n\t\tuserAgent,\n\t\tmap[string]interface{}{\n\t\t\t\"old_email\": oldEmail,\n\t\t\t\"new_email\": req.NewEmail,\n\t\t},\n\t)\n\n\treturn nil\n}\n\n// GetDashboard retrieves dashboard data for a user\nfunc (s *UserService) GetDashboard(userID uint) (*domain.DashboardResponse, error) {\n\t// Get user profile\n\tuser, err := s.userRepo.GetByID(userID)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\t// Get user stats\n\tstats, err := s.userRepo.GetUserStats(userID)\n\tif err != nil {\n\t\ts.logger.Error(\"failed to get user stats\", \"user_id\", userID, \"error\", err)\n\t\t// Continue with empty stats rather than failing\n\t\tstats = \u0026domain.UserStats{}\n\t}\n\n\t// Get recent login history (simplified for now)\n\trecentLogins := []domain.LoginHistoryEntry{}\n\tif user.LastLoginAt != nil {\n\t\trecentLogins = append(recentLogins, domain.LoginHistoryEntry{\n\t\t\tID:        1,\n\t\t\tIPAddress: \"Unknown\",\n\t\t\tUserAgent: \"Unknown\",\n\t\t\tSuccess:   true,\n\t\t\tCreatedAt: *user.LastLoginAt,\n\t\t})\n\t}\n\n\t// Get notifications (placeholder)\n\tnotifications := []domain.NotificationItem{\n\t\t{\n\t\t\tID:        1,\n\t\t\tType:      domain.NotificationTypeInfo,\n\t\t\tTitle:     \"Welcome!\",\n\t\t\tMessage:   \"Welcome to your dashboard. Complete your profile to get started.\",\n\t\t\tRead:      false,\n\t\t\tPriority:  domain.NotificationPriorityMedium,\n\t\t\tCreatedAt: time.Now(),\n\t\t},\n\t}\n\n\treturn \u0026domain.DashboardResponse{\n\t\tUser:          user.ToResponse(),\n\t\tStats:         stats,\n\t\tRecentLogins:  recentLogins,\n\t\tNotifications: notifications,\n\t}, nil\n}\n\n// buildProfileChanges builds a human-readable string of profile changes\nfunc (s *UserService) buildProfileChanges(current *authdomain.User, req *domain.UpdateProfileRequest) string {\n\tvar changes []string\n\n\tif current.FirstName != strings.TrimSpace(req.FirstName) {\n\t\tchanges = append(changes, fmt.Sprintf(\"first name: '%s' -\u003e '%s'\", current.FirstName, req.FirstName))\n\t}\n\n\tif current.LastName != strings.TrimSpace(req.LastName) {\n\t\tchanges = append(changes, fmt.Sprintf(\"last name: '%s' -\u003e '%s'\", current.LastName, req.LastName))\n\t}\n\n\tif req.Avatar != \"\" \u0026\u0026 current.Avatar != req.Avatar {\n\t\tchanges = append(changes, \"avatar updated\")\n\t}\n\n\tif len(changes) == 0 {\n\t\treturn \"no changes\"\n\t}\n\n\treturn strings.Join(changes, \", \")\n}\n\n// buildPreferencesChanges builds a human-readable string of preferences changes\nfunc (s *UserService) buildPreferencesChanges(current, new *authdomain.UserPreferences) string {\n\tvar changes []string\n\n\tif current == nil {\n\t\treturn \"preferences initialized\"\n\t}\n\n\tif current.Theme != new.Theme {\n\t\tchanges = append(changes, fmt.Sprintf(\"theme: '%s' -\u003e '%s'\", current.Theme, new.Theme))\n\t}\n\n\tif current.Language != new.Language {\n\t\tchanges = append(changes, fmt.Sprintf(\"language: '%s' -\u003e '%s'\", current.Language, new.Language))\n\t}\n\n\tif current.Timezone != new.Timezone {\n\t\tchanges = append(changes, fmt.Sprintf(\"timezone: '%s' -\u003e '%s'\", current.Timezone, new.Timezone))\n\t}\n\n\t// Check notification preferences\n\tif current.Notifications.Email != new.Notifications.Email ||\n\t\tcurrent.Notifications.SMS != new.Notifications.SMS ||\n\t\tcurrent.Notifications.Push != new.Notifications.Push {\n\t\tchanges = append(changes, \"notification preferences updated\")\n\t}\n\n\t// Check privacy preferences\n\tif current.Privacy.ProfileVisible != new.Privacy.ProfileVisible ||\n\t\tcurrent.Privacy.ShowEmail != new.Privacy.ShowEmail {\n\t\tchanges = append(changes, \"privacy preferences updated\")\n\t}\n\n\tif len(changes) == 0 {\n\t\treturn \"no changes\"\n\t}\n\n\treturn strings.Join(changes, \", \")\n}",
      "size": 8725,
      "hash": "d22d893d50cb630179edad52d79daa7b7fb77052dacf19f69e2e7561a3fb7804",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "internal/user/transport/http.go",
      "template": true,
      "content": "package transport\n\nimport (\n\t\"net/http\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"log/slog\"\n\n\tauthdomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/user/domain\"\n\t\"github.com/acheevo/fullstack-template/internal/user/service\"\n)\n\n// UserHandler handles HTTP requests for user management\ntype UserHandler struct {\n\tconfig      *config.Config\n\tlogger      *slog.Logger\n\tuserService *service.UserService\n}\n\n// NewUserHandler creates a new user handler\nfunc NewUserHandler(config *config.Config, logger *slog.Logger, userService *service.UserService) *UserHandler {\n\treturn \u0026UserHandler{\n\t\tconfig:      config,\n\t\tlogger:      logger,\n\t\tuserService: userService,\n\t}\n}\n\n// GetProfile handles GET /api/user/profile\nfunc (h *UserHandler) GetProfile(c *gin.Context) {\n\tuserID := h.getUserID(c)\n\tif userID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tprofile, err := h.userService.GetProfile(userID)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, profile)\n}\n\n// UpdateProfile handles PUT /api/user/profile\nfunc (h *UserHandler) UpdateProfile(c *gin.Context) {\n\tuserID := h.getUserID(c)\n\tif userID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tvar req domain.UpdateProfileRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tipAddress := c.ClientIP()\n\tuserAgent := c.GetHeader(\"User-Agent\")\n\n\tprofile, err := h.userService.UpdateProfile(userID, \u0026req, ipAddress, userAgent)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, profile)\n}\n\n// GetPreferences handles GET /api/user/preferences\nfunc (h *UserHandler) GetPreferences(c *gin.Context) {\n\tuserID := h.getUserID(c)\n\tif userID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tpreferences, err := h.userService.GetPreferences(userID)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, preferences)\n}\n\n// UpdatePreferences handles PUT /api/user/preferences\nfunc (h *UserHandler) UpdatePreferences(c *gin.Context) {\n\tuserID := h.getUserID(c)\n\tif userID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tvar req domain.UpdatePreferencesRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tipAddress := c.ClientIP()\n\tuserAgent := c.GetHeader(\"User-Agent\")\n\n\tpreferences, err := h.userService.UpdatePreferences(userID, \u0026req, ipAddress, userAgent)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, preferences)\n}\n\n// ChangeEmail handles POST /api/user/change-email\nfunc (h *UserHandler) ChangeEmail(c *gin.Context) {\n\tuserID := h.getUserID(c)\n\tif userID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tvar req domain.ChangeEmailRequest\n\tif err := c.ShouldBindJSON(\u0026req); err != nil {\n\t\th.handleValidationError(c, err)\n\t\treturn\n\t}\n\n\tipAddress := c.ClientIP()\n\tuserAgent := c.GetHeader(\"User-Agent\")\n\n\terr := h.userService.ChangeEmail(userID, \u0026req, ipAddress, userAgent)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, authdomain.MessageResponse{\n\t\tMessage: \"Email change requested. Please verify your new email address.\",\n\t})\n}\n\n// GetDashboard handles GET /api/user/dashboard\nfunc (h *UserHandler) GetDashboard(c *gin.Context) {\n\tuserID := h.getUserID(c)\n\tif userID == 0 {\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\t\treturn\n\t}\n\n\tdashboard, err := h.userService.GetDashboard(userID)\n\tif err != nil {\n\t\th.handleError(c, err)\n\t\treturn\n\t}\n\n\tc.JSON(http.StatusOK, dashboard)\n}\n\n// RegisterRoutes registers all user management routes\nfunc (h *UserHandler) RegisterRoutes(router *gin.RouterGroup) {\n\tuser := router.Group(\"/user\")\n\t{\n\t\tuser.GET(\"/profile\", h.GetProfile)\n\t\tuser.PUT(\"/profile\", h.UpdateProfile)\n\t\tuser.GET(\"/preferences\", h.GetPreferences)\n\t\tuser.PUT(\"/preferences\", h.UpdatePreferences)\n\t\tuser.POST(\"/change-email\", h.ChangeEmail)\n\t\tuser.GET(\"/dashboard\", h.GetDashboard)\n\t}\n}\n\n// Helper methods\n\n// getUserID extracts user ID from Gin context\nfunc (h *UserHandler) getUserID(c *gin.Context) uint {\n\tif userID, exists := c.Get(\"user_id\"); exists {\n\t\tif id, ok := userID.(uint); ok {\n\t\t\treturn id\n\t\t}\n\t}\n\treturn 0\n}\n\n// handleError handles service errors and returns appropriate HTTP responses\nfunc (h *UserHandler) handleError(c *gin.Context, err error) {\n\tswitch err {\n\tcase domain.ErrUserNotFound:\n\t\tc.JSON(http.StatusNotFound, authdomain.ErrorResponse{Error: \"user not found\"})\n\tcase domain.ErrUnauthorized:\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"unauthorized\"})\n\tcase domain.ErrForbidden:\n\t\tc.JSON(http.StatusForbidden, authdomain.ErrorResponse{Error: \"forbidden\"})\n\tcase domain.ErrEmailAlreadyExists:\n\t\tc.JSON(http.StatusConflict, authdomain.ErrorResponse{Error: \"email already exists\"})\n\tcase domain.ErrInvalidPreferences:\n\t\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{Error: \"invalid preferences\"})\n\tcase domain.ErrProfileUpdateFailed:\n\t\tc.JSON(http.StatusInternalServerError, authdomain.ErrorResponse{Error: \"profile update failed\"})\n\tcase authdomain.ErrInvalidCredentials:\n\t\tc.JSON(http.StatusUnauthorized, authdomain.ErrorResponse{Error: \"invalid credentials\"})\n\tdefault:\n\t\th.logger.Error(\"unhandled user service error\", \"error\", err)\n\t\tc.JSON(http.StatusInternalServerError, authdomain.ErrorResponse{Error: \"internal server error\"})\n\t}\n}\n\n// handleValidationError handles validation errors from request binding\nfunc (h *UserHandler) handleValidationError(c *gin.Context, err error) {\n\th.logger.Error(\"validation error\", \"error\", err)\n\tc.JSON(http.StatusBadRequest, authdomain.ErrorResponse{\n\t\tError:   \"validation failed\",\n\t\tDetails: extractValidationErrors(err),\n\t})\n}\n\n// extractValidationErrors extracts field-specific validation errors\nfunc extractValidationErrors(err error) map[string]string {\n\t// This is a simplified version - you might want to use a more sophisticated\n\t// validation error extraction based on your validation library\n\treturn map[string]string{\n\t\t\"general\": err.Error(),\n\t}\n}",
      "size": 6374,
      "hash": "985382cc68e8e249c95ced6fb65ebb4fed4d29b1f149c2cd516e718fe1f9a540",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "tests/integration/auth_test.go",
      "template": true,
      "content": "//go:build integration\n\npackage integration\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"database/sql\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log/slog\"\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"os\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/testcontainers/testcontainers-go\"\n\t\"github.com/testcontainers/testcontainers-go/modules/postgres\"\n\t\"github.com/testcontainers/testcontainers-go/wait\"\n\t\"golang.org/x/crypto/bcrypt\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/database\"\n\tauthDomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\tauthRepo \"github.com/acheevo/fullstack-template/internal/auth/repository\"\n\tauthService \"github.com/acheevo/fullstack-template/internal/auth/service\"\n\tauthTransport \"github.com/acheevo/fullstack-template/internal/auth/transport\"\n\t\"github.com/acheevo/fullstack-template/internal/middleware\"\n)\n\nfunc TestAuthEndpoints_E2E(t *testing.T) {\n\tctx := context.Background()\n\n\t// Setup test database container\n\ttestDB, cleanup := setupTestDatabase(t, ctx)\n\tdefer cleanup()\n\n\t// Create test handler with test database\n\thandler := createTestAuthHandler(t, testDB)\n\n\tt.Run(\"Login_Success\", func(t *testing.T) {\n\t\t// Test successful login with admin user\n\t\tloginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"admin@fullstack.dev\",\n\t\t\tPassword: \"password\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(loginReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusOK {\n\t\t\tt.Errorf(\"expected status %d, got %d. Body: %s\", http.StatusOK, w.Code, w.Body.String())\n\t\t\treturn\n\t\t}\n\n\t\tvar response authDomain.AuthResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026response); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal response: %v\", err)\n\t\t}\n\n\t\tif response.AccessToken == \"\" {\n\t\t\tt.Error(\"Expected access token in response\")\n\t\t}\n\n\t\tif response.User.Email != \"admin@fullstack.dev\" {\n\t\t\tt.Errorf(\"Expected user email admin@fullstack.dev, got %s\", response.User.Email)\n\t\t}\n\n\t\tif response.User.Role != authDomain.RoleAdmin {\n\t\t\tt.Errorf(\"Expected user role %s, got %s\", authDomain.RoleAdmin, response.User.Role)\n\t\t}\n\n\t\t// Verify refresh token is present\n\t\tif response.RefreshToken == \"\" {\n\t\t\tt.Error(\"Expected refresh token in response\")\n\t\t}\n\t})\n\n\tt.Run(\"Login_InvalidCredentials\", func(t *testing.T) {\n\t\t// Test login with invalid credentials\n\t\tloginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"admin@fullstack.dev\",\n\t\t\tPassword: \"wrongpassword\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(loginReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusUnauthorized {\n\t\t\tt.Errorf(\"expected status %d, got %d\", http.StatusUnauthorized, w.Code)\n\t\t}\n\n\t\tvar response authDomain.ErrorResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026response); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal response: %v\", err)\n\t\t}\n\n\t\tif response.Error == \"\" {\n\t\t\tt.Error(\"Expected error message in response\")\n\t\t}\n\t})\n\n\tt.Run(\"Login_NonExistentUser\", func(t *testing.T) {\n\t\t// Test login with non-existent user\n\t\tloginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"nonexistent@fullstack.dev\",\n\t\t\tPassword: \"password\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(loginReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusUnauthorized {\n\t\t\tt.Errorf(\"expected status %d, got %d\", http.StatusUnauthorized, w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"Login_InvalidRequest\", func(t *testing.T) {\n\t\t// Test login with invalid request (missing email)\n\t\tloginReq := map[string]string{\n\t\t\t\"password\": \"password\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(loginReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusBadRequest {\n\t\t\tt.Errorf(\"expected status %d, got %d\", http.StatusBadRequest, w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"Register_Success\", func(t *testing.T) {\n\t\t// Test successful user registration\n\t\tregisterReq := authDomain.RegisterRequest{\n\t\t\tEmail:     \"newuser@fullstack.dev\",\n\t\t\tPassword:  \"newpassword123\",\n\t\t\tFirstName: \"New\",\n\t\t\tLastName:  \"User\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(registerReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusCreated {\n\t\t\tt.Errorf(\"expected status %d, got %d. Body: %s\", http.StatusCreated, w.Code, w.Body.String())\n\t\t\treturn\n\t\t}\n\n\t\tvar response authDomain.AuthResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026response); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal response: %v\", err)\n\t\t}\n\n\t\tif response.AccessToken == \"\" {\n\t\t\tt.Error(\"Expected access token in response\")\n\t\t}\n\n\t\tif response.User.Email != \"newuser@fullstack.dev\" {\n\t\t\tt.Errorf(\"Expected user email newuser@fullstack.dev, got %s\", response.User.Email)\n\t\t}\n\n\t\tif response.User.FirstName != \"New\" {\n\t\t\tt.Errorf(\"Expected user first name 'New', got %s\", response.User.FirstName)\n\t\t}\n\n\t\tif response.User.Role != authDomain.RoleUser {\n\t\t\tt.Errorf(\"Expected user role %s, got %s\", authDomain.RoleUser, response.User.Role)\n\t\t}\n\n\t\t// Default users should not be email verified initially\n\t\tif response.User.EmailVerified {\n\t\t\tt.Error(\"Expected new user to not be email verified initially\")\n\t\t}\n\t})\n\n\tt.Run(\"Register_DuplicateEmail\", func(t *testing.T) {\n\t\t// Test registration with duplicate email\n\t\tregisterReq := authDomain.RegisterRequest{\n\t\t\tEmail:     \"admin@fullstack.dev\", // Already exists\n\t\t\tPassword:  \"newpassword123\",\n\t\t\tFirstName: \"Duplicate\",\n\t\t\tLastName:  \"User\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(registerReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\t// Expect 409 Conflict for duplicate email (more specific than 400 Bad Request)\n\t\tif w.Code != http.StatusConflict {\n\t\t\tt.Errorf(\"expected status %d, got %d. Body: %s\", http.StatusConflict, w.Code, w.Body.String())\n\t\t}\n\t})\n\n\tt.Run(\"Register_InvalidRequest\", func(t *testing.T) {\n\t\t// Test registration with invalid request (short password)\n\t\tregisterReq := authDomain.RegisterRequest{\n\t\t\tEmail:     \"invalid@fullstack.dev\",\n\t\t\tPassword:  \"123\", // Too short\n\t\t\tFirstName: \"Invalid\",\n\t\t\tLastName:  \"User\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(registerReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusBadRequest {\n\t\t\tt.Errorf(\"expected status %d, got %d\", http.StatusBadRequest, w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"Register_InvalidEmail\", func(t *testing.T) {\n\t\t// Test registration with invalid email format\n\t\tregisterReq := authDomain.RegisterRequest{\n\t\t\tEmail:     \"invalid-email\",\n\t\t\tPassword:  \"validpassword123\",\n\t\t\tFirstName: \"Test\",\n\t\t\tLastName:  \"User\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(registerReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusBadRequest {\n\t\t\tt.Errorf(\"expected status %d, got %d\", http.StatusBadRequest, w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"AuthenticationFlow_E2E\", func(t *testing.T) {\n\t\t// Test complete authentication flow: register -\u003e login -\u003e use token\n\t\t\n\t\t// Step 1: Register a new user\n\t\tregisterReq := authDomain.RegisterRequest{\n\t\t\tEmail:     \"flowtest@fullstack.dev\",\n\t\t\tPassword:  \"flowpassword123\",\n\t\t\tFirstName: \"Flow\",\n\t\t\tLastName:  \"Test\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(registerReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusCreated {\n\t\t\tt.Fatalf(\"Registration failed: %d, Body: %s\", w.Code, w.Body.String())\n\t\t}\n\n\t\tvar registerResponse authDomain.AuthResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026registerResponse); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal register response: %v\", err)\n\t\t}\n\n\t\t// Step 2: Login with the new user\n\t\tloginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"flowtest@fullstack.dev\",\n\t\t\tPassword: \"flowpassword123\",\n\t\t}\n\n\t\tbody, _ = json.Marshal(loginReq)\n\t\treq = httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusOK {\n\t\t\tt.Fatalf(\"Login failed: %d\", w.Code)\n\t\t}\n\n\t\tvar loginResponse authDomain.AuthResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026loginResponse); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal login response: %v\", err)\n\t\t}\n\n\t\t// Note: Tokens may be the same if they contain the same user info and are generated quickly\n\t\t// This is actually normal behavior - both operations return valid tokens for the same user\n\t\tif registerResponse.AccessToken != \"\" \u0026\u0026 loginResponse.AccessToken != \"\" {\n\t\t\tt.Logf(\"Both register and login returned valid tokens\")\n\t\t}\n\n\t\t// Step 3: Test token refresh\n\t\trefreshReq := authDomain.RefreshTokenRequest{\n\t\t\tRefreshToken: loginResponse.RefreshToken,\n\t\t}\n\n\t\tbody, _ = json.Marshal(refreshReq)\n\t\treq = httptest.NewRequest(\"POST\", \"/api/auth/refresh\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusOK {\n\t\t\tt.Logf(\"Token refresh may not be implemented yet: %d\", w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"TokenRefresh_InvalidToken\", func(t *testing.T) {\n\t\t// Test token refresh with invalid token\n\t\trefreshReq := authDomain.RefreshTokenRequest{\n\t\t\tRefreshToken: \"invalid-refresh-token\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(refreshReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/refresh\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\t// Should return unauthorized or bad request\n\t\tif w.Code != http.StatusUnauthorized \u0026\u0026 w.Code != http.StatusBadRequest {\n\t\t\tt.Logf(\"Token refresh validation may not be fully implemented: %d\", w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"PasswordReset_Flow\", func(t *testing.T) {\n\t\t// Step 1: Request password reset\n\t\tforgotPasswordReq := authDomain.ForgotPasswordRequest{\n\t\t\tEmail: \"admin@fullstack.dev\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(forgotPasswordReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/forgot-password\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\t// Should succeed or gracefully handle (even if email service is not configured)\n\t\tif w.Code != http.StatusOK \u0026\u0026 w.Code != http.StatusAccepted {\n\t\t\tt.Logf(\"Password reset request may not be fully implemented: %d\", w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"ProtectedEndpoint_NoToken\", func(t *testing.T) {\n\t\t// Create handler with protected routes\n\t\tprotectedHandler := createProtectedAuthHandler(t, testDB)\n\n\t\t// Test accessing protected endpoint without token\n\t\treq := httptest.NewRequest(\"GET\", \"/api/protected/test\", nil)\n\n\t\tw := httptest.NewRecorder()\n\t\tprotectedHandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusUnauthorized {\n\t\t\tt.Errorf(\"expected status %d, got %d\", http.StatusUnauthorized, w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"ProtectedEndpoint_ValidToken\", func(t *testing.T) {\n\t\t// First login to get a valid token\n\t\tloginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"admin@fullstack.dev\",\n\t\t\tPassword: \"password\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(loginReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusOK {\n\t\t\tt.Fatalf(\"Login failed: %d\", w.Code)\n\t\t}\n\n\t\tvar loginResponse authDomain.AuthResponse\n\t\tjson.Unmarshal(w.Body.Bytes(), \u0026loginResponse)\n\n\t\t// Create handler with protected routes\n\t\tprotectedHandler := createProtectedAuthHandler(t, testDB)\n\n\t\t// Use token for protected endpoint\n\t\treq = httptest.NewRequest(\"GET\", \"/api/protected/test\", nil)\n\t\treq.Header.Set(\"Authorization\", fmt.Sprintf(\"Bearer %s\", loginResponse.AccessToken))\n\n\t\tw = httptest.NewRecorder()\n\t\tprotectedHandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusOK {\n\t\t\tt.Errorf(\"expected status %d, got %d\", http.StatusOK, w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"ProtectedEndpoint_InvalidToken\", func(t *testing.T) {\n\t\t// Create handler with protected routes\n\t\tprotectedHandler := createProtectedAuthHandler(t, testDB)\n\n\t\t// Test accessing protected endpoint with invalid token\n\t\treq := httptest.NewRequest(\"GET\", \"/api/protected/test\", nil)\n\t\treq.Header.Set(\"Authorization\", \"Bearer invalid-token\")\n\n\t\tw := httptest.NewRecorder()\n\t\tprotectedHandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusUnauthorized {\n\t\t\tt.Errorf(\"expected status %d, got %d\", http.StatusUnauthorized, w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"ProtectedEndpoint_ExpiredToken\", func(t *testing.T) {\n\t\t// This would require generating an expired token\n\t\t// For now, we'll use a malformed token that should fail validation\n\t\tprotectedHandler := createProtectedAuthHandler(t, testDB)\n\n\t\treq := httptest.NewRequest(\"GET\", \"/api/protected/test\", nil)\n\t\treq.Header.Set(\"Authorization\", \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.expired.token\")\n\n\t\tw := httptest.NewRecorder()\n\t\tprotectedHandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusUnauthorized {\n\t\t\tt.Errorf(\"expected status %d, got %d\", http.StatusUnauthorized, w.Code)\n\t\t}\n\t})\n}\n\n// Helper functions\n\nfunc setupTestDatabase(t *testing.T, ctx context.Context) (*database.DB, func()) {\n\tt.Helper()\n\n\t// Create PostgreSQL container\n\tpostgresContainer, err := postgres.Run(ctx,\n\t\t\"postgres:16-alpine\",\n\t\tpostgres.WithDatabase(\"fullstack_template_test\"),\n\t\tpostgres.WithUsername(\"test\"),\n\t\tpostgres.WithPassword(\"test\"),\n\t\ttestcontainers.WithWaitStrategy(\n\t\t\twait.ForLog(\"database system is ready to accept connections\").\n\t\t\t\tWithOccurrence(2).\n\t\t\t\tWithStartupTimeout(30*time.Second)),\n\t)\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to start postgres container: %v\", err)\n\t}\n\n\t// Get connection details\n\thost, err := postgresContainer.Host(ctx)\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to get container host: %v\", err)\n\t}\n\n\tport, err := postgresContainer.MappedPort(ctx, \"5432\")\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to get container port: %v\", err)\n\t}\n\n\t// Build DSN\n\tdsn := fmt.Sprintf(\"postgres://test:test@%s:%s/fullstack_template_test?sslmode=disable\", host, port.Port())\n\n\t// Create logger for testing\n\tlogger := slog.New(slog.NewTextHandler(os.Stdout, \u0026slog.HandlerOptions{\n\t\tLevel: slog.LevelError,\n\t}))\n\n\t// Initialize database\n\tdb, err := database.New(dsn, false, logger, \"test\")\n\tif err != nil {\n\t\tpostgresContainer.Terminate(ctx)\n\t\tt.Fatalf(\"Failed to connect to test database: %v\", err)\n\t}\n\n\t// Run migrations\n\tif err := db.AutoMigrate(); err != nil {\n\t\tdb.Close()\n\t\tpostgresContainer.Terminate(ctx)\n\t\tt.Fatalf(\"Failed to run migrations: %v\", err)\n\t}\n\n\t// Get underlying sql.DB\n\tsqlDB, err := db.DB.DB()\n\tif err != nil {\n\t\tdb.Close()\n\t\tpostgresContainer.Terminate(ctx)\n\t\tt.Fatalf(\"Failed to get sql.DB: %v\", err)\n\t}\n\n\t// Seed test data\n\tif err := seedAuthTestData(sqlDB); err != nil {\n\t\tdb.Close()\n\t\tpostgresContainer.Terminate(ctx)\n\t\tt.Fatalf(\"Failed to seed test data: %v\", err)\n\t}\n\n\tcleanup := func() {\n\t\tdb.Close()\n\t\tpostgresContainer.Terminate(ctx)\n\t}\n\n\treturn db, cleanup\n}\n\nfunc createTestAuthHandler(t *testing.T, db *database.DB) http.Handler {\n\tt.Helper()\n\n\t// Create test config\n\tcfg := \u0026config.Config{\n\t\tJWTSecret: \"test-jwt-secret-key-for-testing-only-and-this-is-long-enough\",\n\t\tSMTPHost:  \"localhost\",\n\t\tSMTPPort:  587,\n\t\tEmailFrom: \"test@example.com\",\n\t}\n\n\t// Create logger for testing\n\tlogger := slog.New(slog.NewTextHandler(os.Stdout, \u0026slog.HandlerOptions{\n\t\tLevel: slog.LevelError,\n\t}))\n\n\t// Initialize services\n\tuserRepo := authRepo.NewUserRepository(db.DB)\n\trefreshTokenRepo := authRepo.NewRefreshTokenRepository(db.DB)\n\tpasswordResetRepo := authRepo.NewPasswordResetRepository(db.DB)\n\tjwtSvc := authService.NewJWTService(cfg)\n\temailSvc := authService.NewEmailService(cfg, logger)\n\tauthSvc := authService.NewAuthService(cfg, logger, userRepo, refreshTokenRepo, passwordResetRepo, jwtSvc, emailSvc)\n\n\t// Initialize handler\n\tauthHandler := authTransport.NewAuthHandler(cfg, logger, authSvc)\n\n\t// Set Gin mode for testing\n\tgin.SetMode(gin.TestMode)\n\trouter := gin.Default()\n\t\n\t// Setup auth routes\n\tapi := router.Group(\"/api\")\n\tauth := api.Group(\"/auth\")\n\t{\n\t\tauth.POST(\"/register\", authHandler.Register)\n\t\tauth.POST(\"/login\", authHandler.Login)\n\t\tauth.POST(\"/refresh\", authHandler.RefreshToken)\n\t\tauth.POST(\"/forgot-password\", authHandler.ForgotPassword)\n\t\tauth.POST(\"/reset-password\", authHandler.ResetPassword)\n\t\tauth.POST(\"/verify-email\", authHandler.VerifyEmail)\n\t}\n\n\treturn router\n}\n\nfunc createProtectedAuthHandler(t *testing.T, db *database.DB) http.Handler {\n\tt.Helper()\n\n\t// Create test config\n\tcfg := \u0026config.Config{\n\t\tJWTSecret: \"test-jwt-secret-key-for-testing-only-and-this-is-long-enough\",\n\t\tSMTPHost:  \"localhost\",\n\t\tSMTPPort:  587,\n\t\tEmailFrom: \"test@example.com\",\n\t}\n\n\t// Create logger for testing\n\tlogger := slog.New(slog.NewTextHandler(os.Stdout, \u0026slog.HandlerOptions{\n\t\tLevel: slog.LevelError,\n\t}))\n\n\t// Initialize services\n\tuserRepo := authRepo.NewUserRepository(db.DB)\n\trefreshTokenRepo := authRepo.NewRefreshTokenRepository(db.DB)\n\tpasswordResetRepo := authRepo.NewPasswordResetRepository(db.DB)\n\tjwtSvc := authService.NewJWTService(cfg)\n\temailSvc := authService.NewEmailService(cfg, logger)\n\tauthSvc := authService.NewAuthService(cfg, logger, userRepo, refreshTokenRepo, passwordResetRepo, jwtSvc, emailSvc)\n\n\t// Initialize middleware\n\tauthMiddleware := middleware.NewAuthMiddleware(logger, authSvc)\n\n\t// Set Gin mode for testing\n\tgin.SetMode(gin.TestMode)\n\trouter := gin.Default()\n\t\n\t// Setup protected routes\n\tapi := router.Group(\"/api\")\n\tprotected := api.Group(\"/protected\")\n\tprotected.Use(authMiddleware.RequireAuth())\n\t{\n\t\tprotected.GET(\"/test\", func(c *gin.Context) {\n\t\t\tc.JSON(http.StatusOK, gin.H{\"message\": \"protected endpoint accessed\"})\n\t\t})\n\t}\n\n\treturn router\n}\n\nfunc seedAuthTestData(db *sql.DB) error {\n\t// Generate proper bcrypt hash for \"password\"\n\thashedPassword, err := bcrypt.GenerateFromPassword([]byte(\"password\"), bcrypt.DefaultCost)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to hash password: %w\", err)\n\t}\n\t\n\t// Create test admin user\n\tinsertAdminUser := `\n\tINSERT INTO users (email, password_hash, first_name, last_name, role, status, email_verified, created_at, updated_at)\n\tVALUES ($1, $2, $3, $4, $5, $6, $7, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)`\n\n\t_, err = db.Exec(insertAdminUser, \n\t\t\"admin@fullstack.dev\", \n\t\tstring(hashedPassword), \n\t\t\"Admin\", \n\t\t\"User\", \n\t\tstring(authDomain.RoleAdmin), \n\t\tstring(authDomain.StatusActive), \n\t\ttrue)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to seed admin user: %w\", err)\n\t}\n\n\t// Create test regular user\n\tinsertRegularUser := `\n\tINSERT INTO users (email, password_hash, first_name, last_name, role, status, email_verified, created_at, updated_at)\n\tVALUES ($1, $2, $3, $4, $5, $6, $7, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)`\n\n\t_, err = db.Exec(insertRegularUser, \n\t\t\"user@fullstack.dev\", \n\t\tstring(hashedPassword), \n\t\t\"Test\", \n\t\t\"User\", \n\t\tstring(authDomain.RoleUser), \n\t\tstring(authDomain.StatusActive), \n\t\ttrue)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to seed regular user: %w\", err)\n\t}\n\n\treturn nil\n}",
      "size": 19939,
      "hash": "3483dec31542f94e51d9b3719fc9d731f92845df67de30aac2b2e294ce017fbd",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "tests/integration/e2e_test.go",
      "template": true,
      "content": "//go:build integration\n\npackage integration\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"database/sql\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log/slog\"\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"os\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/testcontainers/testcontainers-go\"\n\t\"github.com/testcontainers/testcontainers-go/modules/postgres\"\n\t\"github.com/testcontainers/testcontainers-go/wait\"\n\t\"golang.org/x/crypto/bcrypt\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/database\"\n\tauthDomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\tauthRepo \"github.com/acheevo/fullstack-template/internal/auth/repository\"\n\tauthService \"github.com/acheevo/fullstack-template/internal/auth/service\"\n\tauthTransport \"github.com/acheevo/fullstack-template/internal/auth/transport\"\n\t\"github.com/acheevo/fullstack-template/internal/middleware\"\n)\n\nfunc TestE2E_FullUserFlow(t *testing.T) {\n\tctx := context.Background()\n\n\t// Setup test database container\n\ttestDB, cleanup := setupE2ETestDatabase(t, ctx)\n\tdefer cleanup()\n\n\t// Create test handler with test database\n\thandler := createE2ETestHandler(t, testDB)\n\n\tt.Run(\"CompleteUserJourney\", func(t *testing.T) {\n\t\t// Step 1: Health check (if implemented)\n\t\treq := httptest.NewRequest(\"GET\", \"/api/health\", nil)\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\t// Health check may not be implemented, so don't fail the test\n\t\tif w.Code == http.StatusOK {\n\t\t\tt.Logf(\"Health check passed: %d\", w.Code)\n\t\t} else {\n\t\t\tt.Logf(\"Health check not implemented or failed: %d\", w.Code)\n\t\t}\n\n\t\t// Step 2: Register new user\n\t\tregisterReq := authDomain.RegisterRequest{\n\t\t\tEmail:     \"journey@fullstack.dev\",\n\t\t\tPassword:  \"journeypassword123\",\n\t\t\tFirstName: \"Journey\",\n\t\t\tLastName:  \"User\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(registerReq)\n\t\treq = httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusCreated {\n\t\t\tt.Fatalf(\"Registration failed: %d, Body: %s\", w.Code, w.Body.String())\n\t\t}\n\n\t\tvar registerResponse authDomain.AuthResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026registerResponse); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal register response: %v\", err)\n\t\t}\n\n\t\t// Verify registration response\n\t\tif registerResponse.AccessToken == \"\" {\n\t\t\tt.Error(\"Expected access token in registration response\")\n\t\t}\n\t\tif registerResponse.User.Email != \"journey@fullstack.dev\" {\n\t\t\tt.Errorf(\"Expected email journey@fullstack.dev, got %s\", registerResponse.User.Email)\n\t\t}\n\t\tif registerResponse.User.Role != authDomain.RoleUser {\n\t\t\tt.Errorf(\"Expected role %s, got %s\", authDomain.RoleUser, registerResponse.User.Role)\n\t\t}\n\n\t\t// Step 3: Login with registered user\n\t\tloginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"journey@fullstack.dev\",\n\t\t\tPassword: \"journeypassword123\",\n\t\t}\n\n\t\tbody, _ = json.Marshal(loginReq)\n\t\treq = httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusOK {\n\t\t\tt.Fatalf(\"Login failed: %d\", w.Code)\n\t\t}\n\n\t\tvar loginResponse authDomain.AuthResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026loginResponse); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal login response: %v\", err)\n\t\t}\n\n\t\ttoken := loginResponse.AccessToken\n\n\t\t// Step 4: Access protected endpoint\n\t\treq = httptest.NewRequest(\"GET\", \"/api/protected/profile\", nil)\n\t\treq.Header.Set(\"Authorization\", fmt.Sprintf(\"Bearer %s\", token))\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusOK {\n\t\t\tt.Errorf(\"Protected endpoint access failed: %d\", w.Code)\n\t\t}\n\n\t\t// Step 5: Try to access admin endpoint (should fail)\n\t\treq = httptest.NewRequest(\"GET\", \"/api/admin/users\", nil)\n\t\treq.Header.Set(\"Authorization\", fmt.Sprintf(\"Bearer %s\", token))\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusForbidden {\n\t\t\tt.Errorf(\"Expected forbidden access to admin endpoint, got: %d\", w.Code)\n\t\t}\n\n\t\t// Step 6: Test token refresh\n\t\tif loginResponse.RefreshToken != \"\" {\n\t\t\trefreshReq := authDomain.RefreshTokenRequest{\n\t\t\t\tRefreshToken: loginResponse.RefreshToken,\n\t\t\t}\n\n\t\t\tbody, _ = json.Marshal(refreshReq)\n\t\t\treq = httptest.NewRequest(\"POST\", \"/api/auth/refresh\", bytes.NewBuffer(body))\n\t\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\t\tw = httptest.NewRecorder()\n\t\t\thandler.ServeHTTP(w, req)\n\n\t\t\tif w.Code == http.StatusOK {\n\t\t\t\tt.Logf(\"Token refresh successful\")\n\t\t\t} else {\n\t\t\t\tt.Logf(\"Token refresh may not be fully implemented: %d\", w.Code)\n\t\t\t}\n\t\t}\n\n\t\t// Step 7: Test logout (if implemented)\n\t\treq = httptest.NewRequest(\"POST\", \"/api/auth/logout\", nil)\n\t\treq.Header.Set(\"Authorization\", fmt.Sprintf(\"Bearer %s\", token))\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code == http.StatusOK {\n\t\t\tt.Logf(\"Logout successful\")\n\t\t} else {\n\t\t\tt.Logf(\"Logout may not be fully implemented: %d\", w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"AdminUserManagement\", func(t *testing.T) {\n\t\t// Step 1: Login as admin\n\t\tloginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"admin@fullstack.dev\",\n\t\t\tPassword: \"password\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(loginReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusOK {\n\t\t\tt.Fatalf(\"Admin login failed: %d\", w.Code)\n\t\t}\n\n\t\tvar loginResponse authDomain.AuthResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026loginResponse); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal admin login response: %v\", err)\n\t\t}\n\n\t\tadminToken := loginResponse.AccessToken\n\n\t\t// Step 2: Access admin endpoint\n\t\treq = httptest.NewRequest(\"GET\", \"/api/admin/users\", nil)\n\t\treq.Header.Set(\"Authorization\", fmt.Sprintf(\"Bearer %s\", adminToken))\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\t// Admin endpoints may not be fully implemented\n\t\tif w.Code == http.StatusOK {\n\t\t\tt.Logf(\"Admin endpoint access successful\")\n\t\t} else {\n\t\t\tt.Logf(\"Admin endpoint may not be fully implemented: %d\", w.Code)\n\t\t}\n\n\t\t// Step 3: Try to access admin endpoint as regular user (should fail)\n\t\tuserLoginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"user@fullstack.dev\",\n\t\t\tPassword: \"password\",\n\t\t}\n\n\t\tbody, _ = json.Marshal(userLoginReq)\n\t\treq = httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusOK {\n\t\t\tt.Fatalf(\"User login failed: %d\", w.Code)\n\t\t}\n\n\t\tvar userLoginResponse authDomain.AuthResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026userLoginResponse); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal user login response: %v\", err)\n\t\t}\n\n\t\tuserToken := userLoginResponse.AccessToken\n\n\t\t// Try to access admin endpoint with user token\n\t\treq = httptest.NewRequest(\"GET\", \"/api/admin/users\", nil)\n\t\treq.Header.Set(\"Authorization\", fmt.Sprintf(\"Bearer %s\", userToken))\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusForbidden {\n\t\t\tt.Errorf(\"Expected forbidden access for regular user to admin endpoint, got %d\", w.Code)\n\t\t}\n\t})\n\n\tt.Run(\"SecurityValidation\", func(t *testing.T) {\n\t\t// Test various security scenarios\n\n\t\t// 1. SQL Injection attempt in login\n\t\tloginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"admin@fullstack.dev'; DROP TABLE users; --\",\n\t\t\tPassword: \"password\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(loginReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\t// Should fail with validation error or unauthorized\n\t\tif w.Code == http.StatusOK {\n\t\t\tt.Error(\"SQL injection attempt should not succeed\")\n\t\t}\n\n\t\t// 2. XSS attempt in registration\n\t\tregisterReq := authDomain.RegisterRequest{\n\t\t\tEmail:     \"xss@test.com\",\n\t\t\tPassword:  \"password123\",\n\t\t\tFirstName: \"\u003cscript\u003ealert('xss')\u003c/script\u003e\",\n\t\t\tLastName:  \"Test\",\n\t\t}\n\n\t\tbody, _ = json.Marshal(registerReq)\n\t\treq = httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\tif w.Code == http.StatusCreated {\n\t\t\t// If registration succeeds, ensure XSS content is properly handled\n\t\t\tvar response authDomain.AuthResponse\n\t\t\tjson.Unmarshal(w.Body.Bytes(), \u0026response)\n\t\t\t\n\t\t\t// The first name should be stored safely (content filtering is application-specific)\n\t\t\t// For now, we just verify the registration succeeded without breaking the system\n\t\t\tif response.User.FirstName == \"\" {\n\t\t\t\tt.Error(\"First name should not be empty after registration\")\n\t\t\t}\n\t\t\tt.Logf(\"XSS test registered successfully with first name: %s\", response.User.FirstName)\n\t\t} else {\n\t\t\t// Registration may be rejected due to validation - this is also acceptable\n\t\t\tt.Logf(\"XSS content registration rejected with status: %d\", w.Code)\n\t\t}\n\n\t\t// 3. Test with extremely long input\n\t\tlongEmail := string(make([]byte, 1000)) + \"@test.com\"\n\t\tregisterReq = authDomain.RegisterRequest{\n\t\t\tEmail:     longEmail,\n\t\t\tPassword:  \"password123\",\n\t\t\tFirstName: \"Test\",\n\t\t\tLastName:  \"User\",\n\t\t}\n\n\t\tbody, _ = json.Marshal(registerReq)\n\t\treq = httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\t// Should fail with validation error\n\t\tif w.Code == http.StatusCreated {\n\t\t\tt.Error(\"Extremely long email should be rejected\")\n\t\t}\n\n\t\t// 4. Test weak password\n\t\tregisterReq = authDomain.RegisterRequest{\n\t\t\tEmail:     \"weak@test.com\",\n\t\t\tPassword:  \"123\",\n\t\t\tFirstName: \"Weak\",\n\t\t\tLastName:  \"Password\",\n\t\t}\n\n\t\tbody, _ = json.Marshal(registerReq)\n\t\treq = httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw = httptest.NewRecorder()\n\t\thandler.ServeHTTP(w, req)\n\n\t\t// Should fail with validation error\n\t\tif w.Code == http.StatusCreated {\n\t\t\tt.Error(\"Weak password should be rejected\")\n\t\t}\n\t})\n\n\tt.Run(\"ConcurrentOperations\", func(t *testing.T) {\n\t\t// Test concurrent registrations with same email\n\t\tregisterReq := authDomain.RegisterRequest{\n\t\t\tEmail:     \"concurrent@test.com\",\n\t\t\tPassword:  \"password123\",\n\t\t\tFirstName: \"Concurrent\",\n\t\t\tLastName:  \"Test\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(registerReq)\n\n\t\t// Start multiple goroutines trying to register same email\n\t\tresults := make(chan int, 3)\n\t\t\n\t\tfor i := 0; i \u003c 3; i++ {\n\t\t\tgo func() {\n\t\t\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\t\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\t\t\t\tw := httptest.NewRecorder()\n\t\t\t\thandler.ServeHTTP(w, req)\n\t\t\t\tresults \u003c- w.Code\n\t\t\t}()\n\t\t}\n\n\t\t// Collect results\n\t\tsuccessCount := 0\n\t\tfor i := 0; i \u003c 3; i++ {\n\t\t\tcode := \u003c-results\n\t\t\tif code == http.StatusCreated {\n\t\t\t\tsuccessCount++\n\t\t\t}\n\t\t}\n\n\t\t// Only one should succeed due to unique email constraint\n\t\tif successCount != 1 {\n\t\t\tt.Errorf(\"Expected exactly 1 successful registration, got %d\", successCount)\n\t\t} else {\n\t\t\tt.Logf(\"Concurrent operations test passed: %d successful registrations\", successCount)\n\t\t}\n\t})\n\n\tt.Run(\"RateLimiting\", func(t *testing.T) {\n\t\t// Test rate limiting by making many rapid requests\n\t\tloginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"nonexistent@test.com\",\n\t\t\tPassword: \"wrongpassword\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(loginReq)\n\t\t\n\t\trateLimitHit := false\n\t\tfor i := 0; i \u003c 20; i++ {\n\t\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\t\t\treq.Header.Set(\"X-Forwarded-For\", \"192.168.1.100\") // Simulate same IP\n\n\t\t\tw := httptest.NewRecorder()\n\t\t\thandler.ServeHTTP(w, req)\n\n\t\t\tif w.Code == http.StatusTooManyRequests {\n\t\t\t\trateLimitHit = true\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif !rateLimitHit {\n\t\t\tt.Logf(\"Rate limiting may not be implemented or threshold is higher\")\n\t\t} else {\n\t\t\tt.Logf(\"Rate limiting is working correctly\")\n\t\t}\n\t})\n}\n\n// Helper functions for E2E tests\n\nfunc setupE2ETestDatabase(t *testing.T, ctx context.Context) (*database.DB, func()) {\n\tt.Helper()\n\n\t// Create PostgreSQL container\n\tpostgresContainer, err := postgres.Run(ctx,\n\t\t\"postgres:16-alpine\",\n\t\tpostgres.WithDatabase(\"fullstack_template_e2e\"),\n\t\tpostgres.WithUsername(\"test\"),\n\t\tpostgres.WithPassword(\"test\"),\n\t\ttestcontainers.WithWaitStrategy(\n\t\t\twait.ForLog(\"database system is ready to accept connections\").\n\t\t\t\tWithOccurrence(2).\n\t\t\t\tWithStartupTimeout(30*time.Second)),\n\t)\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to start postgres container: %v\", err)\n\t}\n\n\t// Get connection details\n\thost, err := postgresContainer.Host(ctx)\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to get container host: %v\", err)\n\t}\n\n\tport, err := postgresContainer.MappedPort(ctx, \"5432\")\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to get container port: %v\", err)\n\t}\n\n\t// Build DSN\n\tdsn := fmt.Sprintf(\"postgres://test:test@%s:%s/fullstack_template_e2e?sslmode=disable\", host, port.Port())\n\n\t// Create logger for testing\n\tlogger := slog.New(slog.NewTextHandler(os.Stdout, \u0026slog.HandlerOptions{\n\t\tLevel: slog.LevelError,\n\t}))\n\n\t// Initialize database\n\tdb, err := database.New(dsn, false, logger, \"test\")\n\tif err != nil {\n\t\tpostgresContainer.Terminate(ctx)\n\t\tt.Fatalf(\"Failed to connect to test database: %v\", err)\n\t}\n\n\t// Run migrations\n\tif err := db.AutoMigrate(); err != nil {\n\t\tdb.Close()\n\t\tpostgresContainer.Terminate(ctx)\n\t\tt.Fatalf(\"Failed to run migrations: %v\", err)\n\t}\n\n\t// Get underlying sql.DB\n\tsqlDB, err := db.DB.DB()\n\tif err != nil {\n\t\tdb.Close()\n\t\tpostgresContainer.Terminate(ctx)\n\t\tt.Fatalf(\"Failed to get sql.DB: %v\", err)\n\t}\n\n\t// Seed test data\n\tif err := seedE2ETestData(sqlDB); err != nil {\n\t\tdb.Close()\n\t\tpostgresContainer.Terminate(ctx)\n\t\tt.Fatalf(\"Failed to seed test data: %v\", err)\n\t}\n\n\tcleanup := func() {\n\t\tdb.Close()\n\t\tpostgresContainer.Terminate(ctx)\n\t}\n\n\treturn db, cleanup\n}\n\nfunc createE2ETestHandler(t *testing.T, db *database.DB) http.Handler {\n\tt.Helper()\n\n\t// Create test config\n\tcfg := \u0026config.Config{\n\t\tJWTSecret: \"test-jwt-secret-key-for-testing-only-and-this-is-long-enough\",\n\t\tSMTPHost:  \"localhost\",\n\t\tSMTPPort:  587,\n\t\tEmailFrom: \"test@example.com\",\n\t}\n\n\t// Create logger for testing\n\tlogger := slog.New(slog.NewTextHandler(os.Stdout, \u0026slog.HandlerOptions{\n\t\tLevel: slog.LevelError,\n\t}))\n\n\t// Initialize services\n\tuserRepo := authRepo.NewUserRepository(db.DB)\n\trefreshTokenRepo := authRepo.NewRefreshTokenRepository(db.DB)\n\tpasswordResetRepo := authRepo.NewPasswordResetRepository(db.DB)\n\tjwtSvc := authService.NewJWTService(cfg)\n\temailSvc := authService.NewEmailService(cfg, logger)\n\tauthSvc := authService.NewAuthService(cfg, logger, userRepo, refreshTokenRepo, passwordResetRepo, jwtSvc, emailSvc)\n\n\t// Initialize handlers\n\tauthHandler := authTransport.NewAuthHandler(cfg, logger, authSvc)\n\n\t// Initialize middleware\n\tauthMiddleware := middleware.NewAuthMiddleware(logger, authSvc)\n\n\t// Set Gin mode for testing\n\tgin.SetMode(gin.TestMode)\n\trouter := gin.Default()\n\t\n\t// Setup all routes\n\tapi := router.Group(\"/api\")\n\t{\n\t\t// Health check (if implemented)\n\t\tapi.GET(\"/health\", func(c *gin.Context) {\n\t\t\tc.JSON(http.StatusOK, gin.H{\"status\": \"ok\"})\n\t\t})\n\n\t\t// Auth routes (public)\n\t\tauth := api.Group(\"/auth\")\n\t\t{\n\t\t\tauth.POST(\"/register\", authHandler.Register)\n\t\t\tauth.POST(\"/login\", authHandler.Login)\n\t\t\tauth.POST(\"/refresh\", authHandler.RefreshToken)\n\t\t\tauth.POST(\"/forgot-password\", authHandler.ForgotPassword)\n\t\t\tauth.POST(\"/reset-password\", authHandler.ResetPassword)\n\t\t\tauth.POST(\"/verify-email\", authHandler.VerifyEmail)\n\t\t\tauth.POST(\"/logout\", authHandler.Logout)\n\t\t}\n\n\t\t// Protected routes\n\t\tprotected := api.Group(\"/protected\")\n\t\tprotected.Use(authMiddleware.RequireAuth())\n\t\t{\n\t\t\tprotected.GET(\"/profile\", func(c *gin.Context) {\n\t\t\t\tc.JSON(http.StatusOK, gin.H{\"message\": \"profile accessed\"})\n\t\t\t})\n\t\t}\n\n\t\t// Admin routes\n\t\tadmin := api.Group(\"/admin\")\n\t\tadmin.Use(authMiddleware.RequireAuth())\n\t\tadmin.Use(authMiddleware.RequireAdmin())\n\t\t{\n\t\t\tadmin.GET(\"/users\", func(c *gin.Context) {\n\t\t\t\tc.JSON(http.StatusOK, gin.H{\"users\": []string{\"admin\", \"user\"}})\n\t\t\t})\n\t\t}\n\t}\n\n\treturn router\n}\n\nfunc seedE2ETestData(db *sql.DB) error {\n\t// Generate proper bcrypt hash for \"password\"\n\thashedPassword, err := bcrypt.GenerateFromPassword([]byte(\"password\"), bcrypt.DefaultCost)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to hash password: %w\", err)\n\t}\n\t\n\t// Create test admin user\n\tinsertAdminUser := `\n\tINSERT INTO users (email, password_hash, first_name, last_name, role, status, email_verified, created_at, updated_at)\n\tVALUES ($1, $2, $3, $4, $5, $6, $7, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)`\n\n\t_, err = db.Exec(insertAdminUser, \n\t\t\"admin@fullstack.dev\", \n\t\tstring(hashedPassword), \n\t\t\"Admin\", \n\t\t\"User\", \n\t\tstring(authDomain.RoleAdmin), \n\t\tstring(authDomain.StatusActive), \n\t\ttrue)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to seed admin user: %w\", err)\n\t}\n\n\t// Create test regular user\n\tinsertRegularUser := `\n\tINSERT INTO users (email, password_hash, first_name, last_name, role, status, email_verified, created_at, updated_at)\n\tVALUES ($1, $2, $3, $4, $5, $6, $7, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)`\n\n\t_, err = db.Exec(insertRegularUser, \n\t\t\"user@fullstack.dev\", \n\t\tstring(hashedPassword), \n\t\t\"Test\", \n\t\t\"User\", \n\t\tstring(authDomain.RoleUser), \n\t\tstring(authDomain.StatusActive), \n\t\ttrue)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to seed regular user: %w\", err)\n\t}\n\n\treturn nil\n}",
      "size": 17692,
      "hash": "7a64649e6c5ecad953af78d902f14b25039e70ca4257202dd7cddf965ce7c643",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    },
    {
      "path": "tests/integration/simple_test.go",
      "template": true,
      "content": "//go:build integration\n\npackage integration\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"database/sql\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log/slog\"\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"os\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/testcontainers/testcontainers-go\"\n\t\"github.com/testcontainers/testcontainers-go/modules/postgres\"\n\t\"github.com/testcontainers/testcontainers-go/wait\"\n\t\"golang.org/x/crypto/bcrypt\"\n\n\t\"github.com/acheevo/fullstack-template/internal/shared/config\"\n\t\"github.com/acheevo/fullstack-template/internal/shared/database\"\n\tauthDomain \"github.com/acheevo/fullstack-template/internal/auth/domain\"\n\tauthRepo \"github.com/acheevo/fullstack-template/internal/auth/repository\"\n\tauthService \"github.com/acheevo/fullstack-template/internal/auth/service\"\n\tauthTransport \"github.com/acheevo/fullstack-template/internal/auth/transport\"\n)\n\nfunc TestIntegration_SimpleAuth(t *testing.T) {\n\tctx := context.Background()\n\n\t// Create PostgreSQL container\n\tpostgresContainer, err := postgres.Run(ctx,\n\t\t\"postgres:16-alpine\",\n\t\tpostgres.WithDatabase(\"fullstack_template_test\"),\n\t\tpostgres.WithUsername(\"test\"),\n\t\tpostgres.WithPassword(\"test\"),\n\t\ttestcontainers.WithWaitStrategy(\n\t\t\twait.ForLog(\"database system is ready to accept connections\").\n\t\t\t\tWithOccurrence(2).\n\t\t\t\tWithStartupTimeout(30*time.Second)),\n\t)\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to start postgres container: %v\", err)\n\t}\n\tdefer postgresContainer.Terminate(ctx)\n\n\t// Get connection details\n\thost, err := postgresContainer.Host(ctx)\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to get container host: %v\", err)\n\t}\n\n\tport, err := postgresContainer.MappedPort(ctx, \"5432\")\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to get container port: %v\", err)\n\t}\n\n\t// Build DSN\n\tdsn := fmt.Sprintf(\"postgres://test:test@%s:%s/fullstack_template_test?sslmode=disable\", host, port.Port())\n\n\t// Create logger for testing\n\tlogger := slog.New(slog.NewTextHandler(os.Stdout, \u0026slog.HandlerOptions{\n\t\tLevel: slog.LevelError,\n\t}))\n\n\t// Initialize database\n\tdb, err := database.New(dsn, false, logger, \"test\")\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to connect to test database: %v\", err)\n\t}\n\tdefer db.Close()\n\n\t// Run migrations\n\tif err := db.AutoMigrate(); err != nil {\n\t\tt.Fatalf(\"Failed to run migrations: %v\", err)\n\t}\n\n\t// Get underlying sql.DB\n\tsqlDB, err := db.DB.DB()\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to get sql.DB: %v\", err)\n\t}\n\n\t// Seed test data\n\tif err := seedSimpleTestData(sqlDB); err != nil {\n\t\tt.Fatalf(\"Failed to seed test data: %v\", err)\n\t}\n\n\t// Create test config\n\tcfg := \u0026config.Config{\n\t\tJWTSecret: \"test-jwt-secret-key-for-testing-only-and-this-is-long-enough\",\n\t\tSMTPHost:  \"localhost\",\n\t\tSMTPPort:  587,\n\t\tEmailFrom: \"test@example.com\",\n\t}\n\n\t// Initialize services\n\tuserRepo := authRepo.NewUserRepository(db.DB)\n\trefreshTokenRepo := authRepo.NewRefreshTokenRepository(db.DB)\n\tpasswordResetRepo := authRepo.NewPasswordResetRepository(db.DB)\n\tjwtSvc := authService.NewJWTService(cfg)\n\temailSvc := authService.NewEmailService(cfg, logger)\n\tauthSvc := authService.NewAuthService(cfg, logger, userRepo, refreshTokenRepo, passwordResetRepo, jwtSvc, emailSvc)\n\n\t// Initialize handler\n\tauthHandler := authTransport.NewAuthHandler(cfg, logger, authSvc)\n\n\t// Set Gin mode for testing\n\tgin.SetMode(gin.TestMode)\n\trouter := gin.Default()\n\t\n\t// Setup auth routes\n\tapi := router.Group(\"/api\")\n\tauth := api.Group(\"/auth\")\n\t{\n\t\tauth.POST(\"/register\", authHandler.Register)\n\t\tauth.POST(\"/login\", authHandler.Login)\n\t}\n\n\tt.Run(\"Login_Success\", func(t *testing.T) {\n\t\tloginReq := authDomain.LoginRequest{\n\t\t\tEmail:    \"admin@fullstack.dev\",\n\t\t\tPassword: \"password\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(loginReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/login\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\trouter.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusOK {\n\t\t\tt.Errorf(\"expected status %d, got %d. Body: %s\", http.StatusOK, w.Code, w.Body.String())\n\t\t\treturn\n\t\t}\n\n\t\tvar response authDomain.AuthResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026response); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal response: %v\", err)\n\t\t}\n\n\t\tif response.AccessToken == \"\" {\n\t\t\tt.Error(\"Expected access token in response\")\n\t\t}\n\n\t\tif response.User.Email != \"admin@fullstack.dev\" {\n\t\t\tt.Errorf(\"Expected user email admin@fullstack.dev, got %s\", response.User.Email)\n\t\t}\n\t})\n\n\tt.Run(\"Register_Success\", func(t *testing.T) {\n\t\tregisterReq := authDomain.RegisterRequest{\n\t\t\tEmail:     \"newuser@fullstack.dev\",\n\t\t\tPassword:  \"newpassword123\",\n\t\t\tFirstName: \"New\",\n\t\t\tLastName:  \"User\",\n\t\t}\n\n\t\tbody, _ := json.Marshal(registerReq)\n\t\treq := httptest.NewRequest(\"POST\", \"/api/auth/register\", bytes.NewBuffer(body))\n\t\treq.Header.Set(\"Content-Type\", \"application/json\")\n\n\t\tw := httptest.NewRecorder()\n\t\trouter.ServeHTTP(w, req)\n\n\t\tif w.Code != http.StatusCreated {\n\t\t\tt.Errorf(\"expected status %d, got %d. Body: %s\", http.StatusCreated, w.Code, w.Body.String())\n\t\t\treturn\n\t\t}\n\n\t\tvar response authDomain.AuthResponse\n\t\tif err := json.Unmarshal(w.Body.Bytes(), \u0026response); err != nil {\n\t\t\tt.Fatalf(\"Failed to unmarshal response: %v\", err)\n\t\t}\n\n\t\tif response.AccessToken == \"\" {\n\t\t\tt.Error(\"Expected access token in response\")\n\t\t}\n\n\t\tif response.User.Email != \"newuser@fullstack.dev\" {\n\t\t\tt.Errorf(\"Expected user email newuser@fullstack.dev, got %s\", response.User.Email)\n\t\t}\n\t})\n}\n\nfunc seedSimpleTestData(db *sql.DB) error {\n\t// Generate proper bcrypt hash for \"password\"\n\thashedPassword, err := bcrypt.GenerateFromPassword([]byte(\"password\"), bcrypt.DefaultCost)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to hash password: %w\", err)\n\t}\n\t\n\t// Create test admin user\n\tinsertAdminUser := `\n\tINSERT INTO users (email, password_hash, first_name, last_name, role, status, email_verified, created_at, updated_at)\n\tVALUES ($1, $2, $3, $4, $5, $6, $7, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)`\n\n\t_, err = db.Exec(insertAdminUser, \n\t\t\"admin@fullstack.dev\", \n\t\tstring(hashedPassword), \n\t\t\"Admin\", \n\t\t\"User\", \n\t\tstring(authDomain.RoleAdmin), \n\t\tstring(authDomain.StatusActive), \n\t\ttrue)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to seed admin user: %w\", err)\n\t}\n\n\treturn nil\n}",
      "size": 6143,
      "hash": "9bf611a15f5099043df10c6a7b1ddace6e7d9bf196c9b2a04caab19d0df0f2dc",
      "mappings": [
        {
          "find": "\"github.com/acheevo/fullstack-template/",
          "replace": "\"github.com/{{.GitHubRepo}}/"
        }
      ]
    }
  ],
  "hooks": {
    "post_generate": [
      "go mod tidy",
      "cd frontend \u0026\u0026 npm install"
    ]
  },
  "hash": "b652846d347d6bef80c2ce4016073b6c875e2f5f9b4b3140a0dd81e2931b25b2",
  "env_config": [
    {
      "name": "PORT",
      "description": "Server Configuration",
      "example": "8080"
    },
    {
      "name": "ENVIRONMENT",
      "example": "development"
    },
    {
      "name": "LOG_LEVEL",
      "example": "info"
    },
    {
      "name": "DATABASE_HOST",
      "description": "Database Configuration",
      "example": "localhost"
    },
    {
      "name": "DATABASE_PORT",
      "example": "5432"
    },
    {
      "name": "DATABASE_USER",
      "example": "postgres"
    },
    {
      "name": "DATABASE_PASSWORD",
      "example": "postgres"
    },
    {
      "name": "DATABASE_NAME",
      "example": "fullstack_template"
    },
    {
      "name": "DATABASE_SSL_MODE",
      "example": "disable"
    },
    {
      "name": "DB_MAX_IDLE_CONNS",
      "description": "Database Connection Pool",
      "example": "10"
    },
    {
      "name": "DB_MAX_OPEN_CONNS",
      "example": "100"
    },
    {
      "name": "DB_CONN_MAX_LIFETIME",
      "example": "1h"
    },
    {
      "name": "JWT_SECRET",
      "description": "JWT Configuration",
      "example": "your-super-secret-jwt-key-change-this-in-production"
    },
    {
      "name": "JWT_ACCESS_TOKEN_DURATION",
      "example": "15m"
    },
    {
      "name": "JWT_REFRESH_TOKEN_DURATION",
      "example": "7d"
    },
    {
      "name": "EMAIL_FROM",
      "description": "Email Configuration",
      "example": "noreply@yourapp.com"
    },
    {
      "name": "EMAIL_FROM_NAME",
      "example": "Your App"
    },
    {
      "name": "SMTP_HOST",
      "example": "smtp.gmail.com"
    },
    {
      "name": "SMTP_PORT",
      "example": "587"
    },
    {
      "name": "SMTP_USERNAME",
      "example": "your-email@gmail.com"
    },
    {
      "name": "SMTP_PASSWORD",
      "example": "your-app-password"
    },
    {
      "name": "FRONTEND_URL",
      "description": "Application URLs",
      "example": "http://localhost:3000"
    },
    {
      "name": "BACKEND_URL",
      "example": "http://localhost:8080"
    },
    {
      "name": "BOOTSTRAP_ENABLED",
      "description": "Bootstrap Configuration (Demo Users)",
      "example": "true"
    },
    {
      "name": "ADMIN_EMAIL",
      "example": "admin@example.com"
    },
    {
      "name": "ADMIN_PASSWORD",
      "example": "admin123"
    },
    {
      "name": "DEMO_USER_EMAIL",
      "example": "user@example.com"
    },
    {
      "name": "DEMO_USER_PASSWORD",
      "example": "user1234"
    }
  ]
}